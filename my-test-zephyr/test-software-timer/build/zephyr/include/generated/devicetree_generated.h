/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   /home/giang/zephyrproject/my-test-zephyr/test-software-timer/build/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   $ZEPHYR_BASE/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /soc
 *   4   /soc/interrupt-controller@e000e100
 *   5   /clocks
 *   6   /clocks/clk-hse
 *   7   /clocks/pll
 *   8   /soc/rcc@40023800
 *   9   /soc/adc@40012000
 *   10  /dietemp
 *   11  /memory@20000000
 *   12  /soc/pin-controller@40020000
 *   13  /soc/pin-controller@40020000/i2c1_scl_pb6
 *   14  /soc/pin-controller@40020000/i2c1_sda_pb9
 *   15  /soc/i2c@40005400
 *   16  /smbus1
 *   17  /soc/i2c@40005800
 *   18  /smbus2
 *   19  /soc/i2c@40005c00
 *   20  /smbus3
 *   21  /vbat
 *   22  /vref
 *   23  /clocks/clk-hsi
 *   24  /clocks/clk-lse
 *   25  /clocks/clk-lsi
 *   26  /clocks/plli2s
 *   27  /cpus
 *   28  /cpus/power-states
 *   29  /cpus/power-states/stop
 *   30  /cpus/cpu@0
 *   31  /soc/pin-controller@40020000/gpio@40020000
 *   32  /gpio_keys
 *   33  /gpio_keys/button
 *   34  /soc/pin-controller@40020000/gpio@40020c00
 *   35  /leds
 *   36  /leds/led_3
 *   37  /leds/led_4
 *   38  /leds/led_5
 *   39  /leds/led_6
 *   40  /soc/rcc@40023800/reset-controller
 *   41  /soc/timers@40000800
 *   42  /soc/pin-controller@40020000/tim4_ch1_pd12
 *   43  /soc/pin-controller@40020000/tim4_ch2_pd13
 *   44  /soc/pin-controller@40020000/tim4_ch3_pd14
 *   45  /soc/pin-controller@40020000/tim4_ch4_pd15
 *   46  /soc/timers@40000800/pwm
 *   47  /pwmleds
 *   48  /pwmleds/blue_pwm_led
 *   49  /pwmleds/green_pwm_led
 *   50  /pwmleds/orange_pwm_led
 *   51  /pwmleds/red_pwm_led
 *   52  /soc/dma@40026000
 *   53  /soc/i2s@40003800
 *   54  /soc/i2s@40003c00
 *   55  /soc/dma@40026400
 *   56  /soc/i2s@40013000
 *   57  /soc/i2s@40013400
 *   58  /soc/i2s@40015000
 *   59  /soc/interrupt-controller@40013c00
 *   60  /soc/sdmmc@40012c00
 *   61  /soc/pin-controller@40020000/usart2_rx_pa3
 *   62  /soc/pin-controller@40020000/usart2_tx_pa2
 *   63  /soc/serial@40004400
 *   64  /soc/serial@40011000
 *   65  /soc/serial@40011400
 *   66  /soc/spi@40003800
 *   67  /soc/spi@40003c00
 *   68  /soc/spi@40013000
 *   69  /soc/spi@40013400
 *   70  /soc/spi@40015000
 *   71  /soc/timer@e000e010
 *   72  /otgfs_phy
 *   73  /soc/pin-controller@40020000/usb_otg_fs_dm_pa11
 *   74  /soc/pin-controller@40020000/usb_otg_fs_dp_pa12
 *   75  /soc/usb@50000000
 *   76  /soc/watchdog@40002c00
 *   77  /soc/watchdog@40003000
 *   78  /soc/flash-controller@40023c00
 *   79  /soc/flash-controller@40023c00/flash@8000000
 *   80  /soc/flash-controller@40023c00/flash@8000000/partitions
 *   81  /soc/flash-controller@40023c00/flash@8000000/partitions/partition@0
 *   82  /soc/flash-controller@40023c00/flash@8000000/partitions/partition@20000
 *   83  /soc/flash-controller@40023c00/flash@8000000/partitions/partition@40000
 *   84  /soc/flash-controller@40023c00/flash@8000000/partitions/partition@60000
 *   85  /soc/pin-controller@40020000/gpio@40021000
 *   86  /soc/i2c@40005400/lsm303agr-accel@19
 *   87  /soc/i2c@40005400/lsm303agr-magn@1e
 *   88  /soc/pin-controller@40020000/gpio@40020400
 *   89  /soc/pin-controller@40020000/gpio@40020800
 *   90  /soc/pin-controller@40020000/gpio@40021400
 *   91  /soc/pin-controller@40020000/gpio@40021800
 *   92  /soc/pin-controller@40020000/gpio@40021c00
 *   93  /soc/rtc@40002800
 *   94  /soc/rtc@40002800/backup_regs
 *   95  /soc/timers@40000000
 *   96  /soc/timers@40000000/counter
 *   97  /soc/timers@40000000/pwm
 *   98  /soc/timers@40000000/qdec
 *   99  /soc/timers@40000400
 *   100 /soc/timers@40000400/counter
 *   101 /soc/timers@40000400/pwm
 *   102 /soc/timers@40000400/qdec
 *   103 /soc/timers@40000800/counter
 *   104 /soc/timers@40000800/qdec
 *   105 /soc/timers@40000c00
 *   106 /soc/timers@40000c00/counter
 *   107 /soc/timers@40000c00/pwm
 *   108 /soc/timers@40000c00/qdec
 *   109 /soc/timers@40010000
 *   110 /soc/timers@40010000/pwm
 *   111 /soc/timers@40010000/qdec
 *   112 /soc/timers@40014000
 *   113 /soc/timers@40014000/counter
 *   114 /soc/timers@40014000/pwm
 *   115 /soc/timers@40014400
 *   116 /soc/timers@40014400/counter
 *   117 /soc/timers@40014400/pwm
 *   118 /soc/timers@40014800
 *   119 /soc/timers@40014800/counter
 *   120 /soc/timers@40014800/pwm
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/* Used to remove brackets from around a single argument */
#define DT_DEBRACKET_INTERNAL(...) __VA_ARGS__

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"

/* Helper macros for child nodes of this node. */
#define DT_N_CHILD_NUM 16
#define DT_N_CHILD_NUM_STATUS_OKAY 10
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory_20000000) fn(DT_N_S_clocks) fn(DT_N_S_dietemp) fn(DT_N_S_vref) fn(DT_N_S_vbat) fn(DT_N_S_otgfs_phy) fn(DT_N_S_smbus1) fn(DT_N_S_smbus2) fn(DT_N_S_smbus3) fn(DT_N_S_leds) fn(DT_N_S_pwmleds) fn(DT_N_S_gpio_keys)
#define DT_N_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_dietemp) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vref) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vbat) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_otgfs_phy) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_smbus1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_smbus2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_smbus3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_dietemp, __VA_ARGS__) fn(DT_N_S_vref, __VA_ARGS__) fn(DT_N_S_vbat, __VA_ARGS__) fn(DT_N_S_otgfs_phy, __VA_ARGS__) fn(DT_N_S_smbus1, __VA_ARGS__) fn(DT_N_S_smbus2, __VA_ARGS__) fn(DT_N_S_smbus3, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_pwmleds, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_dietemp, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vref, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vbat, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_otgfs_phy, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_smbus1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_smbus2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_smbus3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory_20000000) fn(DT_N_S_clocks) fn(DT_N_S_otgfs_phy) fn(DT_N_S_leds) fn(DT_N_S_pwmleds) fn(DT_N_S_gpio_keys)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_otgfs_phy) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_otgfs_phy, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_pwmleds, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_otgfs_phy, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_ORD 0
#define DT_N_ORD_STR_SORTABLE 00000

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /soc */ \
	5, /* /clocks */ \
	10, /* /dietemp */ \
	11, /* /memory@20000000 */ \
	16, /* /smbus1 */ \
	18, /* /smbus2 */ \
	20, /* /smbus3 */ \
	21, /* /vbat */ \
	22, /* /vref */ \
	27, /* /cpus */ \
	32, /* /gpio_keys */ \
	35, /* /leds */ \
	47, /* /pwmleds */ \
	72, /* /otgfs_phy */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_st_stm32f411e_disco DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_IRQ_LEVEL 0
#define DT_N_COMPAT_MATCHES_st_stm32f411e_disco 1
#define DT_N_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_0 "stm32f411e-disco"
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"st,stm32f411e-disco"}
#define DT_N_P_compatible_IDX_0 "st,stm32f411e-disco"
#define DT_N_P_compatible_IDX_0_STRING_UNQUOTED st,stm32f411e-disco
#define DT_N_P_compatible_IDX_0_STRING_TOKEN st_stm32f411e_disco
#define DT_N_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32F411E_DISCO
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_aliases_CHILD_NUM 0
#define DT_N_S_aliases_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1
#define DT_N_S_aliases_ORD_STR_SORTABLE 00001

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_IRQ_LEVEL 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_chosen_CHILD_NUM 0
#define DT_N_S_chosen_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2
#define DT_N_S_chosen_ORD_STR_SORTABLE 00002

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_IRQ_LEVEL 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_CHILD_NUM 38
#define DT_N_S_soc_CHILD_NUM_STATUS_OKAY 11
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40023c00) fn(DT_N_S_soc_S_rcc_40023800) fn(DT_N_S_soc_S_interrupt_controller_40013c00) fn(DT_N_S_soc_S_pin_controller_40020000) fn(DT_N_S_soc_S_watchdog_40003000) fn(DT_N_S_soc_S_watchdog_40002c00) fn(DT_N_S_soc_S_serial_40011000) fn(DT_N_S_soc_S_serial_40004400) fn(DT_N_S_soc_S_serial_40011400) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005800) fn(DT_N_S_soc_S_i2c_40005c00) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_usb_50000000) fn(DT_N_S_soc_S_timers_40010000) fn(DT_N_S_soc_S_timers_40000000) fn(DT_N_S_soc_S_timers_40000400) fn(DT_N_S_soc_S_timers_40000800) fn(DT_N_S_soc_S_timers_40000c00) fn(DT_N_S_soc_S_timers_40014000) fn(DT_N_S_soc_S_timers_40014400) fn(DT_N_S_soc_S_timers_40014800) fn(DT_N_S_soc_S_rtc_40002800) fn(DT_N_S_soc_S_adc_40012000) fn(DT_N_S_soc_S_dma_40026000) fn(DT_N_S_soc_S_dma_40026400) fn(DT_N_S_soc_S_sdmmc_40012c00) fn(DT_N_S_soc_S_spi_40003800) fn(DT_N_S_soc_S_spi_40003c00) fn(DT_N_S_soc_S_spi_40013400) fn(DT_N_S_soc_S_i2s_40003800) fn(DT_N_S_soc_S_i2s_40003c00) fn(DT_N_S_soc_S_spi_40015000) fn(DT_N_S_soc_S_i2s_40013000) fn(DT_N_S_soc_S_i2s_40013400) fn(DT_N_S_soc_S_i2s_40015000)
#define DT_N_S_soc_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40023c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rcc_40023800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_40013c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40003000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40002c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40011000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40011400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40013000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usb_50000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40010000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40002800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_40012000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40026000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40026400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sdmmc_40012c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40013400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2s_40003800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2s_40003c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40015000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2s_40013000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2s_40013400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2s_40015000)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40023c00, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_40023800, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_40013c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40002c00, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40011000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40011400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005c00, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_usb_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40010000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000c00, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014800, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40002800, __VA_ARGS__) fn(DT_N_S_soc_S_adc_40012000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40026000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40026400, __VA_ARGS__) fn(DT_N_S_soc_S_sdmmc_40012c00, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003c00, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013400, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_40003800, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_40003c00, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_40013400, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_40015000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40023c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rcc_40023800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_40013c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40002c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40011000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40011400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usb_50000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40010000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40002800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_40012000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40026000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40026400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sdmmc_40012c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40013400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2s_40003800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2s_40003c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40015000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2s_40013000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2s_40013400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2s_40015000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40023c00) fn(DT_N_S_soc_S_rcc_40023800) fn(DT_N_S_soc_S_interrupt_controller_40013c00) fn(DT_N_S_soc_S_pin_controller_40020000) fn(DT_N_S_soc_S_serial_40004400) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_usb_50000000) fn(DT_N_S_soc_S_timers_40000800) fn(DT_N_S_soc_S_rtc_40002800)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40023c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rcc_40023800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_40013c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usb_50000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40002800)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40023c00, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_40023800, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_40013c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_usb_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40002800, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40023c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rcc_40023800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_40013c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usb_50000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40002800, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 3
#define DT_N_S_soc_ORD_STR_SORTABLE 00003

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40023800 */ \
	9, /* /soc/adc@40012000 */ \
	12, /* /soc/pin-controller@40020000 */ \
	15, /* /soc/i2c@40005400 */ \
	17, /* /soc/i2c@40005800 */ \
	19, /* /soc/i2c@40005c00 */ \
	41, /* /soc/timers@40000800 */ \
	52, /* /soc/dma@40026000 */ \
	53, /* /soc/i2s@40003800 */ \
	54, /* /soc/i2s@40003c00 */ \
	55, /* /soc/dma@40026400 */ \
	56, /* /soc/i2s@40013000 */ \
	57, /* /soc/i2s@40013400 */ \
	58, /* /soc/i2s@40015000 */ \
	59, /* /soc/interrupt-controller@40013c00 */ \
	60, /* /soc/sdmmc@40012c00 */ \
	63, /* /soc/serial@40004400 */ \
	64, /* /soc/serial@40011000 */ \
	65, /* /soc/serial@40011400 */ \
	66, /* /soc/spi@40003800 */ \
	67, /* /soc/spi@40003c00 */ \
	68, /* /soc/spi@40013000 */ \
	69, /* /soc/spi@40013400 */ \
	70, /* /soc/spi@40015000 */ \
	71, /* /soc/timer@e000e010 */ \
	75, /* /soc/usb@50000000 */ \
	76, /* /soc/watchdog@40002c00 */ \
	77, /* /soc/watchdog@40003000 */ \
	78, /* /soc/flash-controller@40023c00 */ \
	93, /* /soc/rtc@40002800 */ \
	95, /* /soc/timers@40000000 */ \
	99, /* /soc/timers@40000400 */ \
	105, /* /soc/timers@40000c00 */ \
	109, /* /soc/timers@40010000 */ \
	112, /* /soc/timers@40014000 */ \
	115, /* /soc/timers@40014400 */ \
	118, /* /soc/timers@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_st_stm32f411 DT_N_S_soc
#define DT_N_INST_0_st_stm32f4   DT_N_S_soc
#define DT_N_INST_0_simple_bus   DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_IRQ_LEVEL 0
#define DT_N_S_soc_COMPAT_MATCHES_st_stm32f411 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_COMPAT_MODEL_IDX_0 "stm32f411"
#define DT_N_S_soc_COMPAT_MATCHES_st_stm32f4 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_COMPAT_MODEL_IDX_1 "stm32f4"
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"st,stm32f411", "st,stm32f4", "simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0 "st,stm32f411"
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UNQUOTED st,stm32f411
#define DT_N_S_soc_P_compatible_IDX_0_STRING_TOKEN st_stm32f411
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32F411
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_1 "st,stm32f4"
#define DT_N_S_soc_P_compatible_IDX_1_STRING_UNQUOTED st,stm32f4
#define DT_N_S_soc_P_compatible_IDX_1_STRING_TOKEN st_stm32f4
#define DT_N_S_soc_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32F4
#define DT_N_S_soc_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_2 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_2_STRING_UNQUOTED simple-bus
#define DT_N_S_soc_P_compatible_IDX_2_STRING_TOKEN simple_bus
#define DT_N_S_soc_P_compatible_IDX_2_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_P_compatible_IDX_2_EXISTS 1
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0) \
	fn(DT_N_S_soc, compatible, 1) \
	fn(DT_N_S_soc, compatible, 2)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 2)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 1, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 3
#define DT_N_S_soc_P_compatible_EXISTS 1
#define DT_N_S_soc_P_ranges_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v7m-nvic):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/arm,v7m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 4
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD_STR_SORTABLE 00004

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	9, /* /soc/adc@40012000 */ \
	15, /* /soc/i2c@40005400 */ \
	17, /* /soc/i2c@40005800 */ \
	19, /* /soc/i2c@40005c00 */ \
	41, /* /soc/timers@40000800 */ \
	52, /* /soc/dma@40026000 */ \
	53, /* /soc/i2s@40003800 */ \
	54, /* /soc/i2s@40003c00 */ \
	55, /* /soc/dma@40026400 */ \
	56, /* /soc/i2s@40013000 */ \
	57, /* /soc/i2s@40013400 */ \
	58, /* /soc/i2s@40015000 */ \
	59, /* /soc/interrupt-controller@40013c00 */ \
	60, /* /soc/sdmmc@40012c00 */ \
	63, /* /soc/serial@40004400 */ \
	64, /* /soc/serial@40011000 */ \
	65, /* /soc/serial@40011400 */ \
	66, /* /soc/spi@40003800 */ \
	67, /* /soc/spi@40003c00 */ \
	68, /* /soc/spi@40013000 */ \
	69, /* /soc/spi@40013400 */ \
	70, /* /soc/spi@40015000 */ \
	75, /* /soc/usb@50000000 */ \
	76, /* /soc/watchdog@40002c00 */ \
	78, /* /soc/flash-controller@40023c00 */ \
	93, /* /soc/rtc@40002800 */ \
	95, /* /soc/timers@40000000 */ \
	99, /* /soc/timers@40000400 */ \
	105, /* /soc/timers@40000c00 */ \
	109, /* /soc/timers@40010000 */ \
	112, /* /soc/timers@40014000 */ \
	115, /* /soc/timers@40014400 */ \
	118, /* /soc/timers@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v7m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_LEVEL 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v7m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0 "v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v7m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UNQUOTED arm,v7m-nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_TOKEN arm_v7m_nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_V7M_NVIC
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 4
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1

/*
 * Devicetree node: /clocks
 *
 * Node identifier: DT_N_S_clocks
 */

/* Node's full path: */
#define DT_N_S_clocks_PATH "/clocks"

/* Node's name with unit-address: */
#define DT_N_S_clocks_FULL_NAME "clocks"

/* Node parent (/) identifier: */
#define DT_N_S_clocks_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_CHILD_NUM 6
#define DT_N_S_clocks_CHILD_NUM_STATUS_OKAY 3
#define DT_N_S_clocks_FOREACH_CHILD(fn) fn(DT_N_S_clocks_S_clk_hse) fn(DT_N_S_clocks_S_clk_hsi) fn(DT_N_S_clocks_S_clk_lse) fn(DT_N_S_clocks_S_clk_lsi) fn(DT_N_S_clocks_S_pll) fn(DT_N_S_clocks_S_plli2s)
#define DT_N_S_clocks_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_hse) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_hsi) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lse) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lsi) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_plli2s)
#define DT_N_S_clocks_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hsi, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lsi, __VA_ARGS__) fn(DT_N_S_clocks_S_pll, __VA_ARGS__) fn(DT_N_S_clocks_S_plli2s, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_hsi, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lse, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lsi, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_plli2s, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_clocks_S_clk_hse) fn(DT_N_S_clocks_S_clk_lsi) fn(DT_N_S_clocks_S_pll)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_hse) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lsi) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lsi, __VA_ARGS__) fn(DT_N_S_clocks_S_pll, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_lsi, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_clocks_ORD 5
#define DT_N_S_clocks_ORD_STR_SORTABLE 00005

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_SUPPORTS_ORDS \
	6, /* /clocks/clk-hse */ \
	7, /* /clocks/pll */ \
	23, /* /clocks/clk-hsi */ \
	24, /* /clocks/clk-lse */ \
	25, /* /clocks/clk-lsi */ \
	26, /* /clocks/plli2s */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_REG_NUM 0
#define DT_N_S_clocks_RANGES_NUM 0
#define DT_N_S_clocks_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_IRQ_NUM 0
#define DT_N_S_clocks_IRQ_LEVEL 0
#define DT_N_S_clocks_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /clocks/clk-hse
 *
 * Node identifier: DT_N_S_clocks_S_clk_hse
 *
 * Binding (compatible = st,stm32-hse-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32-hse-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_hse_PATH "/clocks/clk-hse"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_hse_FULL_NAME "clk-hse"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_hse_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_hse_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_hse_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_hse_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_hse_ORD 6
#define DT_N_S_clocks_S_clk_hse_ORD_STR_SORTABLE 00006

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_hse_REQUIRES_ORDS \
	5, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_hse_SUPPORTS_ORDS \
	7, /* /clocks/pll */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_hse_EXISTS 1
#define DT_N_INST_0_st_stm32_hse_clock DT_N_S_clocks_S_clk_hse
#define DT_N_NODELABEL_clk_hse         DT_N_S_clocks_S_clk_hse

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_hse_REG_NUM 0
#define DT_N_S_clocks_S_clk_hse_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_hse_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_hse_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_hse_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_hse_COMPAT_MATCHES_st_stm32_hse_clock 1
#define DT_N_S_clocks_S_clk_hse_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_clocks_S_clk_hse_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_COMPAT_MODEL_IDX_0 "stm32-hse-clock"
#define DT_N_S_clocks_S_clk_hse_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_hse_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_hse_P_clock_frequency 8000000
#define DT_N_S_clocks_S_clk_hse_P_clock_frequency_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_P_hse_bypass 0
#define DT_N_S_clocks_S_clk_hse_P_hse_bypass_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_P_css_enabled 0
#define DT_N_S_clocks_S_clk_hse_P_css_enabled_EXISTS 1

/*
 * Devicetree node: /clocks/pll
 *
 * Node identifier: DT_N_S_clocks_S_pll
 *
 * Binding (compatible = st,stm32f4-pll-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32f4-pll-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_pll_PATH "/clocks/pll"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_pll_FULL_NAME "pll"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_pll_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_pll_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_pll_CHILD_NUM 0
#define DT_N_S_clocks_S_pll_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_pll_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_pll_ORD 7
#define DT_N_S_clocks_S_pll_ORD_STR_SORTABLE 00007

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_pll_REQUIRES_ORDS \
	5, /* /clocks */ \
	6, /* /clocks/clk-hse */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_pll_SUPPORTS_ORDS \
	8, /* /soc/rcc@40023800 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_pll_EXISTS 1
#define DT_N_INST_0_st_stm32f4_pll_clock DT_N_S_clocks_S_pll
#define DT_N_NODELABEL_pll               DT_N_S_clocks_S_pll

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_pll_REG_NUM 0
#define DT_N_S_clocks_S_pll_RANGES_NUM 0
#define DT_N_S_clocks_S_pll_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_pll_IRQ_NUM 0
#define DT_N_S_clocks_S_pll_IRQ_LEVEL 0
#define DT_N_S_clocks_S_pll_COMPAT_MATCHES_st_stm32f4_pll_clock 1
#define DT_N_S_clocks_S_pll_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_clocks_S_pll_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_COMPAT_MODEL_IDX_0 "stm32f4-pll-clock"
#define DT_N_S_clocks_S_pll_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_pll_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_pll_P_wakeup_source 0
#define DT_N_S_clocks_S_pll_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_pll_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_pll_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_clocks_S_pll_P_status "okay"
#define DT_N_S_clocks_S_pll_P_status_STRING_UNQUOTED okay
#define DT_N_S_clocks_S_pll_P_status_STRING_TOKEN okay
#define DT_N_S_clocks_S_pll_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_clocks_S_pll_P_status_IDX_0 "okay"
#define DT_N_S_clocks_S_pll_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_P_status_ENUM_IDX 1
#define DT_N_S_clocks_S_pll_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_clocks_S_pll_P_status_ENUM_TOKEN okay
#define DT_N_S_clocks_S_pll_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_clocks_S_pll_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, status, 0)
#define DT_N_S_clocks_S_pll_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll, status, 0)
#define DT_N_S_clocks_S_pll_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_status_LEN 1
#define DT_N_S_clocks_S_pll_P_status_EXISTS 1
#define DT_N_S_clocks_S_pll_P_compatible {"st,stm32f4-pll-clock"}
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0 "st,stm32f4-pll-clock"
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0_STRING_UNQUOTED st,stm32f4-pll-clock
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0_STRING_TOKEN st_stm32f4_pll_clock
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32F4_PLL_CLOCK
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, compatible, 0)
#define DT_N_S_clocks_S_pll_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll, compatible, 0)
#define DT_N_S_clocks_S_pll_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_compatible_LEN 1
#define DT_N_S_clocks_S_pll_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_pll_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_P_clocks_IDX_0_PH DT_N_S_clocks_S_clk_hse
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, clocks, 0)
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pll, clocks, 0)
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pll, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_clocks_LEN 1
#define DT_N_S_clocks_S_pll_P_clocks_EXISTS 1
#define DT_N_S_clocks_S_pll_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_pll_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_pll_P_div_m 4
#define DT_N_S_clocks_S_pll_P_div_m_EXISTS 1
#define DT_N_S_clocks_S_pll_P_mul_n 96
#define DT_N_S_clocks_S_pll_P_mul_n_EXISTS 1
#define DT_N_S_clocks_S_pll_P_div_p 2
#define DT_N_S_clocks_S_pll_P_div_p_ENUM_IDX 0
#define DT_N_S_clocks_S_pll_P_div_p_ENUM_VAL_2_EXISTS 1
#define DT_N_S_clocks_S_pll_P_div_p_EXISTS 1
#define DT_N_S_clocks_S_pll_P_div_q 4
#define DT_N_S_clocks_S_pll_P_div_q_EXISTS 1

/*
 * Devicetree node: /soc/rcc@40023800
 *
 * Node identifier: DT_N_S_soc_S_rcc_40023800
 *
 * Binding (compatible = st,stm32-rcc):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32-rcc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rcc_40023800_PATH "/soc/rcc@40023800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rcc_40023800_FULL_NAME "rcc@40023800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rcc_40023800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rcc_40023800_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rcc_40023800_CHILD_NUM 1
#define DT_N_S_soc_S_rcc_40023800_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_rcc_40023800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_rcc_40023800_S_reset_controller)
#define DT_N_S_soc_S_rcc_40023800_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_rcc_40023800_S_reset_controller)
#define DT_N_S_soc_S_rcc_40023800_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_40023800_S_reset_controller, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40023800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rcc_40023800_S_reset_controller, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40023800_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_rcc_40023800_S_reset_controller)
#define DT_N_S_soc_S_rcc_40023800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_rcc_40023800_S_reset_controller)
#define DT_N_S_soc_S_rcc_40023800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_40023800_S_reset_controller, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40023800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rcc_40023800_S_reset_controller, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rcc_40023800_ORD 8
#define DT_N_S_soc_S_rcc_40023800_ORD_STR_SORTABLE 00008

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rcc_40023800_REQUIRES_ORDS \
	3, /* /soc */ \
	7, /* /clocks/pll */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rcc_40023800_SUPPORTS_ORDS \
	9, /* /soc/adc@40012000 */ \
	15, /* /soc/i2c@40005400 */ \
	17, /* /soc/i2c@40005800 */ \
	19, /* /soc/i2c@40005c00 */ \
	31, /* /soc/pin-controller@40020000/gpio@40020000 */ \
	34, /* /soc/pin-controller@40020000/gpio@40020c00 */ \
	40, /* /soc/rcc@40023800/reset-controller */ \
	41, /* /soc/timers@40000800 */ \
	52, /* /soc/dma@40026000 */ \
	53, /* /soc/i2s@40003800 */ \
	54, /* /soc/i2s@40003c00 */ \
	55, /* /soc/dma@40026400 */ \
	56, /* /soc/i2s@40013000 */ \
	57, /* /soc/i2s@40013400 */ \
	58, /* /soc/i2s@40015000 */ \
	60, /* /soc/sdmmc@40012c00 */ \
	63, /* /soc/serial@40004400 */ \
	64, /* /soc/serial@40011000 */ \
	65, /* /soc/serial@40011400 */ \
	66, /* /soc/spi@40003800 */ \
	67, /* /soc/spi@40003c00 */ \
	68, /* /soc/spi@40013000 */ \
	69, /* /soc/spi@40013400 */ \
	70, /* /soc/spi@40015000 */ \
	75, /* /soc/usb@50000000 */ \
	76, /* /soc/watchdog@40002c00 */ \
	85, /* /soc/pin-controller@40020000/gpio@40021000 */ \
	88, /* /soc/pin-controller@40020000/gpio@40020400 */ \
	89, /* /soc/pin-controller@40020000/gpio@40020800 */ \
	90, /* /soc/pin-controller@40020000/gpio@40021400 */ \
	91, /* /soc/pin-controller@40020000/gpio@40021800 */ \
	92, /* /soc/pin-controller@40020000/gpio@40021c00 */ \
	93, /* /soc/rtc@40002800 */ \
	95, /* /soc/timers@40000000 */ \
	99, /* /soc/timers@40000400 */ \
	105, /* /soc/timers@40000c00 */ \
	109, /* /soc/timers@40010000 */ \
	112, /* /soc/timers@40014000 */ \
	115, /* /soc/timers@40014400 */ \
	118, /* /soc/timers@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rcc_40023800_EXISTS 1
#define DT_N_INST_0_st_stm32_rcc DT_N_S_soc_S_rcc_40023800
#define DT_N_NODELABEL_rcc       DT_N_S_soc_S_rcc_40023800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rcc_40023800_REG_NUM 1
#define DT_N_S_soc_S_rcc_40023800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_REG_IDX_0_VAL_ADDRESS 1073887232 /* 0x40023800 */
#define DT_N_S_soc_S_rcc_40023800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_rcc_40023800_RANGES_NUM 0
#define DT_N_S_soc_S_rcc_40023800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rcc_40023800_IRQ_NUM 0
#define DT_N_S_soc_S_rcc_40023800_IRQ_LEVEL 0
#define DT_N_S_soc_S_rcc_40023800_COMPAT_MATCHES_st_stm32_rcc 1
#define DT_N_S_soc_S_rcc_40023800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_rcc_40023800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_COMPAT_MODEL_IDX_0 "stm32-rcc"
#define DT_N_S_soc_S_rcc_40023800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rcc_40023800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rcc_40023800_P_wakeup_source 0
#define DT_N_S_soc_S_rcc_40023800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rcc_40023800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_compatible {"st,stm32-rcc"}
#define DT_N_S_soc_S_rcc_40023800_P_compatible_IDX_0 "st,stm32-rcc"
#define DT_N_S_soc_S_rcc_40023800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-rcc
#define DT_N_S_soc_S_rcc_40023800_P_compatible_IDX_0_STRING_TOKEN st_stm32_rcc
#define DT_N_S_soc_S_rcc_40023800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_RCC
#define DT_N_S_soc_S_rcc_40023800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_40023800, compatible, 0)
#define DT_N_S_soc_S_rcc_40023800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rcc_40023800, compatible, 0)
#define DT_N_S_soc_S_rcc_40023800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_40023800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40023800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rcc_40023800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40023800_P_compatible_LEN 1
#define DT_N_S_soc_S_rcc_40023800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_reg {1073887232 /* 0x40023800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_rcc_40023800_P_reg_IDX_0 1073887232
#define DT_N_S_soc_S_rcc_40023800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_rcc_40023800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_reg_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_clocks_IDX_0_PH DT_N_S_clocks_S_pll
#define DT_N_S_soc_S_rcc_40023800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_40023800, clocks, 0)
#define DT_N_S_soc_S_rcc_40023800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rcc_40023800, clocks, 0)
#define DT_N_S_soc_S_rcc_40023800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_40023800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40023800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rcc_40023800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40023800_P_clocks_LEN 1
#define DT_N_S_soc_S_rcc_40023800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_rcc_40023800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_clock_frequency 96000000
#define DT_N_S_soc_S_rcc_40023800_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_ahb_prescaler 1
#define DT_N_S_soc_S_rcc_40023800_P_ahb_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_rcc_40023800_P_ahb_prescaler_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_ahb_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_apb1_prescaler 2
#define DT_N_S_soc_S_rcc_40023800_P_apb1_prescaler_ENUM_IDX 1
#define DT_N_S_soc_S_rcc_40023800_P_apb1_prescaler_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_apb1_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_apb2_prescaler 1
#define DT_N_S_soc_S_rcc_40023800_P_apb2_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_rcc_40023800_P_apb2_prescaler_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_apb2_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_undershoot_prevention 0
#define DT_N_S_soc_S_rcc_40023800_P_undershoot_prevention_EXISTS 1

/*
 * Devicetree node: /soc/adc@40012000
 *
 * Node identifier: DT_N_S_soc_S_adc_40012000
 *
 * Binding (compatible = st,stm32f4-adc):
 *   $ZEPHYR_BASE/dts/bindings/adc/st,stm32f4-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_40012000_PATH "/soc/adc@40012000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_40012000_FULL_NAME "adc@40012000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_40012000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_40012000_CHILD_IDX 25

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_40012000_CHILD_NUM 0
#define DT_N_S_soc_S_adc_40012000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_adc_40012000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_40012000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_40012000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_40012000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_40012000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_40012000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_40012000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_40012000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_40012000_ORD 9
#define DT_N_S_soc_S_adc_40012000_ORD_STR_SORTABLE 00009

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_40012000_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_40012000_SUPPORTS_ORDS \
	10, /* /dietemp */ \
	21, /* /vbat */ \
	22, /* /vref */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_40012000_EXISTS 1
#define DT_N_INST_0_st_stm32f4_adc DT_N_S_soc_S_adc_40012000
#define DT_N_INST_0_st_stm32_adc   DT_N_S_soc_S_adc_40012000
#define DT_N_NODELABEL_adc1        DT_N_S_soc_S_adc_40012000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_40012000_REG_NUM 1
#define DT_N_S_soc_S_adc_40012000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_REG_IDX_0_VAL_ADDRESS 1073815552 /* 0x40012000 */
#define DT_N_S_soc_S_adc_40012000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_adc_40012000_RANGES_NUM 0
#define DT_N_S_soc_S_adc_40012000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_40012000_IRQ_NUM 1
#define DT_N_S_soc_S_adc_40012000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_IRQ_IDX_0_VAL_irq 18
#define DT_N_S_soc_S_adc_40012000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_adc_40012000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_adc_40012000_IRQ_LEVEL 1
#define DT_N_S_soc_S_adc_40012000_COMPAT_MATCHES_st_stm32f4_adc 1
#define DT_N_S_soc_S_adc_40012000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_adc_40012000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_COMPAT_MODEL_IDX_0 "stm32f4-adc"
#define DT_N_S_soc_S_adc_40012000_COMPAT_MATCHES_st_stm32_adc 1
#define DT_N_S_soc_S_adc_40012000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_adc_40012000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_COMPAT_MODEL_IDX_1 "stm32-adc"
#define DT_N_S_soc_S_adc_40012000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_40012000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_40012000_P_wakeup_source 0
#define DT_N_S_soc_S_adc_40012000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_adc_40012000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_status "disabled"
#define DT_N_S_soc_S_adc_40012000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_adc_40012000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_adc_40012000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_40012000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_adc_40012000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_adc_40012000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_adc_40012000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_40012000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012000, status, 0)
#define DT_N_S_soc_S_adc_40012000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40012000, status, 0)
#define DT_N_S_soc_S_adc_40012000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40012000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012000_P_status_LEN 1
#define DT_N_S_soc_S_adc_40012000_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_compatible {"st,stm32f4-adc", "st,stm32-adc"}
#define DT_N_S_soc_S_adc_40012000_P_compatible_IDX_0 "st,stm32f4-adc"
#define DT_N_S_soc_S_adc_40012000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32f4-adc
#define DT_N_S_soc_S_adc_40012000_P_compatible_IDX_0_STRING_TOKEN st_stm32f4_adc
#define DT_N_S_soc_S_adc_40012000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32F4_ADC
#define DT_N_S_soc_S_adc_40012000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_compatible_IDX_1 "st,stm32-adc"
#define DT_N_S_soc_S_adc_40012000_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-adc
#define DT_N_S_soc_S_adc_40012000_P_compatible_IDX_1_STRING_TOKEN st_stm32_adc
#define DT_N_S_soc_S_adc_40012000_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_ADC
#define DT_N_S_soc_S_adc_40012000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012000, compatible, 0) \
	fn(DT_N_S_soc_S_adc_40012000, compatible, 1)
#define DT_N_S_soc_S_adc_40012000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40012000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012000, compatible, 1)
#define DT_N_S_soc_S_adc_40012000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40012000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012000_P_compatible_LEN 2
#define DT_N_S_soc_S_adc_40012000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_reg {1073815552 /* 0x40012000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_adc_40012000_P_reg_IDX_0 1073815552
#define DT_N_S_soc_S_adc_40012000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_adc_40012000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_interrupts {18 /* 0x12 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_adc_40012000_P_interrupts_IDX_0 18
#define DT_N_S_soc_S_adc_40012000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_adc_40012000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_adc_40012000_P_clocks_IDX_0_VAL_bus 68
#define DT_N_S_soc_S_adc_40012000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_clocks_IDX_0_VAL_bits 256
#define DT_N_S_soc_S_adc_40012000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012000, clocks, 0)
#define DT_N_S_soc_S_adc_40012000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40012000, clocks, 0)
#define DT_N_S_soc_S_adc_40012000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40012000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012000_P_clocks_LEN 1
#define DT_N_S_soc_S_adc_40012000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_adc_40012000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_st_adc_clock_source 1
#define DT_N_S_soc_S_adc_40012000_P_st_adc_clock_source_ENUM_IDX 0
#define DT_N_S_soc_S_adc_40012000_P_st_adc_clock_source_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_st_adc_clock_source_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_vref_mv 3300
#define DT_N_S_soc_S_adc_40012000_P_vref_mv_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_resolutions {6322180 /* 0x607804 */, 5339140 /* 0x517804 */, 4356100 /* 0x427804 */, 3373060 /* 0x337804 */}
#define DT_N_S_soc_S_adc_40012000_P_resolutions_IDX_0 6322180
#define DT_N_S_soc_S_adc_40012000_P_resolutions_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_resolutions_IDX_1 5339140
#define DT_N_S_soc_S_adc_40012000_P_resolutions_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_resolutions_IDX_2 4356100
#define DT_N_S_soc_S_adc_40012000_P_resolutions_IDX_2_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_resolutions_IDX_3 3373060
#define DT_N_S_soc_S_adc_40012000_P_resolutions_IDX_3_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_resolutions_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012000, resolutions, 0) \
	fn(DT_N_S_soc_S_adc_40012000, resolutions, 1) \
	fn(DT_N_S_soc_S_adc_40012000, resolutions, 2) \
	fn(DT_N_S_soc_S_adc_40012000, resolutions, 3)
#define DT_N_S_soc_S_adc_40012000_P_resolutions_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40012000, resolutions, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012000, resolutions, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012000, resolutions, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012000, resolutions, 3)
#define DT_N_S_soc_S_adc_40012000_P_resolutions_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012000, resolutions, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, resolutions, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, resolutions, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, resolutions, 3, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012000_P_resolutions_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40012000, resolutions, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012000, resolutions, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012000, resolutions, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012000, resolutions, 3, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012000_P_resolutions_LEN 4
#define DT_N_S_soc_S_adc_40012000_P_resolutions_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_sampling_times {3 /* 0x3 */, 15 /* 0xf */, 28 /* 0x1c */, 56 /* 0x38 */, 84 /* 0x54 */, 112 /* 0x70 */, 144 /* 0x90 */, 480 /* 0x1e0 */}
#define DT_N_S_soc_S_adc_40012000_P_sampling_times_IDX_0 3
#define DT_N_S_soc_S_adc_40012000_P_sampling_times_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_sampling_times_IDX_1 15
#define DT_N_S_soc_S_adc_40012000_P_sampling_times_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_sampling_times_IDX_2 28
#define DT_N_S_soc_S_adc_40012000_P_sampling_times_IDX_2_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_sampling_times_IDX_3 56
#define DT_N_S_soc_S_adc_40012000_P_sampling_times_IDX_3_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_sampling_times_IDX_4 84
#define DT_N_S_soc_S_adc_40012000_P_sampling_times_IDX_4_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_sampling_times_IDX_5 112
#define DT_N_S_soc_S_adc_40012000_P_sampling_times_IDX_5_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_sampling_times_IDX_6 144
#define DT_N_S_soc_S_adc_40012000_P_sampling_times_IDX_6_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_sampling_times_IDX_7 480
#define DT_N_S_soc_S_adc_40012000_P_sampling_times_IDX_7_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_sampling_times_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012000, sampling_times, 0) \
	fn(DT_N_S_soc_S_adc_40012000, sampling_times, 1) \
	fn(DT_N_S_soc_S_adc_40012000, sampling_times, 2) \
	fn(DT_N_S_soc_S_adc_40012000, sampling_times, 3) \
	fn(DT_N_S_soc_S_adc_40012000, sampling_times, 4) \
	fn(DT_N_S_soc_S_adc_40012000, sampling_times, 5) \
	fn(DT_N_S_soc_S_adc_40012000, sampling_times, 6) \
	fn(DT_N_S_soc_S_adc_40012000, sampling_times, 7)
#define DT_N_S_soc_S_adc_40012000_P_sampling_times_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40012000, sampling_times, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012000, sampling_times, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012000, sampling_times, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012000, sampling_times, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012000, sampling_times, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012000, sampling_times, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012000, sampling_times, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012000, sampling_times, 7)
#define DT_N_S_soc_S_adc_40012000_P_sampling_times_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012000, sampling_times, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, sampling_times, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, sampling_times, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, sampling_times, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, sampling_times, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, sampling_times, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, sampling_times, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, sampling_times, 7, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012000_P_sampling_times_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40012000, sampling_times, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012000, sampling_times, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012000, sampling_times, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012000, sampling_times, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012000, sampling_times, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012000, sampling_times, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012000, sampling_times, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_adc_40012000, sampling_times, 7, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012000_P_sampling_times_LEN 8
#define DT_N_S_soc_S_adc_40012000_P_sampling_times_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_st_adc_sequencer 1
#define DT_N_S_soc_S_adc_40012000_P_st_adc_sequencer_ENUM_IDX 1
#define DT_N_S_soc_S_adc_40012000_P_st_adc_sequencer_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_st_adc_sequencer_EXISTS 1

/*
 * Devicetree node: /dietemp
 *
 * Node identifier: DT_N_S_dietemp
 *
 * Binding (compatible = st,stm32-temp-cal):
 *   $ZEPHYR_BASE/dts/bindings/sensor/st,stm32-temp-cal.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_dietemp_PATH "/dietemp"

/* Node's name with unit-address: */
#define DT_N_S_dietemp_FULL_NAME "dietemp"

/* Node parent (/) identifier: */
#define DT_N_S_dietemp_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_dietemp_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_dietemp_CHILD_NUM 0
#define DT_N_S_dietemp_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_dietemp_FOREACH_CHILD(fn) 
#define DT_N_S_dietemp_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_dietemp_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_dietemp_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_dietemp_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_dietemp_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_dietemp_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_dietemp_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_dietemp_ORD 10
#define DT_N_S_dietemp_ORD_STR_SORTABLE 00010

/* Ordinals for what this node depends on directly: */
#define DT_N_S_dietemp_REQUIRES_ORDS \
	0, /* / */ \
	9, /* /soc/adc@40012000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_dietemp_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_dietemp_EXISTS 1
#define DT_N_INST_0_st_stm32_temp_cal DT_N_S_dietemp
#define DT_N_NODELABEL_die_temp       DT_N_S_dietemp

/* Macros for properties that are special in the specification: */
#define DT_N_S_dietemp_REG_NUM 0
#define DT_N_S_dietemp_RANGES_NUM 0
#define DT_N_S_dietemp_FOREACH_RANGE(fn) 
#define DT_N_S_dietemp_IRQ_NUM 0
#define DT_N_S_dietemp_IRQ_LEVEL 0
#define DT_N_S_dietemp_COMPAT_MATCHES_st_stm32_temp_cal 1
#define DT_N_S_dietemp_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_dietemp_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_dietemp_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_dietemp_COMPAT_MODEL_IDX_0 "stm32-temp-cal"
#define DT_N_S_dietemp_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_dietemp_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_dietemp_P_wakeup_source 0
#define DT_N_S_dietemp_P_wakeup_source_EXISTS 1
#define DT_N_S_dietemp_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_dietemp_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_dietemp_P_status "disabled"
#define DT_N_S_dietemp_P_status_STRING_UNQUOTED disabled
#define DT_N_S_dietemp_P_status_STRING_TOKEN disabled
#define DT_N_S_dietemp_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_dietemp_P_status_IDX_0 "disabled"
#define DT_N_S_dietemp_P_status_IDX_0_EXISTS 1
#define DT_N_S_dietemp_P_status_ENUM_IDX 2
#define DT_N_S_dietemp_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_dietemp_P_status_ENUM_TOKEN disabled
#define DT_N_S_dietemp_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_dietemp_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_dietemp, status, 0)
#define DT_N_S_dietemp_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_dietemp, status, 0)
#define DT_N_S_dietemp_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_dietemp, status, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_dietemp, status, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_status_LEN 1
#define DT_N_S_dietemp_P_status_EXISTS 1
#define DT_N_S_dietemp_P_compatible {"st,stm32-temp-cal"}
#define DT_N_S_dietemp_P_compatible_IDX_0 "st,stm32-temp-cal"
#define DT_N_S_dietemp_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-temp-cal
#define DT_N_S_dietemp_P_compatible_IDX_0_STRING_TOKEN st_stm32_temp_cal
#define DT_N_S_dietemp_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TEMP_CAL
#define DT_N_S_dietemp_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_dietemp_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_dietemp, compatible, 0)
#define DT_N_S_dietemp_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_dietemp, compatible, 0)
#define DT_N_S_dietemp_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_dietemp, compatible, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_dietemp, compatible, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_compatible_LEN 1
#define DT_N_S_dietemp_P_compatible_EXISTS 1
#define DT_N_S_dietemp_P_io_channels_IDX_0_EXISTS 1
#define DT_N_S_dietemp_P_io_channels_IDX_0_PH DT_N_S_soc_S_adc_40012000
#define DT_N_S_dietemp_P_io_channels_IDX_0_VAL_input 18
#define DT_N_S_dietemp_P_io_channels_IDX_0_VAL_input_EXISTS 1
#define DT_N_S_dietemp_P_io_channels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_dietemp, io_channels, 0)
#define DT_N_S_dietemp_P_io_channels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_dietemp, io_channels, 0)
#define DT_N_S_dietemp_P_io_channels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_dietemp, io_channels, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_io_channels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_dietemp, io_channels, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_io_channels_LEN 1
#define DT_N_S_dietemp_P_io_channels_EXISTS 1
#define DT_N_S_dietemp_P_zephyr_deferred_init 0
#define DT_N_S_dietemp_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal1_addr 536836652
#define DT_N_S_dietemp_P_ts_cal1_addr_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal1_temp 30
#define DT_N_S_dietemp_P_ts_cal1_temp_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal_vrefanalog 3300
#define DT_N_S_dietemp_P_ts_cal_vrefanalog_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal_resolution 12
#define DT_N_S_dietemp_P_ts_cal_resolution_ENUM_IDX 0
#define DT_N_S_dietemp_P_ts_cal_resolution_ENUM_VAL_12_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal_resolution_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal2_addr 536836654
#define DT_N_S_dietemp_P_ts_cal2_addr_EXISTS 1
#define DT_N_S_dietemp_P_ts_cal2_temp 110
#define DT_N_S_dietemp_P_ts_cal2_temp_EXISTS 1

/*
 * Devicetree node: /memory@20000000
 *
 * Node identifier: DT_N_S_memory_20000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_20000000_PATH "/memory@20000000"

/* Node's name with unit-address: */
#define DT_N_S_memory_20000000_FULL_NAME "memory@20000000"

/* Node parent (/) identifier: */
#define DT_N_S_memory_20000000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_memory_20000000_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_memory_20000000_CHILD_NUM 0
#define DT_N_S_memory_20000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_memory_20000000_FOREACH_CHILD(fn) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_memory_20000000_ORD 11
#define DT_N_S_memory_20000000_ORD_STR_SORTABLE 00011

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_20000000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_20000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_20000000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_memory_20000000
#define DT_N_NODELABEL_sram0  DT_N_S_memory_20000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_memory_20000000_REG_NUM 1
#define DT_N_S_memory_20000000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_REG_IDX_0_VAL_ADDRESS 536870912 /* 0x20000000 */
#define DT_N_S_memory_20000000_REG_IDX_0_VAL_SIZE 131072 /* 0x20000 */
#define DT_N_S_memory_20000000_RANGES_NUM 0
#define DT_N_S_memory_20000000_FOREACH_RANGE(fn) 
#define DT_N_S_memory_20000000_IRQ_NUM 0
#define DT_N_S_memory_20000000_IRQ_LEVEL 0
#define DT_N_S_memory_20000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory_20000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_memory_20000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_memory_20000000_P_wakeup_source 0
#define DT_N_S_memory_20000000_P_wakeup_source_EXISTS 1
#define DT_N_S_memory_20000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_memory_20000000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_memory_20000000_P_compatible {"mmio-sram"}
#define DT_N_S_memory_20000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_memory_20000000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_memory_20000000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_memory_20000000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_memory_20000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_20000000, compatible, 0)
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory_20000000, compatible, 0)
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory_20000000_P_compatible_LEN 1
#define DT_N_S_memory_20000000_P_compatible_EXISTS 1
#define DT_N_S_memory_20000000_P_reg {536870912 /* 0x20000000 */, 131072 /* 0x20000 */}
#define DT_N_S_memory_20000000_P_reg_IDX_0 536870912
#define DT_N_S_memory_20000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_P_reg_IDX_1 131072
#define DT_N_S_memory_20000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_20000000_P_reg_EXISTS 1
#define DT_N_S_memory_20000000_P_zephyr_deferred_init 0
#define DT_N_S_memory_20000000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000
 *
 * Binding (compatible = st,stm32-pinctrl):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/st,stm32-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_PATH "/soc/pin-controller@40020000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_FULL_NAME "pin-controller@40020000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_CHILD_NUM 18
#define DT_N_S_soc_S_pin_controller_40020000_CHILD_NUM_STATUS_OKAY 18
#define DT_N_S_soc_S_pin_controller_40020000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12)
#define DT_N_S_soc_S_pin_controller_40020000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12)
#define DT_N_S_soc_S_pin_controller_40020000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12)
#define DT_N_S_soc_S_pin_controller_40020000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12)
#define DT_N_S_soc_S_pin_controller_40020000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_ORD 12
#define DT_N_S_soc_S_pin_controller_40020000_ORD_STR_SORTABLE 00012

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_SUPPORTS_ORDS \
	13, /* /soc/pin-controller@40020000/i2c1_scl_pb6 */ \
	14, /* /soc/pin-controller@40020000/i2c1_sda_pb9 */ \
	31, /* /soc/pin-controller@40020000/gpio@40020000 */ \
	34, /* /soc/pin-controller@40020000/gpio@40020c00 */ \
	42, /* /soc/pin-controller@40020000/tim4_ch1_pd12 */ \
	43, /* /soc/pin-controller@40020000/tim4_ch2_pd13 */ \
	44, /* /soc/pin-controller@40020000/tim4_ch3_pd14 */ \
	45, /* /soc/pin-controller@40020000/tim4_ch4_pd15 */ \
	61, /* /soc/pin-controller@40020000/usart2_rx_pa3 */ \
	62, /* /soc/pin-controller@40020000/usart2_tx_pa2 */ \
	73, /* /soc/pin-controller@40020000/usb_otg_fs_dm_pa11 */ \
	74, /* /soc/pin-controller@40020000/usb_otg_fs_dp_pa12 */ \
	85, /* /soc/pin-controller@40020000/gpio@40021000 */ \
	88, /* /soc/pin-controller@40020000/gpio@40020400 */ \
	89, /* /soc/pin-controller@40020000/gpio@40020800 */ \
	90, /* /soc/pin-controller@40020000/gpio@40021400 */ \
	91, /* /soc/pin-controller@40020000/gpio@40021800 */ \
	92, /* /soc/pin-controller@40020000/gpio@40021c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_EXISTS 1
#define DT_N_INST_0_st_stm32_pinctrl DT_N_S_soc_S_pin_controller_40020000
#define DT_N_NODELABEL_pinctrl       DT_N_S_soc_S_pin_controller_40020000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_REG_IDX_0_VAL_ADDRESS 1073872896 /* 0x40020000 */
#define DT_N_S_soc_S_pin_controller_40020000_REG_IDX_0_VAL_SIZE 8192 /* 0x2000 */
#define DT_N_S_soc_S_pin_controller_40020000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40020000_COMPAT_MATCHES_st_stm32_pinctrl 1
#define DT_N_S_soc_S_pin_controller_40020000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_40020000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_COMPAT_MODEL_IDX_0 "stm32-pinctrl"
#define DT_N_S_soc_S_pin_controller_40020000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_40020000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible {"st,stm32-pinctrl"}
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_IDX_0 "st,stm32-pinctrl"
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pinctrl
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_IDX_0_STRING_TOKEN st_stm32_pinctrl
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PINCTRL
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_reg {1073872896 /* 0x40020000 */, 8192 /* 0x2000 */}
#define DT_N_S_soc_S_pin_controller_40020000_P_reg_IDX_0 1073872896
#define DT_N_S_soc_S_pin_controller_40020000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_reg_IDX_1 8192
#define DT_N_S_soc_S_pin_controller_40020000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_40020000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_remap_pa11 0
#define DT_N_S_soc_S_pin_controller_40020000_P_remap_pa11_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_remap_pa12 0
#define DT_N_S_soc_S_pin_controller_40020000_P_remap_pa12_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_remap_pa11_pa12 0
#define DT_N_S_soc_S_pin_controller_40020000_P_remap_pa11_pa12_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2c1_scl_pb6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_PATH "/soc/pin-controller@40020000/i2c1_scl_pb6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_FULL_NAME "i2c1_scl_pb6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_ORD 13
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_ORD_STR_SORTABLE 00013

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_SUPPORTS_ORDS \
	15, /* /soc/i2c@40005400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_EXISTS 1
#define DT_N_NODELABEL_i2c1_scl_pb6 DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_pinmux 708
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_slew_rate_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2c1_sda_pb9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_PATH "/soc/pin-controller@40020000/i2c1_sda_pb9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_FULL_NAME "i2c1_sda_pb9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_ORD 14
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_ORD_STR_SORTABLE 00014

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_SUPPORTS_ORDS \
	15, /* /soc/i2c@40005400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_EXISTS 1
#define DT_N_NODELABEL_i2c1_sda_pb9 DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_pinmux 804
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005400
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005400
 *
 * Binding (compatible = st,stm32-i2c-v1):
 *   $ZEPHYR_BASE/dts/bindings/i2c/st,stm32-i2c-v1.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005400_PATH "/soc/i2c@40005400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005400_FULL_NAME "i2c@40005400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005400_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40005400_CHILD_NUM 2
#define DT_N_S_soc_S_i2c_40005400_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19)
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19)
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19)
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19)
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005400_ORD 15
#define DT_N_S_soc_S_i2c_40005400_ORD_STR_SORTABLE 00015

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005400_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40023800 */ \
	13, /* /soc/pin-controller@40020000/i2c1_scl_pb6 */ \
	14, /* /soc/pin-controller@40020000/i2c1_sda_pb9 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005400_SUPPORTS_ORDS \
	16, /* /smbus1 */ \
	86, /* /soc/i2c@40005400/lsm303agr-accel@19 */ \
	87, /* /soc/i2c@40005400/lsm303agr-magn@1e */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005400_EXISTS 1
#define DT_N_INST_0_st_stm32_i2c_v1 DT_N_S_soc_S_i2c_40005400
#define DT_N_NODELABEL_i2c1         DT_N_S_soc_S_i2c_40005400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005400_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_VAL_ADDRESS 1073763328 /* 0x40005400 */
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005400_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005400_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq 31
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq 32
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_40005400_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_CONTROLLER DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_CONTROLLER DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_i2c_40005400_COMPAT_MATCHES_st_stm32_i2c_v1 1
#define DT_N_S_soc_S_i2c_40005400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_40005400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_COMPAT_MODEL_IDX_0 "stm32-i2c-v1"
#define DT_N_S_soc_S_i2c_40005400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005400_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40005400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_status "okay"
#define DT_N_S_soc_S_i2c_40005400_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c_40005400_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40005400_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005400_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_i2c_40005400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, status, 0)
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, status, 0)
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible {"st,stm32-i2c-v1"}
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0 "st,stm32-i2c-v1"
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-i2c-v1
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0_STRING_TOKEN st_stm32_i2c_v1
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_I2C_V1
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_reg {1073763328 /* 0x40005400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_0 1073763328
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts {31 /* 0x1f */, 0 /* 0x0 */, 32 /* 0x20 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_0 31
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_2 32
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0_STRING_UNQUOTED event
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0_STRING_TOKEN event
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN EVENT
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1_STRING_UNQUOTED error
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1_STRING_TOKEN error
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN ERROR
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bits 2097152
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_40005400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clock_frequency 400000
#define DT_N_S_soc_S_i2c_40005400_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_sq_size 4
#define DT_N_S_soc_S_i2c_40005400_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_cq_size 4
#define DT_N_S_soc_S_i2c_40005400_P_cq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /smbus1
 *
 * Node identifier: DT_N_S_smbus1
 *
 * Binding (compatible = st,stm32-smbus):
 *   $ZEPHYR_BASE/dts/bindings/smbus/st,stm32-smbus.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_smbus1_PATH "/smbus1"

/* Node's name with unit-address: */
#define DT_N_S_smbus1_FULL_NAME "smbus1"

/* Node parent (/) identifier: */
#define DT_N_S_smbus1_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_smbus1_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_smbus1_CHILD_NUM 0
#define DT_N_S_smbus1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_smbus1_FOREACH_CHILD(fn) 
#define DT_N_S_smbus1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_smbus1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_smbus1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_smbus1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_smbus1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_smbus1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_smbus1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_smbus1_ORD 16
#define DT_N_S_smbus1_ORD_STR_SORTABLE 00016

/* Ordinals for what this node depends on directly: */
#define DT_N_S_smbus1_REQUIRES_ORDS \
	0, /* / */ \
	15, /* /soc/i2c@40005400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_smbus1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_smbus1_EXISTS 1
#define DT_N_INST_0_st_stm32_smbus DT_N_S_smbus1
#define DT_N_NODELABEL_smbus1      DT_N_S_smbus1

/* Macros for properties that are special in the specification: */
#define DT_N_S_smbus1_REG_NUM 0
#define DT_N_S_smbus1_RANGES_NUM 0
#define DT_N_S_smbus1_FOREACH_RANGE(fn) 
#define DT_N_S_smbus1_IRQ_NUM 0
#define DT_N_S_smbus1_IRQ_LEVEL 0
#define DT_N_S_smbus1_COMPAT_MATCHES_st_stm32_smbus 1
#define DT_N_S_smbus1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_smbus1_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_smbus1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_smbus1_COMPAT_MODEL_IDX_0 "stm32-smbus"
#define DT_N_S_smbus1_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_smbus1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_smbus1_P_wakeup_source 0
#define DT_N_S_smbus1_P_wakeup_source_EXISTS 1
#define DT_N_S_smbus1_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_smbus1_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_smbus1_P_status "disabled"
#define DT_N_S_smbus1_P_status_STRING_UNQUOTED disabled
#define DT_N_S_smbus1_P_status_STRING_TOKEN disabled
#define DT_N_S_smbus1_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_smbus1_P_status_IDX_0 "disabled"
#define DT_N_S_smbus1_P_status_IDX_0_EXISTS 1
#define DT_N_S_smbus1_P_status_ENUM_IDX 2
#define DT_N_S_smbus1_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_smbus1_P_status_ENUM_TOKEN disabled
#define DT_N_S_smbus1_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_smbus1_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus1, status, 0)
#define DT_N_S_smbus1_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus1, status, 0)
#define DT_N_S_smbus1_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus1, status, 0, __VA_ARGS__)
#define DT_N_S_smbus1_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus1, status, 0, __VA_ARGS__)
#define DT_N_S_smbus1_P_status_LEN 1
#define DT_N_S_smbus1_P_status_EXISTS 1
#define DT_N_S_smbus1_P_compatible {"st,stm32-smbus"}
#define DT_N_S_smbus1_P_compatible_IDX_0 "st,stm32-smbus"
#define DT_N_S_smbus1_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-smbus
#define DT_N_S_smbus1_P_compatible_IDX_0_STRING_TOKEN st_stm32_smbus
#define DT_N_S_smbus1_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_SMBUS
#define DT_N_S_smbus1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_smbus1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus1, compatible, 0)
#define DT_N_S_smbus1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus1, compatible, 0)
#define DT_N_S_smbus1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus1, compatible, 0, __VA_ARGS__)
#define DT_N_S_smbus1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus1, compatible, 0, __VA_ARGS__)
#define DT_N_S_smbus1_P_compatible_LEN 1
#define DT_N_S_smbus1_P_compatible_EXISTS 1
#define DT_N_S_smbus1_P_zephyr_deferred_init 0
#define DT_N_S_smbus1_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_smbus1_P_i2c DT_N_S_soc_S_i2c_40005400
#define DT_N_S_smbus1_P_i2c_IDX_0 DT_N_S_soc_S_i2c_40005400
#define DT_N_S_smbus1_P_i2c_IDX_0_PH DT_N_S_soc_S_i2c_40005400
#define DT_N_S_smbus1_P_i2c_IDX_0_EXISTS 1
#define DT_N_S_smbus1_P_i2c_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus1, i2c, 0)
#define DT_N_S_smbus1_P_i2c_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus1, i2c, 0)
#define DT_N_S_smbus1_P_i2c_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus1, i2c, 0, __VA_ARGS__)
#define DT_N_S_smbus1_P_i2c_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus1, i2c, 0, __VA_ARGS__)
#define DT_N_S_smbus1_P_i2c_LEN 1
#define DT_N_S_smbus1_P_i2c_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005800
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005800
 *
 * Binding (compatible = st,stm32-i2c-v1):
 *   $ZEPHYR_BASE/dts/bindings/i2c/st,stm32-i2c-v1.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005800_PATH "/soc/i2c@40005800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005800_FULL_NAME "i2c@40005800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005800_CHILD_IDX 12

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40005800_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_40005800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005800_ORD 17
#define DT_N_S_soc_S_i2c_40005800_ORD_STR_SORTABLE 00017

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005800_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005800_SUPPORTS_ORDS \
	18, /* /smbus2 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005800_EXISTS 1
#define DT_N_INST_1_st_stm32_i2c_v1 DT_N_S_soc_S_i2c_40005800
#define DT_N_NODELABEL_i2c2         DT_N_S_soc_S_i2c_40005800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005800_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_VAL_ADDRESS 1073764352 /* 0x40005800 */
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005800_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005800_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq 33
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_irq 34
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_40005800_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_CONTROLLER DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_CONTROLLER DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_i2c_40005800_COMPAT_MATCHES_st_stm32_i2c_v1 1
#define DT_N_S_soc_S_i2c_40005800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_40005800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_COMPAT_MODEL_IDX_0 "stm32-i2c-v1"
#define DT_N_S_soc_S_i2c_40005800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005800_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40005800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_status "disabled"
#define DT_N_S_soc_S_i2c_40005800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_40005800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40005800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40005800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_40005800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40005800_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40005800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, status, 0)
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, status, 0)
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible {"st,stm32-i2c-v1"}
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0 "st,stm32-i2c-v1"
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-i2c-v1
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0_STRING_TOKEN st_stm32_i2c_v1
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_I2C_V1
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_reg {1073764352 /* 0x40005800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_0 1073764352
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts {33 /* 0x21 */, 0 /* 0x0 */, 34 /* 0x22 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_0 33
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_2 34
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0_STRING_UNQUOTED event
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0_STRING_TOKEN event
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN EVENT
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1_STRING_UNQUOTED error
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1_STRING_TOKEN error
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN ERROR
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bits 4194304
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_40005800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40005800_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_sq_size 4
#define DT_N_S_soc_S_i2c_40005800_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_cq_size 4
#define DT_N_S_soc_S_i2c_40005800_P_cq_size_EXISTS 1

/*
 * Devicetree node: /smbus2
 *
 * Node identifier: DT_N_S_smbus2
 *
 * Binding (compatible = st,stm32-smbus):
 *   $ZEPHYR_BASE/dts/bindings/smbus/st,stm32-smbus.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_smbus2_PATH "/smbus2"

/* Node's name with unit-address: */
#define DT_N_S_smbus2_FULL_NAME "smbus2"

/* Node parent (/) identifier: */
#define DT_N_S_smbus2_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_smbus2_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_smbus2_CHILD_NUM 0
#define DT_N_S_smbus2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_smbus2_FOREACH_CHILD(fn) 
#define DT_N_S_smbus2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_smbus2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_smbus2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_smbus2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_smbus2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_smbus2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_smbus2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_smbus2_ORD 18
#define DT_N_S_smbus2_ORD_STR_SORTABLE 00018

/* Ordinals for what this node depends on directly: */
#define DT_N_S_smbus2_REQUIRES_ORDS \
	0, /* / */ \
	17, /* /soc/i2c@40005800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_smbus2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_smbus2_EXISTS 1
#define DT_N_INST_1_st_stm32_smbus DT_N_S_smbus2
#define DT_N_NODELABEL_smbus2      DT_N_S_smbus2

/* Macros for properties that are special in the specification: */
#define DT_N_S_smbus2_REG_NUM 0
#define DT_N_S_smbus2_RANGES_NUM 0
#define DT_N_S_smbus2_FOREACH_RANGE(fn) 
#define DT_N_S_smbus2_IRQ_NUM 0
#define DT_N_S_smbus2_IRQ_LEVEL 0
#define DT_N_S_smbus2_COMPAT_MATCHES_st_stm32_smbus 1
#define DT_N_S_smbus2_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_smbus2_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_smbus2_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_smbus2_COMPAT_MODEL_IDX_0 "stm32-smbus"
#define DT_N_S_smbus2_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_smbus2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_smbus2_P_wakeup_source 0
#define DT_N_S_smbus2_P_wakeup_source_EXISTS 1
#define DT_N_S_smbus2_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_smbus2_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_smbus2_P_status "disabled"
#define DT_N_S_smbus2_P_status_STRING_UNQUOTED disabled
#define DT_N_S_smbus2_P_status_STRING_TOKEN disabled
#define DT_N_S_smbus2_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_smbus2_P_status_IDX_0 "disabled"
#define DT_N_S_smbus2_P_status_IDX_0_EXISTS 1
#define DT_N_S_smbus2_P_status_ENUM_IDX 2
#define DT_N_S_smbus2_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_smbus2_P_status_ENUM_TOKEN disabled
#define DT_N_S_smbus2_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_smbus2_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus2, status, 0)
#define DT_N_S_smbus2_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus2, status, 0)
#define DT_N_S_smbus2_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus2, status, 0, __VA_ARGS__)
#define DT_N_S_smbus2_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus2, status, 0, __VA_ARGS__)
#define DT_N_S_smbus2_P_status_LEN 1
#define DT_N_S_smbus2_P_status_EXISTS 1
#define DT_N_S_smbus2_P_compatible {"st,stm32-smbus"}
#define DT_N_S_smbus2_P_compatible_IDX_0 "st,stm32-smbus"
#define DT_N_S_smbus2_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-smbus
#define DT_N_S_smbus2_P_compatible_IDX_0_STRING_TOKEN st_stm32_smbus
#define DT_N_S_smbus2_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_SMBUS
#define DT_N_S_smbus2_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_smbus2_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus2, compatible, 0)
#define DT_N_S_smbus2_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus2, compatible, 0)
#define DT_N_S_smbus2_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus2, compatible, 0, __VA_ARGS__)
#define DT_N_S_smbus2_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus2, compatible, 0, __VA_ARGS__)
#define DT_N_S_smbus2_P_compatible_LEN 1
#define DT_N_S_smbus2_P_compatible_EXISTS 1
#define DT_N_S_smbus2_P_zephyr_deferred_init 0
#define DT_N_S_smbus2_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_smbus2_P_i2c DT_N_S_soc_S_i2c_40005800
#define DT_N_S_smbus2_P_i2c_IDX_0 DT_N_S_soc_S_i2c_40005800
#define DT_N_S_smbus2_P_i2c_IDX_0_PH DT_N_S_soc_S_i2c_40005800
#define DT_N_S_smbus2_P_i2c_IDX_0_EXISTS 1
#define DT_N_S_smbus2_P_i2c_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus2, i2c, 0)
#define DT_N_S_smbus2_P_i2c_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus2, i2c, 0)
#define DT_N_S_smbus2_P_i2c_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus2, i2c, 0, __VA_ARGS__)
#define DT_N_S_smbus2_P_i2c_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus2, i2c, 0, __VA_ARGS__)
#define DT_N_S_smbus2_P_i2c_LEN 1
#define DT_N_S_smbus2_P_i2c_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005c00
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005c00
 *
 * Binding (compatible = st,stm32-i2c-v1):
 *   $ZEPHYR_BASE/dts/bindings/i2c/st,stm32-i2c-v1.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005c00_PATH "/soc/i2c@40005c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005c00_FULL_NAME "i2c@40005c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005c00_CHILD_IDX 13

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40005c00_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_40005c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005c00_ORD 19
#define DT_N_S_soc_S_i2c_40005c00_ORD_STR_SORTABLE 00019

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005c00_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005c00_SUPPORTS_ORDS \
	20, /* /smbus3 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005c00_EXISTS 1
#define DT_N_INST_2_st_stm32_i2c_v1 DT_N_S_soc_S_i2c_40005c00
#define DT_N_NODELABEL_i2c3         DT_N_S_soc_S_i2c_40005c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005c00_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_REG_IDX_0_VAL_ADDRESS 1073765376 /* 0x40005c00 */
#define DT_N_S_soc_S_i2c_40005c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005c00_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_irq 72
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_irq 73
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_40005c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_CONTROLLER DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_error_CONTROLLER DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_i2c_40005c00_COMPAT_MATCHES_st_stm32_i2c_v1 1
#define DT_N_S_soc_S_i2c_40005c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_40005c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_COMPAT_MODEL_IDX_0 "stm32-i2c-v1"
#define DT_N_S_soc_S_i2c_40005c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005c00_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40005c00_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_status "disabled"
#define DT_N_S_soc_S_i2c_40005c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_40005c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40005c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40005c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_40005c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40005c00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40005c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40005c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, status, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005c00, status, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40005c00_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_compatible {"st,stm32-i2c-v1"}
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_IDX_0 "st,stm32-i2c-v1"
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-i2c-v1
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_i2c_v1
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_I2C_V1
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, compatible, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005c00, compatible, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_reg {1073765376 /* 0x40005c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005c00_P_reg_IDX_0 1073765376
#define DT_N_S_soc_S_i2c_40005c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts {72 /* 0x48 */, 0 /* 0x0 */, 73 /* 0x49 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_0 72
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_2 73
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_0_STRING_UNQUOTED event
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_0_STRING_TOKEN event
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN EVENT
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_1_STRING_UNQUOTED error
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_1_STRING_TOKEN error
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN ERROR
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_VAL_bits 8388608
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, clocks, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005c00, clocks, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_40005c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40005c00_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_sq_size 4
#define DT_N_S_soc_S_i2c_40005c00_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_cq_size 4
#define DT_N_S_soc_S_i2c_40005c00_P_cq_size_EXISTS 1

/*
 * Devicetree node: /smbus3
 *
 * Node identifier: DT_N_S_smbus3
 *
 * Binding (compatible = st,stm32-smbus):
 *   $ZEPHYR_BASE/dts/bindings/smbus/st,stm32-smbus.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_smbus3_PATH "/smbus3"

/* Node's name with unit-address: */
#define DT_N_S_smbus3_FULL_NAME "smbus3"

/* Node parent (/) identifier: */
#define DT_N_S_smbus3_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_smbus3_CHILD_IDX 12

/* Helper macros for child nodes of this node. */
#define DT_N_S_smbus3_CHILD_NUM 0
#define DT_N_S_smbus3_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_smbus3_FOREACH_CHILD(fn) 
#define DT_N_S_smbus3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_smbus3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_smbus3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_smbus3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_smbus3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_smbus3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_smbus3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_smbus3_ORD 20
#define DT_N_S_smbus3_ORD_STR_SORTABLE 00020

/* Ordinals for what this node depends on directly: */
#define DT_N_S_smbus3_REQUIRES_ORDS \
	0, /* / */ \
	19, /* /soc/i2c@40005c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_smbus3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_smbus3_EXISTS 1
#define DT_N_INST_2_st_stm32_smbus DT_N_S_smbus3
#define DT_N_NODELABEL_smbus3      DT_N_S_smbus3

/* Macros for properties that are special in the specification: */
#define DT_N_S_smbus3_REG_NUM 0
#define DT_N_S_smbus3_RANGES_NUM 0
#define DT_N_S_smbus3_FOREACH_RANGE(fn) 
#define DT_N_S_smbus3_IRQ_NUM 0
#define DT_N_S_smbus3_IRQ_LEVEL 0
#define DT_N_S_smbus3_COMPAT_MATCHES_st_stm32_smbus 1
#define DT_N_S_smbus3_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_smbus3_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_smbus3_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_smbus3_COMPAT_MODEL_IDX_0 "stm32-smbus"
#define DT_N_S_smbus3_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_smbus3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_smbus3_P_wakeup_source 0
#define DT_N_S_smbus3_P_wakeup_source_EXISTS 1
#define DT_N_S_smbus3_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_smbus3_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_smbus3_P_status "disabled"
#define DT_N_S_smbus3_P_status_STRING_UNQUOTED disabled
#define DT_N_S_smbus3_P_status_STRING_TOKEN disabled
#define DT_N_S_smbus3_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_smbus3_P_status_IDX_0 "disabled"
#define DT_N_S_smbus3_P_status_IDX_0_EXISTS 1
#define DT_N_S_smbus3_P_status_ENUM_IDX 2
#define DT_N_S_smbus3_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_smbus3_P_status_ENUM_TOKEN disabled
#define DT_N_S_smbus3_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_smbus3_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus3, status, 0)
#define DT_N_S_smbus3_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus3, status, 0)
#define DT_N_S_smbus3_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus3, status, 0, __VA_ARGS__)
#define DT_N_S_smbus3_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus3, status, 0, __VA_ARGS__)
#define DT_N_S_smbus3_P_status_LEN 1
#define DT_N_S_smbus3_P_status_EXISTS 1
#define DT_N_S_smbus3_P_compatible {"st,stm32-smbus"}
#define DT_N_S_smbus3_P_compatible_IDX_0 "st,stm32-smbus"
#define DT_N_S_smbus3_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-smbus
#define DT_N_S_smbus3_P_compatible_IDX_0_STRING_TOKEN st_stm32_smbus
#define DT_N_S_smbus3_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_SMBUS
#define DT_N_S_smbus3_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_smbus3_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus3, compatible, 0)
#define DT_N_S_smbus3_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus3, compatible, 0)
#define DT_N_S_smbus3_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus3, compatible, 0, __VA_ARGS__)
#define DT_N_S_smbus3_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus3, compatible, 0, __VA_ARGS__)
#define DT_N_S_smbus3_P_compatible_LEN 1
#define DT_N_S_smbus3_P_compatible_EXISTS 1
#define DT_N_S_smbus3_P_zephyr_deferred_init 0
#define DT_N_S_smbus3_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_smbus3_P_i2c DT_N_S_soc_S_i2c_40005c00
#define DT_N_S_smbus3_P_i2c_IDX_0 DT_N_S_soc_S_i2c_40005c00
#define DT_N_S_smbus3_P_i2c_IDX_0_PH DT_N_S_soc_S_i2c_40005c00
#define DT_N_S_smbus3_P_i2c_IDX_0_EXISTS 1
#define DT_N_S_smbus3_P_i2c_FOREACH_PROP_ELEM(fn) fn(DT_N_S_smbus3, i2c, 0)
#define DT_N_S_smbus3_P_i2c_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_smbus3, i2c, 0)
#define DT_N_S_smbus3_P_i2c_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_smbus3, i2c, 0, __VA_ARGS__)
#define DT_N_S_smbus3_P_i2c_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_smbus3, i2c, 0, __VA_ARGS__)
#define DT_N_S_smbus3_P_i2c_LEN 1
#define DT_N_S_smbus3_P_i2c_EXISTS 1

/*
 * Devicetree node: /vbat
 *
 * Node identifier: DT_N_S_vbat
 *
 * Binding (compatible = st,stm32-vbat):
 *   $ZEPHYR_BASE/dts/bindings/sensor/st,stm32-vbat.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_vbat_PATH "/vbat"

/* Node's name with unit-address: */
#define DT_N_S_vbat_FULL_NAME "vbat"

/* Node parent (/) identifier: */
#define DT_N_S_vbat_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_vbat_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_vbat_CHILD_NUM 0
#define DT_N_S_vbat_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_vbat_FOREACH_CHILD(fn) 
#define DT_N_S_vbat_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_vbat_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_vbat_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_vbat_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_vbat_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_vbat_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_vbat_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_vbat_ORD 21
#define DT_N_S_vbat_ORD_STR_SORTABLE 00021

/* Ordinals for what this node depends on directly: */
#define DT_N_S_vbat_REQUIRES_ORDS \
	0, /* / */ \
	9, /* /soc/adc@40012000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_vbat_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_vbat_EXISTS 1
#define DT_N_INST_0_st_stm32_vbat DT_N_S_vbat
#define DT_N_NODELABEL_vbat       DT_N_S_vbat

/* Macros for properties that are special in the specification: */
#define DT_N_S_vbat_REG_NUM 0
#define DT_N_S_vbat_RANGES_NUM 0
#define DT_N_S_vbat_FOREACH_RANGE(fn) 
#define DT_N_S_vbat_IRQ_NUM 0
#define DT_N_S_vbat_IRQ_LEVEL 0
#define DT_N_S_vbat_COMPAT_MATCHES_st_stm32_vbat 1
#define DT_N_S_vbat_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_vbat_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_vbat_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_vbat_COMPAT_MODEL_IDX_0 "stm32-vbat"
#define DT_N_S_vbat_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_vbat_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_vbat_P_wakeup_source 0
#define DT_N_S_vbat_P_wakeup_source_EXISTS 1
#define DT_N_S_vbat_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_vbat_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_vbat_P_status "disabled"
#define DT_N_S_vbat_P_status_STRING_UNQUOTED disabled
#define DT_N_S_vbat_P_status_STRING_TOKEN disabled
#define DT_N_S_vbat_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_vbat_P_status_IDX_0 "disabled"
#define DT_N_S_vbat_P_status_IDX_0_EXISTS 1
#define DT_N_S_vbat_P_status_ENUM_IDX 2
#define DT_N_S_vbat_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_vbat_P_status_ENUM_TOKEN disabled
#define DT_N_S_vbat_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_vbat_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vbat, status, 0)
#define DT_N_S_vbat_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vbat, status, 0)
#define DT_N_S_vbat_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vbat, status, 0, __VA_ARGS__)
#define DT_N_S_vbat_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vbat, status, 0, __VA_ARGS__)
#define DT_N_S_vbat_P_status_LEN 1
#define DT_N_S_vbat_P_status_EXISTS 1
#define DT_N_S_vbat_P_compatible {"st,stm32-vbat"}
#define DT_N_S_vbat_P_compatible_IDX_0 "st,stm32-vbat"
#define DT_N_S_vbat_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-vbat
#define DT_N_S_vbat_P_compatible_IDX_0_STRING_TOKEN st_stm32_vbat
#define DT_N_S_vbat_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_VBAT
#define DT_N_S_vbat_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_vbat_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vbat, compatible, 0)
#define DT_N_S_vbat_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vbat, compatible, 0)
#define DT_N_S_vbat_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vbat, compatible, 0, __VA_ARGS__)
#define DT_N_S_vbat_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vbat, compatible, 0, __VA_ARGS__)
#define DT_N_S_vbat_P_compatible_LEN 1
#define DT_N_S_vbat_P_compatible_EXISTS 1
#define DT_N_S_vbat_P_io_channels_IDX_0_EXISTS 1
#define DT_N_S_vbat_P_io_channels_IDX_0_PH DT_N_S_soc_S_adc_40012000
#define DT_N_S_vbat_P_io_channels_IDX_0_VAL_input 18
#define DT_N_S_vbat_P_io_channels_IDX_0_VAL_input_EXISTS 1
#define DT_N_S_vbat_P_io_channels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vbat, io_channels, 0)
#define DT_N_S_vbat_P_io_channels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vbat, io_channels, 0)
#define DT_N_S_vbat_P_io_channels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vbat, io_channels, 0, __VA_ARGS__)
#define DT_N_S_vbat_P_io_channels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vbat, io_channels, 0, __VA_ARGS__)
#define DT_N_S_vbat_P_io_channels_LEN 1
#define DT_N_S_vbat_P_io_channels_EXISTS 1
#define DT_N_S_vbat_P_zephyr_deferred_init 0
#define DT_N_S_vbat_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_vbat_P_ratio 4
#define DT_N_S_vbat_P_ratio_EXISTS 1

/*
 * Devicetree node: /vref
 *
 * Node identifier: DT_N_S_vref
 *
 * Binding (compatible = st,stm32-vref):
 *   $ZEPHYR_BASE/dts/bindings/sensor/st,stm32-vref.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_vref_PATH "/vref"

/* Node's name with unit-address: */
#define DT_N_S_vref_FULL_NAME "vref"

/* Node parent (/) identifier: */
#define DT_N_S_vref_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_vref_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_vref_CHILD_NUM 0
#define DT_N_S_vref_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_vref_FOREACH_CHILD(fn) 
#define DT_N_S_vref_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_vref_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_vref_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_vref_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_vref_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_vref_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_vref_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_vref_ORD 22
#define DT_N_S_vref_ORD_STR_SORTABLE 00022

/* Ordinals for what this node depends on directly: */
#define DT_N_S_vref_REQUIRES_ORDS \
	0, /* / */ \
	9, /* /soc/adc@40012000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_vref_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_vref_EXISTS 1
#define DT_N_INST_0_st_stm32_vref DT_N_S_vref
#define DT_N_NODELABEL_vref       DT_N_S_vref

/* Macros for properties that are special in the specification: */
#define DT_N_S_vref_REG_NUM 0
#define DT_N_S_vref_RANGES_NUM 0
#define DT_N_S_vref_FOREACH_RANGE(fn) 
#define DT_N_S_vref_IRQ_NUM 0
#define DT_N_S_vref_IRQ_LEVEL 0
#define DT_N_S_vref_COMPAT_MATCHES_st_stm32_vref 1
#define DT_N_S_vref_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_vref_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_vref_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_vref_COMPAT_MODEL_IDX_0 "stm32-vref"
#define DT_N_S_vref_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_vref_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_vref_P_wakeup_source 0
#define DT_N_S_vref_P_wakeup_source_EXISTS 1
#define DT_N_S_vref_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_vref_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_vref_P_status "disabled"
#define DT_N_S_vref_P_status_STRING_UNQUOTED disabled
#define DT_N_S_vref_P_status_STRING_TOKEN disabled
#define DT_N_S_vref_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_vref_P_status_IDX_0 "disabled"
#define DT_N_S_vref_P_status_IDX_0_EXISTS 1
#define DT_N_S_vref_P_status_ENUM_IDX 2
#define DT_N_S_vref_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_vref_P_status_ENUM_TOKEN disabled
#define DT_N_S_vref_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_vref_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vref, status, 0)
#define DT_N_S_vref_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vref, status, 0)
#define DT_N_S_vref_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vref, status, 0, __VA_ARGS__)
#define DT_N_S_vref_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vref, status, 0, __VA_ARGS__)
#define DT_N_S_vref_P_status_LEN 1
#define DT_N_S_vref_P_status_EXISTS 1
#define DT_N_S_vref_P_compatible {"st,stm32-vref"}
#define DT_N_S_vref_P_compatible_IDX_0 "st,stm32-vref"
#define DT_N_S_vref_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-vref
#define DT_N_S_vref_P_compatible_IDX_0_STRING_TOKEN st_stm32_vref
#define DT_N_S_vref_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_VREF
#define DT_N_S_vref_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_vref_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vref, compatible, 0)
#define DT_N_S_vref_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vref, compatible, 0)
#define DT_N_S_vref_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vref, compatible, 0, __VA_ARGS__)
#define DT_N_S_vref_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vref, compatible, 0, __VA_ARGS__)
#define DT_N_S_vref_P_compatible_LEN 1
#define DT_N_S_vref_P_compatible_EXISTS 1
#define DT_N_S_vref_P_io_channels_IDX_0_EXISTS 1
#define DT_N_S_vref_P_io_channels_IDX_0_PH DT_N_S_soc_S_adc_40012000
#define DT_N_S_vref_P_io_channels_IDX_0_VAL_input 17
#define DT_N_S_vref_P_io_channels_IDX_0_VAL_input_EXISTS 1
#define DT_N_S_vref_P_io_channels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vref, io_channels, 0)
#define DT_N_S_vref_P_io_channels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vref, io_channels, 0)
#define DT_N_S_vref_P_io_channels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vref, io_channels, 0, __VA_ARGS__)
#define DT_N_S_vref_P_io_channels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vref, io_channels, 0, __VA_ARGS__)
#define DT_N_S_vref_P_io_channels_LEN 1
#define DT_N_S_vref_P_io_channels_EXISTS 1
#define DT_N_S_vref_P_zephyr_deferred_init 0
#define DT_N_S_vref_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_vref_P_vrefint_cal_addr 536836650
#define DT_N_S_vref_P_vrefint_cal_addr_EXISTS 1
#define DT_N_S_vref_P_vrefint_cal_mv 3300
#define DT_N_S_vref_P_vrefint_cal_mv_EXISTS 1

/*
 * Devicetree node: /clocks/clk-hsi
 *
 * Node identifier: DT_N_S_clocks_S_clk_hsi
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_hsi_PATH "/clocks/clk-hsi"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_hsi_FULL_NAME "clk-hsi"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_hsi_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_hsi_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_hsi_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_hsi_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_hsi_ORD 23
#define DT_N_S_clocks_S_clk_hsi_ORD_STR_SORTABLE 00023

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_hsi_REQUIRES_ORDS \
	5, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_hsi_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_hsi_EXISTS 1
#define DT_N_INST_1_fixed_clock DT_N_S_clocks_S_clk_hsi
#define DT_N_NODELABEL_clk_hsi  DT_N_S_clocks_S_clk_hsi

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_hsi_REG_NUM 0
#define DT_N_S_clocks_S_clk_hsi_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_hsi_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_hsi_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_hsi_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_hsi_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_hsi_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_hsi_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_hsi_P_clock_frequency 16000000
#define DT_N_S_clocks_S_clk_hsi_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/clk-lse
 *
 * Node identifier: DT_N_S_clocks_S_clk_lse
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_lse_PATH "/clocks/clk-lse"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_lse_FULL_NAME "clk-lse"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_lse_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_lse_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_lse_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_lse_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_lse_ORD 24
#define DT_N_S_clocks_S_clk_lse_ORD_STR_SORTABLE 00024

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_lse_REQUIRES_ORDS \
	5, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_lse_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_lse_EXISTS 1
#define DT_N_INST_2_fixed_clock DT_N_S_clocks_S_clk_lse
#define DT_N_NODELABEL_clk_lse  DT_N_S_clocks_S_clk_lse

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_lse_REG_NUM 0
#define DT_N_S_clocks_S_clk_lse_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_lse_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_lse_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_lse_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_lse_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_lse_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_lse_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_lse_P_clock_frequency 32768
#define DT_N_S_clocks_S_clk_lse_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/clk-lsi
 *
 * Node identifier: DT_N_S_clocks_S_clk_lsi
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_lsi_PATH "/clocks/clk-lsi"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_lsi_FULL_NAME "clk-lsi"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_lsi_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_lsi_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_lsi_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_lsi_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_lsi_ORD 25
#define DT_N_S_clocks_S_clk_lsi_ORD_STR_SORTABLE 00025

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_lsi_REQUIRES_ORDS \
	5, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_lsi_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_lsi_EXISTS 1
#define DT_N_INST_0_fixed_clock DT_N_S_clocks_S_clk_lsi
#define DT_N_NODELABEL_clk_lsi  DT_N_S_clocks_S_clk_lsi

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_lsi_REG_NUM 0
#define DT_N_S_clocks_S_clk_lsi_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_lsi_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_lsi_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_lsi_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_lsi_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_lsi_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_lsi_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_lsi_P_clock_frequency 32000
#define DT_N_S_clocks_S_clk_lsi_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/plli2s
 *
 * Node identifier: DT_N_S_clocks_S_plli2s
 *
 * Binding (compatible = st,stm32f4-plli2s-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32f4-plli2s-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_plli2s_PATH "/clocks/plli2s"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_plli2s_FULL_NAME "plli2s"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_plli2s_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_plli2s_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_plli2s_CHILD_NUM 0
#define DT_N_S_clocks_S_plli2s_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_plli2s_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_plli2s_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_plli2s_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_plli2s_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_plli2s_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_plli2s_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_plli2s_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_plli2s_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_plli2s_ORD 26
#define DT_N_S_clocks_S_plli2s_ORD_STR_SORTABLE 00026

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_plli2s_REQUIRES_ORDS \
	5, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_plli2s_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_plli2s_EXISTS 1
#define DT_N_INST_0_st_stm32f4_plli2s_clock DT_N_S_clocks_S_plli2s
#define DT_N_NODELABEL_plli2s               DT_N_S_clocks_S_plli2s

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_plli2s_REG_NUM 0
#define DT_N_S_clocks_S_plli2s_RANGES_NUM 0
#define DT_N_S_clocks_S_plli2s_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_plli2s_IRQ_NUM 0
#define DT_N_S_clocks_S_plli2s_IRQ_LEVEL 0
#define DT_N_S_clocks_S_plli2s_COMPAT_MATCHES_st_stm32f4_plli2s_clock 1
#define DT_N_S_clocks_S_plli2s_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_plli2s_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_clocks_S_plli2s_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_plli2s_COMPAT_MODEL_IDX_0 "stm32f4-plli2s-clock"
#define DT_N_S_clocks_S_plli2s_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_plli2s_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_plli2s_P_wakeup_source 0
#define DT_N_S_clocks_S_plli2s_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_plli2s_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_plli2s_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_clocks_S_plli2s_P_status "disabled"
#define DT_N_S_clocks_S_plli2s_P_status_STRING_UNQUOTED disabled
#define DT_N_S_clocks_S_plli2s_P_status_STRING_TOKEN disabled
#define DT_N_S_clocks_S_plli2s_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_plli2s_P_status_IDX_0 "disabled"
#define DT_N_S_clocks_S_plli2s_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_plli2s_P_status_ENUM_IDX 2
#define DT_N_S_clocks_S_plli2s_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_clocks_S_plli2s_P_status_ENUM_TOKEN disabled
#define DT_N_S_clocks_S_plli2s_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_plli2s_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_plli2s, status, 0)
#define DT_N_S_clocks_S_plli2s_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_plli2s, status, 0)
#define DT_N_S_clocks_S_plli2s_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_plli2s, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_plli2s_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_plli2s, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_plli2s_P_status_LEN 1
#define DT_N_S_clocks_S_plli2s_P_status_EXISTS 1
#define DT_N_S_clocks_S_plli2s_P_compatible {"st,stm32f4-plli2s-clock"}
#define DT_N_S_clocks_S_plli2s_P_compatible_IDX_0 "st,stm32f4-plli2s-clock"
#define DT_N_S_clocks_S_plli2s_P_compatible_IDX_0_STRING_UNQUOTED st,stm32f4-plli2s-clock
#define DT_N_S_clocks_S_plli2s_P_compatible_IDX_0_STRING_TOKEN st_stm32f4_plli2s_clock
#define DT_N_S_clocks_S_plli2s_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32F4_PLLI2S_CLOCK
#define DT_N_S_clocks_S_plli2s_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_plli2s_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_plli2s, compatible, 0)
#define DT_N_S_clocks_S_plli2s_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_plli2s, compatible, 0)
#define DT_N_S_clocks_S_plli2s_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_plli2s, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_plli2s_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_plli2s, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_plli2s_P_compatible_LEN 1
#define DT_N_S_clocks_S_plli2s_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_plli2s_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_plli2s_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_CHILD_NUM 2
#define DT_N_S_cpus_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 27
#define DT_N_S_cpus_ORD_STR_SORTABLE 00027

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	28, /* /cpus/power-states */ \
	30, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_IRQ_LEVEL 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/power-states
 *
 * Node identifier: DT_N_S_cpus_S_power_states
 */

/* Node's full path: */
#define DT_N_S_cpus_S_power_states_PATH "/cpus/power-states"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_power_states_FULL_NAME "power-states"

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_power_states_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_power_states_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_power_states_CHILD_NUM 1
#define DT_N_S_cpus_S_power_states_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_power_states_S_stop)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_stop)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_stop, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_stop, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_power_states_S_stop)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_stop)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_stop, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_stop, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_power_states_ORD 28
#define DT_N_S_cpus_S_power_states_ORD_STR_SORTABLE 00028

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_power_states_REQUIRES_ORDS \
	27, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_power_states_SUPPORTS_ORDS \
	29, /* /cpus/power-states/stop */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_power_states_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_power_states_REG_NUM 0
#define DT_N_S_cpus_S_power_states_RANGES_NUM 0
#define DT_N_S_cpus_S_power_states_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_power_states_IRQ_NUM 0
#define DT_N_S_cpus_S_power_states_IRQ_LEVEL 0
#define DT_N_S_cpus_S_power_states_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_power_states_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/power-states/stop
 *
 * Node identifier: DT_N_S_cpus_S_power_states_S_stop
 *
 * Binding (compatible = zephyr,power-state):
 *   $ZEPHYR_BASE/dts/bindings/power/zephyr,power-state.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_power_states_S_stop_PATH "/cpus/power-states/stop"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_power_states_S_stop_FULL_NAME "stop"

/* Node parent (/cpus/power-states) identifier: */
#define DT_N_S_cpus_S_power_states_S_stop_PARENT DT_N_S_cpus_S_power_states

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_power_states_S_stop_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_power_states_S_stop_CHILD_NUM 0
#define DT_N_S_cpus_S_power_states_S_stop_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_power_states_S_stop_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_power_states_S_stop_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_stop_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_stop_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_power_states_S_stop_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_power_states_S_stop_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_stop_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_stop_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_power_states_S_stop_ORD 29
#define DT_N_S_cpus_S_power_states_S_stop_ORD_STR_SORTABLE 00029

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_power_states_S_stop_REQUIRES_ORDS \
	28, /* /cpus/power-states */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_power_states_S_stop_SUPPORTS_ORDS \
	30, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_power_states_S_stop_EXISTS 1
#define DT_N_INST_0_zephyr_power_state DT_N_S_cpus_S_power_states_S_stop
#define DT_N_NODELABEL_stop            DT_N_S_cpus_S_power_states_S_stop

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_power_states_S_stop_REG_NUM 0
#define DT_N_S_cpus_S_power_states_S_stop_RANGES_NUM 0
#define DT_N_S_cpus_S_power_states_S_stop_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_power_states_S_stop_IRQ_NUM 0
#define DT_N_S_cpus_S_power_states_S_stop_IRQ_LEVEL 0
#define DT_N_S_cpus_S_power_states_S_stop_COMPAT_MATCHES_zephyr_power_state 1
#define DT_N_S_cpus_S_power_states_S_stop_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_stop_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_cpus_S_power_states_S_stop_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_stop_COMPAT_MODEL_IDX_0 "power-state"
#define DT_N_S_cpus_S_power_states_S_stop_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_power_states_S_stop_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_power_states_S_stop_P_power_state_name "suspend-to-idle"
#define DT_N_S_cpus_S_power_states_S_stop_P_power_state_name_STRING_UNQUOTED suspend-to-idle
#define DT_N_S_cpus_S_power_states_S_stop_P_power_state_name_STRING_TOKEN suspend_to_idle
#define DT_N_S_cpus_S_power_states_S_stop_P_power_state_name_STRING_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_cpus_S_power_states_S_stop_P_power_state_name_IDX_0 "suspend-to-idle"
#define DT_N_S_cpus_S_power_states_S_stop_P_power_state_name_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_stop_P_power_state_name_ENUM_IDX 2
#define DT_N_S_cpus_S_power_states_S_stop_P_power_state_name_ENUM_VAL_suspend_to_idle_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_stop_P_power_state_name_ENUM_TOKEN suspend_to_idle
#define DT_N_S_cpus_S_power_states_S_stop_P_power_state_name_ENUM_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_cpus_S_power_states_S_stop_P_power_state_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_power_states_S_stop, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_stop_P_power_state_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_stop, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_stop_P_power_state_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_stop, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_stop_P_power_state_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_stop, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_stop_P_power_state_name_LEN 1
#define DT_N_S_cpus_S_power_states_S_stop_P_power_state_name_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_stop_P_min_residency_us 400
#define DT_N_S_cpus_S_power_states_S_stop_P_min_residency_us_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_stop_P_exit_latency_us 300
#define DT_N_S_cpus_S_power_states_S_stop_P_exit_latency_us_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m4f):
 *   $ZEPHYR_BASE/dts/bindings/cpu/arm,cortex-m4f.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM 0
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 30
#define DT_N_S_cpus_S_cpu_0_ORD_STR_SORTABLE 00030

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	27, /* /cpus */ \
	29, /* /cpus/power-states/stop */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m4f DT_N_S_cpus_S_cpu_0
#define DT_N_NODELABEL_cpu0        DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_IRQ_LEVEL 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m4f 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0 "cortex-m4f"
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m4f"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m4f"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UNQUOTED arm,cortex-m4f
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_TOKEN arm_cortex_m4f
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_CORTEX_M4F
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0 DT_N_S_cpus_S_power_states_S_stop
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0_PH DT_N_S_cpus_S_power_states_S_stop
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40020000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_PATH "/soc/pin-controller@40020000/gpio@40020000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FULL_NAME "gpio@40020000"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_ORD 31
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_ORD_STR_SORTABLE 00031

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_REQUIRES_ORDS \
	8, /* /soc/rcc@40023800 */ \
	12, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_SUPPORTS_ORDS \
	32, /* /gpio_keys */ \
	33, /* /gpio_keys/button */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_EXISTS 1
#define DT_N_INST_0_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000
#define DT_N_NODELABEL_gpioa      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_REG_IDX_0_VAL_ADDRESS 1073872896 /* 0x40020000 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg {1073872896 /* 0x40020000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg_IDX_0 1073872896
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_IDX_0_VAL_bus 48
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /gpio_keys
 *
 * Node identifier: DT_N_S_gpio_keys
 *
 * Binding (compatible = gpio-keys):
 *   $ZEPHYR_BASE/dts/bindings/input/gpio-keys.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_PATH "/gpio_keys"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_FULL_NAME "gpio_keys"

/* Node parent (/) identifier: */
#define DT_N_S_gpio_keys_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_CHILD_IDX 15

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_keys_CHILD_NUM 1
#define DT_N_S_gpio_keys_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_gpio_keys_FOREACH_CHILD(fn) fn(DT_N_S_gpio_keys_S_button)
#define DT_N_S_gpio_keys_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button)
#define DT_N_S_gpio_keys_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_gpio_keys_S_button)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_ORD 32
#define DT_N_S_gpio_keys_ORD_STR_SORTABLE 00032

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_REQUIRES_ORDS \
	0, /* / */ \
	31, /* /soc/pin-controller@40020000/gpio@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_SUPPORTS_ORDS \
	33, /* /gpio_keys/button */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_EXISTS 1
#define DT_N_INST_0_gpio_keys DT_N_S_gpio_keys

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_REG_NUM 0
#define DT_N_S_gpio_keys_RANGES_NUM 0
#define DT_N_S_gpio_keys_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_IRQ_NUM 0
#define DT_N_S_gpio_keys_IRQ_LEVEL 0
#define DT_N_S_gpio_keys_COMPAT_MATCHES_gpio_keys 1
#define DT_N_S_gpio_keys_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_P_wakeup_source 0
#define DT_N_S_gpio_keys_P_wakeup_source_EXISTS 1
#define DT_N_S_gpio_keys_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_gpio_keys_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_gpio_keys_P_compatible {"gpio-keys"}
#define DT_N_S_gpio_keys_P_compatible_IDX_0 "gpio-keys"
#define DT_N_S_gpio_keys_P_compatible_IDX_0_STRING_UNQUOTED gpio-keys
#define DT_N_S_gpio_keys_P_compatible_IDX_0_STRING_TOKEN gpio_keys
#define DT_N_S_gpio_keys_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_KEYS
#define DT_N_S_gpio_keys_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys, compatible, 0)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys, compatible, 0)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_P_compatible_LEN 1
#define DT_N_S_gpio_keys_P_compatible_EXISTS 1
#define DT_N_S_gpio_keys_P_zephyr_deferred_init 0
#define DT_N_S_gpio_keys_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_gpio_keys_P_debounce_interval_ms 30
#define DT_N_S_gpio_keys_P_debounce_interval_ms_EXISTS 1
#define DT_N_S_gpio_keys_P_polling_mode 0
#define DT_N_S_gpio_keys_P_polling_mode_EXISTS 1

/*
 * Devicetree node: /gpio_keys/button
 *
 * Node identifier: DT_N_S_gpio_keys_S_button
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_button_PATH "/gpio_keys/button"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_button_FULL_NAME "button"

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_button_PARENT DT_N_S_gpio_keys

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_S_button_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_keys_S_button_CHILD_NUM 0
#define DT_N_S_gpio_keys_S_button_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_button_ORD 33
#define DT_N_S_gpio_keys_S_button_ORD_STR_SORTABLE 00033

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_button_REQUIRES_ORDS \
	31, /* /soc/pin-controller@40020000/gpio@40020000 */ \
	32, /* /gpio_keys */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_button_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_button_EXISTS 1
#define DT_N_ALIAS_sw0             DT_N_S_gpio_keys_S_button
#define DT_N_ALIAS_mcuboot_button0 DT_N_S_gpio_keys_S_button
#define DT_N_NODELABEL_user_button DT_N_S_gpio_keys_S_button

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_button_REG_NUM 0
#define DT_N_S_gpio_keys_S_button_RANGES_NUM 0
#define DT_N_S_gpio_keys_S_button_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_S_button_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_button_IRQ_LEVEL 0
#define DT_N_S_gpio_keys_S_button_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_button_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_VAL_pin 0
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button, gpios, 0)
#define DT_N_S_gpio_keys_S_button_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button, gpios, 0)
#define DT_N_S_gpio_keys_S_button_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_button_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_label "User"
#define DT_N_S_gpio_keys_S_button_P_label_STRING_UNQUOTED User
#define DT_N_S_gpio_keys_S_button_P_label_STRING_TOKEN User
#define DT_N_S_gpio_keys_S_button_P_label_STRING_UPPER_TOKEN USER
#define DT_N_S_gpio_keys_S_button_P_label_IDX_0 "User"
#define DT_N_S_gpio_keys_S_button_P_label_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button, label, 0)
#define DT_N_S_gpio_keys_S_button_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button, label, 0)
#define DT_N_S_gpio_keys_S_button_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button, label, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button, label, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_P_label_LEN 1
#define DT_N_S_gpio_keys_S_button_P_label_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_zephyr_code 11
#define DT_N_S_gpio_keys_S_button_P_zephyr_code_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40020c00
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_PATH "/soc/pin-controller@40020000/gpio@40020c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FULL_NAME "gpio@40020c00"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_ORD 34
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_ORD_STR_SORTABLE 00034

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_REQUIRES_ORDS \
	8, /* /soc/rcc@40023800 */ \
	12, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_SUPPORTS_ORDS \
	35, /* /leds */ \
	36, /* /leds/led_3 */ \
	37, /* /leds/led_4 */ \
	38, /* /leds/led_5 */ \
	39, /* /leds/led_6 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_EXISTS 1
#define DT_N_INST_3_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
#define DT_N_NODELABEL_gpiod      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_REG_IDX_0_VAL_ADDRESS 1073875968 /* 0x40020c00 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg {1073875968 /* 0x40020c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg_IDX_0 1073875968
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_IDX_0_VAL_bus 48
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_IDX_0_VAL_bits 8
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE/dts/bindings/led/gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node's name with unit-address: */
#define DT_N_S_leds_FULL_NAME "leds"

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_CHILD_IDX 13

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_CHILD_NUM 4
#define DT_N_S_leds_CHILD_NUM_STATUS_OKAY 4
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_3) fn(DT_N_S_leds_S_led_4) fn(DT_N_S_leds_S_led_5) fn(DT_N_S_leds_S_led_6)
#define DT_N_S_leds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_leds_S_led_3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_6)
#define DT_N_S_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_leds_S_led_3, __VA_ARGS__) fn(DT_N_S_leds_S_led_4, __VA_ARGS__) fn(DT_N_S_leds_S_led_5, __VA_ARGS__) fn(DT_N_S_leds_S_led_6, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_6, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_leds_S_led_3) fn(DT_N_S_leds_S_led_4) fn(DT_N_S_leds_S_led_5) fn(DT_N_S_leds_S_led_6)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_leds_S_led_3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_6)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_leds_S_led_3, __VA_ARGS__) fn(DT_N_S_leds_S_led_4, __VA_ARGS__) fn(DT_N_S_leds_S_led_5, __VA_ARGS__) fn(DT_N_S_leds_S_led_6, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_6, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 35
#define DT_N_S_leds_ORD_STR_SORTABLE 00035

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */ \
	34, /* /soc/pin-controller@40020000/gpio@40020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	36, /* /leds/led_3 */ \
	37, /* /leds/led_4 */ \
	38, /* /leds/led_5 */ \
	39, /* /leds/led_6 */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_RANGES_NUM 0
#define DT_N_S_leds_FOREACH_RANGE(fn) 
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_IRQ_LEVEL 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_P_compatible {"gpio-leds"}
#define DT_N_S_leds_P_compatible_IDX_0 "gpio-leds"
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UNQUOTED gpio-leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_TOKEN gpio_leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_LEDS
#define DT_N_S_leds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_LEN 1
#define DT_N_S_leds_P_compatible_EXISTS 1

/*
 * Devicetree node: /leds/led_3
 *
 * Node identifier: DT_N_S_leds_S_led_3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_3_PATH "/leds/led_3"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_3_FULL_NAME "led_3"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_3_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_3_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_3_CHILD_NUM 0
#define DT_N_S_leds_S_led_3_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_3_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_3_ORD 36
#define DT_N_S_leds_S_led_3_ORD_STR_SORTABLE 00036

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_3_REQUIRES_ORDS \
	34, /* /soc/pin-controller@40020000/gpio@40020c00 */ \
	35, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_3_EXISTS 1
#define DT_N_ALIAS_led0             DT_N_S_leds_S_led_3
#define DT_N_ALIAS_mcuboot_led0     DT_N_S_leds_S_led_3
#define DT_N_NODELABEL_orange_led_3 DT_N_S_leds_S_led_3

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_3_REG_NUM 0
#define DT_N_S_leds_S_led_3_RANGES_NUM 0
#define DT_N_S_leds_S_led_3_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_3_IRQ_NUM 0
#define DT_N_S_leds_S_led_3_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_pin 13
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_3_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_3, gpios, 0)
#define DT_N_S_leds_S_led_3_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_3, gpios, 0)
#define DT_N_S_leds_S_led_3_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_3, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_3, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_P_gpios_LEN 1
#define DT_N_S_leds_S_led_3_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_3_P_label "User LD3"
#define DT_N_S_leds_S_led_3_P_label_STRING_UNQUOTED User LD3
#define DT_N_S_leds_S_led_3_P_label_STRING_TOKEN User_LD3
#define DT_N_S_leds_S_led_3_P_label_STRING_UPPER_TOKEN USER_LD3
#define DT_N_S_leds_S_led_3_P_label_IDX_0 "User LD3"
#define DT_N_S_leds_S_led_3_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_3_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_3, label, 0)
#define DT_N_S_leds_S_led_3_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_3, label, 0)
#define DT_N_S_leds_S_led_3_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_3, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_3, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_P_label_LEN 1
#define DT_N_S_leds_S_led_3_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_4
 *
 * Node identifier: DT_N_S_leds_S_led_4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_4_PATH "/leds/led_4"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_4_FULL_NAME "led_4"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_4_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_4_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_4_CHILD_NUM 0
#define DT_N_S_leds_S_led_4_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_4_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_4_ORD 37
#define DT_N_S_leds_S_led_4_ORD_STR_SORTABLE 00037

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_4_REQUIRES_ORDS \
	34, /* /soc/pin-controller@40020000/gpio@40020c00 */ \
	35, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_4_EXISTS 1
#define DT_N_ALIAS_led1            DT_N_S_leds_S_led_4
#define DT_N_NODELABEL_green_led_4 DT_N_S_leds_S_led_4

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_4_REG_NUM 0
#define DT_N_S_leds_S_led_4_RANGES_NUM 0
#define DT_N_S_leds_S_led_4_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_4_IRQ_NUM 0
#define DT_N_S_leds_S_led_4_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_4_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_4_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
#define DT_N_S_leds_S_led_4_P_gpios_IDX_0_VAL_pin 12
#define DT_N_S_leds_S_led_4_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_4_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_4_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_4_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_4, gpios, 0)
#define DT_N_S_leds_S_led_4_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_4, gpios, 0)
#define DT_N_S_leds_S_led_4_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_4, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_4_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_4, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_4_P_gpios_LEN 1
#define DT_N_S_leds_S_led_4_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_4_P_label "User LD4"
#define DT_N_S_leds_S_led_4_P_label_STRING_UNQUOTED User LD4
#define DT_N_S_leds_S_led_4_P_label_STRING_TOKEN User_LD4
#define DT_N_S_leds_S_led_4_P_label_STRING_UPPER_TOKEN USER_LD4
#define DT_N_S_leds_S_led_4_P_label_IDX_0 "User LD4"
#define DT_N_S_leds_S_led_4_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_4_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_4, label, 0)
#define DT_N_S_leds_S_led_4_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_4, label, 0)
#define DT_N_S_leds_S_led_4_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_4, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_4_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_4, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_4_P_label_LEN 1
#define DT_N_S_leds_S_led_4_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_5
 *
 * Node identifier: DT_N_S_leds_S_led_5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_5_PATH "/leds/led_5"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_5_FULL_NAME "led_5"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_5_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_5_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_5_CHILD_NUM 0
#define DT_N_S_leds_S_led_5_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_5_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_5_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_5_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_5_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_5_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_5_ORD 38
#define DT_N_S_leds_S_led_5_ORD_STR_SORTABLE 00038

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_5_REQUIRES_ORDS \
	34, /* /soc/pin-controller@40020000/gpio@40020c00 */ \
	35, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_5_EXISTS 1
#define DT_N_ALIAS_led2          DT_N_S_leds_S_led_5
#define DT_N_NODELABEL_red_led_5 DT_N_S_leds_S_led_5

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_5_REG_NUM 0
#define DT_N_S_leds_S_led_5_RANGES_NUM 0
#define DT_N_S_leds_S_led_5_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_5_IRQ_NUM 0
#define DT_N_S_leds_S_led_5_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_5_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_5_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
#define DT_N_S_leds_S_led_5_P_gpios_IDX_0_VAL_pin 14
#define DT_N_S_leds_S_led_5_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_5_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_5_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_5_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_5, gpios, 0)
#define DT_N_S_leds_S_led_5_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_5, gpios, 0)
#define DT_N_S_leds_S_led_5_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_5, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_5_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_5, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_5_P_gpios_LEN 1
#define DT_N_S_leds_S_led_5_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_5_P_label "User LD5"
#define DT_N_S_leds_S_led_5_P_label_STRING_UNQUOTED User LD5
#define DT_N_S_leds_S_led_5_P_label_STRING_TOKEN User_LD5
#define DT_N_S_leds_S_led_5_P_label_STRING_UPPER_TOKEN USER_LD5
#define DT_N_S_leds_S_led_5_P_label_IDX_0 "User LD5"
#define DT_N_S_leds_S_led_5_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_5_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_5, label, 0)
#define DT_N_S_leds_S_led_5_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_5, label, 0)
#define DT_N_S_leds_S_led_5_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_5, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_5_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_5, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_5_P_label_LEN 1
#define DT_N_S_leds_S_led_5_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_6
 *
 * Node identifier: DT_N_S_leds_S_led_6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_6_PATH "/leds/led_6"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_6_FULL_NAME "led_6"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_6_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_6_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_6_CHILD_NUM 0
#define DT_N_S_leds_S_led_6_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_6_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_6_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_6_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_6_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_6_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_6_ORD 39
#define DT_N_S_leds_S_led_6_ORD_STR_SORTABLE 00039

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_6_REQUIRES_ORDS \
	34, /* /soc/pin-controller@40020000/gpio@40020c00 */ \
	35, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_6_EXISTS 1
#define DT_N_ALIAS_led3           DT_N_S_leds_S_led_6
#define DT_N_NODELABEL_blue_led_6 DT_N_S_leds_S_led_6

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_6_REG_NUM 0
#define DT_N_S_leds_S_led_6_RANGES_NUM 0
#define DT_N_S_leds_S_led_6_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_6_IRQ_NUM 0
#define DT_N_S_leds_S_led_6_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_6_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_6_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
#define DT_N_S_leds_S_led_6_P_gpios_IDX_0_VAL_pin 15
#define DT_N_S_leds_S_led_6_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_6_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_6_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_6_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_6, gpios, 0)
#define DT_N_S_leds_S_led_6_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_6, gpios, 0)
#define DT_N_S_leds_S_led_6_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_6, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_6_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_6, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_6_P_gpios_LEN 1
#define DT_N_S_leds_S_led_6_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_6_P_label "User LD6"
#define DT_N_S_leds_S_led_6_P_label_STRING_UNQUOTED User LD6
#define DT_N_S_leds_S_led_6_P_label_STRING_TOKEN User_LD6
#define DT_N_S_leds_S_led_6_P_label_STRING_UPPER_TOKEN USER_LD6
#define DT_N_S_leds_S_led_6_P_label_IDX_0 "User LD6"
#define DT_N_S_leds_S_led_6_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_6_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_6, label, 0)
#define DT_N_S_leds_S_led_6_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_6, label, 0)
#define DT_N_S_leds_S_led_6_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_6, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_6_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_6, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_6_P_label_LEN 1
#define DT_N_S_leds_S_led_6_P_label_EXISTS 1

/*
 * Devicetree node: /soc/rcc@40023800/reset-controller
 *
 * Node identifier: DT_N_S_soc_S_rcc_40023800_S_reset_controller
 *
 * Binding (compatible = st,stm32-rcc-rctl):
 *   $ZEPHYR_BASE/dts/bindings/reset/st,stm32-rcc-rctl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_PATH "/soc/rcc@40023800/reset-controller"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_FULL_NAME "reset-controller"

/* Node parent (/soc/rcc@40023800) identifier: */
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_PARENT DT_N_S_soc_S_rcc_40023800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_CHILD_NUM 0
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_ORD 40
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_ORD_STR_SORTABLE 00040

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_REQUIRES_ORDS \
	8, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_SUPPORTS_ORDS \
	41, /* /soc/timers@40000800 */ \
	60, /* /soc/sdmmc@40012c00 */ \
	63, /* /soc/serial@40004400 */ \
	64, /* /soc/serial@40011000 */ \
	65, /* /soc/serial@40011400 */ \
	95, /* /soc/timers@40000000 */ \
	99, /* /soc/timers@40000400 */ \
	105, /* /soc/timers@40000c00 */ \
	109, /* /soc/timers@40010000 */ \
	112, /* /soc/timers@40014000 */ \
	115, /* /soc/timers@40014400 */ \
	118, /* /soc/timers@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_EXISTS 1
#define DT_N_INST_0_st_stm32_rcc_rctl DT_N_S_soc_S_rcc_40023800_S_reset_controller
#define DT_N_NODELABEL_rctl           DT_N_S_soc_S_rcc_40023800_S_reset_controller

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_REG_NUM 0
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_RANGES_NUM 0
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_IRQ_NUM 0
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_IRQ_LEVEL 0
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_COMPAT_MATCHES_st_stm32_rcc_rctl 1
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_COMPAT_MODEL_IDX_0 "stm32-rcc-rctl"
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_P_wakeup_source 0
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_P_compatible {"st,stm32-rcc-rctl"}
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_P_compatible_IDX_0 "st,stm32-rcc-rctl"
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-rcc-rctl
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_P_compatible_IDX_0_STRING_TOKEN st_stm32_rcc_rctl
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_RCC_RCTL
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_40023800_S_reset_controller, compatible, 0)
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rcc_40023800_S_reset_controller, compatible, 0)
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_40023800_S_reset_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rcc_40023800_S_reset_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_P_compatible_LEN 1
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_P_set_bit_to_deassert 0
#define DT_N_S_soc_S_rcc_40023800_S_reset_controller_P_set_bit_to_deassert_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000800
 *
 * Node identifier: DT_N_S_soc_S_timers_40000800
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000800_PATH "/soc/timers@40000800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000800_FULL_NAME "timers@40000800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000800_CHILD_IDX 19

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000800_CHILD_NUM 3
#define DT_N_S_soc_S_timers_40000800_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm) fn(DT_N_S_soc_S_timers_40000800_S_counter) fn(DT_N_S_soc_S_timers_40000800_S_qdec)
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000800_S_counter) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000800_S_qdec)
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800_S_qdec, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000800_S_counter, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000800_S_qdec, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm)
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800_S_pwm)
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000800_ORD 41
#define DT_N_S_soc_S_timers_40000800_ORD_STR_SORTABLE 00041

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000800_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40023800 */ \
	40, /* /soc/rcc@40023800/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000800_SUPPORTS_ORDS \
	46, /* /soc/timers@40000800/pwm */ \
	103, /* /soc/timers@40000800/counter */ \
	104, /* /soc/timers@40000800/qdec */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000800_EXISTS 1
#define DT_N_INST_0_st_stm32_timers DT_N_S_soc_S_timers_40000800
#define DT_N_NODELABEL_timers4      DT_N_S_soc_S_timers_40000800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000800_REG_NUM 1
#define DT_N_S_soc_S_timers_40000800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_REG_IDX_0_VAL_ADDRESS 1073743872 /* 0x40000800 */
#define DT_N_S_soc_S_timers_40000800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000800_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000800_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_irq 30
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40000800_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40000800_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40000800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000800_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_status "okay"
#define DT_N_S_soc_S_timers_40000800_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_timers_40000800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timers_40000800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40000800_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_timers_40000800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timers_40000800_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timers_40000800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40000800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, status, 0)
#define DT_N_S_soc_S_timers_40000800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800, status, 0)
#define DT_N_S_soc_S_timers_40000800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000800_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40000800_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40000800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40000800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_reg {1073743872 /* 0x40000800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_0 1073743872
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupts {30 /* 0x1e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_0 30
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bits 4
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, clocks, 0)
#define DT_N_S_soc_S_timers_40000800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800, clocks, 0)
#define DT_N_S_soc_S_timers_40000800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40023800_S_reset_controller
#define DT_N_S_soc_S_timers_40000800_P_resets_IDX_0_VAL_id 1026
#define DT_N_S_soc_S_timers_40000800_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, resets, 0)
#define DT_N_S_soc_S_timers_40000800_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800, resets, 0)
#define DT_N_S_soc_S_timers_40000800_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_st_prescaler 10000
#define DT_N_S_soc_S_timers_40000800_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_st_countermode 0
#define DT_N_S_soc_S_timers_40000800_P_st_countermode_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim4_ch1_pd12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_PATH "/soc/pin-controller@40020000/tim4_ch1_pd12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_FULL_NAME "tim4_ch1_pd12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_ORD 42
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_ORD_STR_SORTABLE 00042

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_SUPPORTS_ORDS \
	46, /* /soc/timers@40000800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_EXISTS 1
#define DT_N_NODELABEL_tim4_ch1_pd12 DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_pinmux 1922
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_slew_rate_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim4_ch2_pd13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_PATH "/soc/pin-controller@40020000/tim4_ch2_pd13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_FULL_NAME "tim4_ch2_pd13"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_ORD 43
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_ORD_STR_SORTABLE 00043

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_SUPPORTS_ORDS \
	46, /* /soc/timers@40000800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_EXISTS 1
#define DT_N_NODELABEL_tim4_ch2_pd13 DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_pinmux 1954
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_slew_rate_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim4_ch3_pd14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_PATH "/soc/pin-controller@40020000/tim4_ch3_pd14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_FULL_NAME "tim4_ch3_pd14"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_CHILD_IDX 12

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_ORD 44
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_ORD_STR_SORTABLE 00044

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_SUPPORTS_ORDS \
	46, /* /soc/timers@40000800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_EXISTS 1
#define DT_N_NODELABEL_tim4_ch3_pd14 DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_pinmux 1986
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_slew_rate_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim4_ch4_pd15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_PATH "/soc/pin-controller@40020000/tim4_ch4_pd15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_FULL_NAME "tim4_ch4_pd15"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_CHILD_IDX 13

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_ORD 45
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_ORD_STR_SORTABLE 00045

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_SUPPORTS_ORDS \
	46, /* /soc/timers@40000800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_EXISTS 1
#define DT_N_NODELABEL_tim4_ch4_pd15 DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_pinmux 2018
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_slew_rate_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000800/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000800_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_PATH "/soc/timers@40000800/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40000800) identifier: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_PARENT DT_N_S_soc_S_timers_40000800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000800_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_ORD 46
#define DT_N_S_soc_S_timers_40000800_S_pwm_ORD_STR_SORTABLE 00046

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_REQUIRES_ORDS \
	41, /* /soc/timers@40000800 */ \
	42, /* /soc/pin-controller@40020000/tim4_ch1_pd12 */ \
	43, /* /soc/pin-controller@40020000/tim4_ch2_pd13 */ \
	44, /* /soc/pin-controller@40020000/tim4_ch3_pd14 */ \
	45, /* /soc/pin-controller@40020000/tim4_ch4_pd15 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_SUPPORTS_ORDS \
	47, /* /pwmleds */ \
	48, /* /pwmleds/blue_pwm_led */ \
	49, /* /pwmleds/green_pwm_led */ \
	50, /* /pwmleds/orange_pwm_led */ \
	51, /* /pwmleds/red_pwm_led */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_EXISTS 1
#define DT_N_INST_0_st_stm32_pwm DT_N_S_soc_S_timers_40000800_S_pwm
#define DT_N_NODELABEL_pwm4      DT_N_S_soc_S_timers_40000800_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000800_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40000800_S_pwm_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_PINCTRL_NUM 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_timers_40000800_S_pwm_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_timers_40000800_S_pwm_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12
#define DT_N_S_soc_S_timers_40000800_S_pwm_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13
#define DT_N_S_soc_S_timers_40000800_S_pwm_PINCTRL_NAME_default_IDX_2_PH DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14
#define DT_N_S_soc_S_timers_40000800_S_pwm_PINCTRL_NAME_default_IDX_3_PH DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status "okay"
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_IDX_2 DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_IDX_2_PH DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_IDX_3 DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_IDX_3_PH DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_0, 1) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_0, 2) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_0, 3)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_0, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_0, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_0, 3)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_0, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_0, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_0, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_0, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_0, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_0, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_LEN 4
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_names, 0)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_names, 0)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_four_channel_capture_support_EXISTS 1

/*
 * Devicetree node: /pwmleds
 *
 * Node identifier: DT_N_S_pwmleds
 *
 * Binding (compatible = pwm-leds):
 *   $ZEPHYR_BASE/dts/bindings/led/pwm-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmleds_PATH "/pwmleds"

/* Node's name with unit-address: */
#define DT_N_S_pwmleds_FULL_NAME "pwmleds"

/* Node parent (/) identifier: */
#define DT_N_S_pwmleds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_pwmleds_CHILD_IDX 14

/* Helper macros for child nodes of this node. */
#define DT_N_S_pwmleds_CHILD_NUM 4
#define DT_N_S_pwmleds_CHILD_NUM_STATUS_OKAY 4
#define DT_N_S_pwmleds_FOREACH_CHILD(fn) fn(DT_N_S_pwmleds_S_green_pwm_led) fn(DT_N_S_pwmleds_S_orange_pwm_led) fn(DT_N_S_pwmleds_S_red_pwm_led) fn(DT_N_S_pwmleds_S_blue_pwm_led)
#define DT_N_S_pwmleds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pwmleds_S_green_pwm_led) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_orange_pwm_led) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_red_pwm_led) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_blue_pwm_led)
#define DT_N_S_pwmleds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_green_pwm_led, __VA_ARGS__) fn(DT_N_S_pwmleds_S_orange_pwm_led, __VA_ARGS__) fn(DT_N_S_pwmleds_S_red_pwm_led, __VA_ARGS__) fn(DT_N_S_pwmleds_S_blue_pwm_led, __VA_ARGS__)
#define DT_N_S_pwmleds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds_S_green_pwm_led, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_orange_pwm_led, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_red_pwm_led, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_blue_pwm_led, __VA_ARGS__)
#define DT_N_S_pwmleds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pwmleds_S_green_pwm_led) fn(DT_N_S_pwmleds_S_orange_pwm_led) fn(DT_N_S_pwmleds_S_red_pwm_led) fn(DT_N_S_pwmleds_S_blue_pwm_led)
#define DT_N_S_pwmleds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pwmleds_S_green_pwm_led) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_orange_pwm_led) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_red_pwm_led) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_blue_pwm_led)
#define DT_N_S_pwmleds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_green_pwm_led, __VA_ARGS__) fn(DT_N_S_pwmleds_S_orange_pwm_led, __VA_ARGS__) fn(DT_N_S_pwmleds_S_red_pwm_led, __VA_ARGS__) fn(DT_N_S_pwmleds_S_blue_pwm_led, __VA_ARGS__)
#define DT_N_S_pwmleds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds_S_green_pwm_led, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_orange_pwm_led, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_red_pwm_led, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_blue_pwm_led, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pwmleds_ORD 47
#define DT_N_S_pwmleds_ORD_STR_SORTABLE 00047

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmleds_REQUIRES_ORDS \
	0, /* / */ \
	46, /* /soc/timers@40000800/pwm */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmleds_SUPPORTS_ORDS \
	48, /* /pwmleds/blue_pwm_led */ \
	49, /* /pwmleds/green_pwm_led */ \
	50, /* /pwmleds/orange_pwm_led */ \
	51, /* /pwmleds/red_pwm_led */

/* Existence and alternate IDs: */
#define DT_N_S_pwmleds_EXISTS 1
#define DT_N_INST_0_pwm_leds DT_N_S_pwmleds

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwmleds_REG_NUM 0
#define DT_N_S_pwmleds_RANGES_NUM 0
#define DT_N_S_pwmleds_FOREACH_RANGE(fn) 
#define DT_N_S_pwmleds_IRQ_NUM 0
#define DT_N_S_pwmleds_IRQ_LEVEL 0
#define DT_N_S_pwmleds_COMPAT_MATCHES_pwm_leds 1
#define DT_N_S_pwmleds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwmleds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwmleds_P_compatible {"pwm-leds"}
#define DT_N_S_pwmleds_P_compatible_IDX_0 "pwm-leds"
#define DT_N_S_pwmleds_P_compatible_IDX_0_STRING_UNQUOTED pwm-leds
#define DT_N_S_pwmleds_P_compatible_IDX_0_STRING_TOKEN pwm_leds
#define DT_N_S_pwmleds_P_compatible_IDX_0_STRING_UPPER_TOKEN PWM_LEDS
#define DT_N_S_pwmleds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds, compatible, 0)
#define DT_N_S_pwmleds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwmleds, compatible, 0)
#define DT_N_S_pwmleds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds, compatible, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds, compatible, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_P_compatible_LEN 1
#define DT_N_S_pwmleds_P_compatible_EXISTS 1

/*
 * Devicetree node: /pwmleds/blue_pwm_led
 *
 * Node identifier: DT_N_S_pwmleds_S_blue_pwm_led
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmleds_S_blue_pwm_led_PATH "/pwmleds/blue_pwm_led"

/* Node's name with unit-address: */
#define DT_N_S_pwmleds_S_blue_pwm_led_FULL_NAME "blue_pwm_led"

/* Node parent (/pwmleds) identifier: */
#define DT_N_S_pwmleds_S_blue_pwm_led_PARENT DT_N_S_pwmleds

/* Node's index in its parent's list of children: */
#define DT_N_S_pwmleds_S_blue_pwm_led_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_pwmleds_S_blue_pwm_led_CHILD_NUM 0
#define DT_N_S_pwmleds_S_blue_pwm_led_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pwmleds_S_blue_pwm_led_FOREACH_CHILD(fn) 
#define DT_N_S_pwmleds_S_blue_pwm_led_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pwmleds_S_blue_pwm_led_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_blue_pwm_led_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pwmleds_S_blue_pwm_led_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pwmleds_S_blue_pwm_led_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pwmleds_S_blue_pwm_led_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_blue_pwm_led_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pwmleds_S_blue_pwm_led_ORD 48
#define DT_N_S_pwmleds_S_blue_pwm_led_ORD_STR_SORTABLE 00048

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmleds_S_blue_pwm_led_REQUIRES_ORDS \
	46, /* /soc/timers@40000800/pwm */ \
	47, /* /pwmleds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmleds_S_blue_pwm_led_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pwmleds_S_blue_pwm_led_EXISTS 1
#define DT_N_ALIAS_pwm_led3         DT_N_S_pwmleds_S_blue_pwm_led
#define DT_N_NODELABEL_blue_pwm_led DT_N_S_pwmleds_S_blue_pwm_led

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwmleds_S_blue_pwm_led_REG_NUM 0
#define DT_N_S_pwmleds_S_blue_pwm_led_RANGES_NUM 0
#define DT_N_S_pwmleds_S_blue_pwm_led_FOREACH_RANGE(fn) 
#define DT_N_S_pwmleds_S_blue_pwm_led_IRQ_NUM 0
#define DT_N_S_pwmleds_S_blue_pwm_led_IRQ_LEVEL 0
#define DT_N_S_pwmleds_S_blue_pwm_led_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwmleds_S_blue_pwm_led_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_IDX_0_PH DT_N_S_soc_S_timers_40000800_S_pwm
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_IDX_0_VAL_channel 4
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_IDX_0_VAL_period 20000000
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_IDX_0_VAL_period_EXISTS 1
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_IDX_0_VAL_flags 0
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds_S_blue_pwm_led, pwms, 0)
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwmleds_S_blue_pwm_led, pwms, 0)
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_blue_pwm_led, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds_S_blue_pwm_led, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_LEN 1
#define DT_N_S_pwmleds_S_blue_pwm_led_P_pwms_EXISTS 1

/*
 * Devicetree node: /pwmleds/green_pwm_led
 *
 * Node identifier: DT_N_S_pwmleds_S_green_pwm_led
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmleds_S_green_pwm_led_PATH "/pwmleds/green_pwm_led"

/* Node's name with unit-address: */
#define DT_N_S_pwmleds_S_green_pwm_led_FULL_NAME "green_pwm_led"

/* Node parent (/pwmleds) identifier: */
#define DT_N_S_pwmleds_S_green_pwm_led_PARENT DT_N_S_pwmleds

/* Node's index in its parent's list of children: */
#define DT_N_S_pwmleds_S_green_pwm_led_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pwmleds_S_green_pwm_led_CHILD_NUM 0
#define DT_N_S_pwmleds_S_green_pwm_led_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pwmleds_S_green_pwm_led_FOREACH_CHILD(fn) 
#define DT_N_S_pwmleds_S_green_pwm_led_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pwmleds_S_green_pwm_led_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_green_pwm_led_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pwmleds_S_green_pwm_led_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pwmleds_S_green_pwm_led_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pwmleds_S_green_pwm_led_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_green_pwm_led_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pwmleds_S_green_pwm_led_ORD 49
#define DT_N_S_pwmleds_S_green_pwm_led_ORD_STR_SORTABLE 00049

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmleds_S_green_pwm_led_REQUIRES_ORDS \
	46, /* /soc/timers@40000800/pwm */ \
	47, /* /pwmleds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmleds_S_green_pwm_led_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pwmleds_S_green_pwm_led_EXISTS 1
#define DT_N_ALIAS_pwm_led0          DT_N_S_pwmleds_S_green_pwm_led
#define DT_N_NODELABEL_green_pwm_led DT_N_S_pwmleds_S_green_pwm_led

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwmleds_S_green_pwm_led_REG_NUM 0
#define DT_N_S_pwmleds_S_green_pwm_led_RANGES_NUM 0
#define DT_N_S_pwmleds_S_green_pwm_led_FOREACH_RANGE(fn) 
#define DT_N_S_pwmleds_S_green_pwm_led_IRQ_NUM 0
#define DT_N_S_pwmleds_S_green_pwm_led_IRQ_LEVEL 0
#define DT_N_S_pwmleds_S_green_pwm_led_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwmleds_S_green_pwm_led_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_IDX_0_PH DT_N_S_soc_S_timers_40000800_S_pwm
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_IDX_0_VAL_channel 1
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_IDX_0_VAL_period 20000000
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_IDX_0_VAL_period_EXISTS 1
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_IDX_0_VAL_flags 0
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds_S_green_pwm_led, pwms, 0)
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwmleds_S_green_pwm_led, pwms, 0)
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_green_pwm_led, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds_S_green_pwm_led, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_LEN 1
#define DT_N_S_pwmleds_S_green_pwm_led_P_pwms_EXISTS 1

/*
 * Devicetree node: /pwmleds/orange_pwm_led
 *
 * Node identifier: DT_N_S_pwmleds_S_orange_pwm_led
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmleds_S_orange_pwm_led_PATH "/pwmleds/orange_pwm_led"

/* Node's name with unit-address: */
#define DT_N_S_pwmleds_S_orange_pwm_led_FULL_NAME "orange_pwm_led"

/* Node parent (/pwmleds) identifier: */
#define DT_N_S_pwmleds_S_orange_pwm_led_PARENT DT_N_S_pwmleds

/* Node's index in its parent's list of children: */
#define DT_N_S_pwmleds_S_orange_pwm_led_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_pwmleds_S_orange_pwm_led_CHILD_NUM 0
#define DT_N_S_pwmleds_S_orange_pwm_led_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pwmleds_S_orange_pwm_led_FOREACH_CHILD(fn) 
#define DT_N_S_pwmleds_S_orange_pwm_led_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pwmleds_S_orange_pwm_led_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_orange_pwm_led_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pwmleds_S_orange_pwm_led_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pwmleds_S_orange_pwm_led_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pwmleds_S_orange_pwm_led_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_orange_pwm_led_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pwmleds_S_orange_pwm_led_ORD 50
#define DT_N_S_pwmleds_S_orange_pwm_led_ORD_STR_SORTABLE 00050

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmleds_S_orange_pwm_led_REQUIRES_ORDS \
	46, /* /soc/timers@40000800/pwm */ \
	47, /* /pwmleds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmleds_S_orange_pwm_led_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pwmleds_S_orange_pwm_led_EXISTS 1
#define DT_N_ALIAS_pwm_led1           DT_N_S_pwmleds_S_orange_pwm_led
#define DT_N_NODELABEL_orange_pwm_led DT_N_S_pwmleds_S_orange_pwm_led

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwmleds_S_orange_pwm_led_REG_NUM 0
#define DT_N_S_pwmleds_S_orange_pwm_led_RANGES_NUM 0
#define DT_N_S_pwmleds_S_orange_pwm_led_FOREACH_RANGE(fn) 
#define DT_N_S_pwmleds_S_orange_pwm_led_IRQ_NUM 0
#define DT_N_S_pwmleds_S_orange_pwm_led_IRQ_LEVEL 0
#define DT_N_S_pwmleds_S_orange_pwm_led_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwmleds_S_orange_pwm_led_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwmleds_S_orange_pwm_led_P_pwms_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_S_orange_pwm_led_P_pwms_IDX_0_PH DT_N_S_soc_S_timers_40000800_S_pwm
#define DT_N_S_pwmleds_S_orange_pwm_led_P_pwms_IDX_0_VAL_channel 2
#define DT_N_S_pwmleds_S_orange_pwm_led_P_pwms_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_pwmleds_S_orange_pwm_led_P_pwms_IDX_0_VAL_period 20000000
#define DT_N_S_pwmleds_S_orange_pwm_led_P_pwms_IDX_0_VAL_period_EXISTS 1
#define DT_N_S_pwmleds_S_orange_pwm_led_P_pwms_IDX_0_VAL_flags 0
#define DT_N_S_pwmleds_S_orange_pwm_led_P_pwms_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_pwmleds_S_orange_pwm_led_P_pwms_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds_S_orange_pwm_led, pwms, 0)
#define DT_N_S_pwmleds_S_orange_pwm_led_P_pwms_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwmleds_S_orange_pwm_led, pwms, 0)
#define DT_N_S_pwmleds_S_orange_pwm_led_P_pwms_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_orange_pwm_led, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_orange_pwm_led_P_pwms_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds_S_orange_pwm_led, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_orange_pwm_led_P_pwms_LEN 1
#define DT_N_S_pwmleds_S_orange_pwm_led_P_pwms_EXISTS 1

/*
 * Devicetree node: /pwmleds/red_pwm_led
 *
 * Node identifier: DT_N_S_pwmleds_S_red_pwm_led
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmleds_S_red_pwm_led_PATH "/pwmleds/red_pwm_led"

/* Node's name with unit-address: */
#define DT_N_S_pwmleds_S_red_pwm_led_FULL_NAME "red_pwm_led"

/* Node parent (/pwmleds) identifier: */
#define DT_N_S_pwmleds_S_red_pwm_led_PARENT DT_N_S_pwmleds

/* Node's index in its parent's list of children: */
#define DT_N_S_pwmleds_S_red_pwm_led_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_pwmleds_S_red_pwm_led_CHILD_NUM 0
#define DT_N_S_pwmleds_S_red_pwm_led_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pwmleds_S_red_pwm_led_FOREACH_CHILD(fn) 
#define DT_N_S_pwmleds_S_red_pwm_led_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pwmleds_S_red_pwm_led_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_red_pwm_led_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pwmleds_S_red_pwm_led_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pwmleds_S_red_pwm_led_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pwmleds_S_red_pwm_led_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_red_pwm_led_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pwmleds_S_red_pwm_led_ORD 51
#define DT_N_S_pwmleds_S_red_pwm_led_ORD_STR_SORTABLE 00051

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmleds_S_red_pwm_led_REQUIRES_ORDS \
	46, /* /soc/timers@40000800/pwm */ \
	47, /* /pwmleds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmleds_S_red_pwm_led_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pwmleds_S_red_pwm_led_EXISTS 1
#define DT_N_ALIAS_pwm_led2        DT_N_S_pwmleds_S_red_pwm_led
#define DT_N_NODELABEL_red_pwm_led DT_N_S_pwmleds_S_red_pwm_led

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwmleds_S_red_pwm_led_REG_NUM 0
#define DT_N_S_pwmleds_S_red_pwm_led_RANGES_NUM 0
#define DT_N_S_pwmleds_S_red_pwm_led_FOREACH_RANGE(fn) 
#define DT_N_S_pwmleds_S_red_pwm_led_IRQ_NUM 0
#define DT_N_S_pwmleds_S_red_pwm_led_IRQ_LEVEL 0
#define DT_N_S_pwmleds_S_red_pwm_led_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwmleds_S_red_pwm_led_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_IDX_0_PH DT_N_S_soc_S_timers_40000800_S_pwm
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_IDX_0_VAL_channel 3
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_IDX_0_VAL_period 20000000
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_IDX_0_VAL_period_EXISTS 1
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_IDX_0_VAL_flags 0
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds_S_red_pwm_led, pwms, 0)
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwmleds_S_red_pwm_led, pwms, 0)
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_red_pwm_led, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds_S_red_pwm_led, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_LEN 1
#define DT_N_S_pwmleds_S_red_pwm_led_P_pwms_EXISTS 1

/*
 * Devicetree node: /soc/dma@40026000
 *
 * Node identifier: DT_N_S_soc_S_dma_40026000
 *
 * Binding (compatible = st,stm32-dma-v1):
 *   $ZEPHYR_BASE/dts/bindings/dma/st,stm32-dma-v1.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dma_40026000_PATH "/soc/dma@40026000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dma_40026000_FULL_NAME "dma@40026000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dma_40026000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dma_40026000_CHILD_IDX 26

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dma_40026000_CHILD_NUM 0
#define DT_N_S_soc_S_dma_40026000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_dma_40026000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dma_40026000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_40026000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40026000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dma_40026000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dma_40026000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_40026000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40026000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dma_40026000_ORD 52
#define DT_N_S_soc_S_dma_40026000_ORD_STR_SORTABLE 00052

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dma_40026000_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dma_40026000_SUPPORTS_ORDS \
	53, /* /soc/i2s@40003800 */ \
	54, /* /soc/i2s@40003c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dma_40026000_EXISTS 1
#define DT_N_INST_0_st_stm32_dma_v1 DT_N_S_soc_S_dma_40026000
#define DT_N_NODELABEL_dma1         DT_N_S_soc_S_dma_40026000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dma_40026000_REG_NUM 1
#define DT_N_S_soc_S_dma_40026000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_REG_IDX_0_VAL_ADDRESS 1073897472 /* 0x40026000 */
#define DT_N_S_soc_S_dma_40026000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_dma_40026000_RANGES_NUM 0
#define DT_N_S_soc_S_dma_40026000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dma_40026000_IRQ_NUM 8
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_1_VAL_irq 12
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_2_VAL_irq 13
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_3_VAL_irq 14
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_4_VAL_irq 15
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_4_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_5_VAL_irq 16
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_5_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_6_VAL_irq 17
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_6_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_7_VAL_irq 47
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_7_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_7_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_7_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_7_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40026000_IRQ_LEVEL 1
#define DT_N_S_soc_S_dma_40026000_COMPAT_MATCHES_st_stm32_dma_v1 1
#define DT_N_S_soc_S_dma_40026000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_dma_40026000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_COMPAT_MODEL_IDX_0 "stm32-dma-v1"
#define DT_N_S_soc_S_dma_40026000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dma_40026000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dma_40026000_P_wakeup_source 0
#define DT_N_S_soc_S_dma_40026000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dma_40026000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_status "disabled"
#define DT_N_S_soc_S_dma_40026000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_dma_40026000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_dma_40026000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_40026000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_dma_40026000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_dma_40026000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_dma_40026000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_40026000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026000, status, 0)
#define DT_N_S_soc_S_dma_40026000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40026000, status, 0)
#define DT_N_S_soc_S_dma_40026000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40026000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026000_P_status_LEN 1
#define DT_N_S_soc_S_dma_40026000_P_status_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_compatible {"st,stm32-dma-v1"}
#define DT_N_S_soc_S_dma_40026000_P_compatible_IDX_0 "st,stm32-dma-v1"
#define DT_N_S_soc_S_dma_40026000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-dma-v1
#define DT_N_S_soc_S_dma_40026000_P_compatible_IDX_0_STRING_TOKEN st_stm32_dma_v1
#define DT_N_S_soc_S_dma_40026000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_DMA_V1
#define DT_N_S_soc_S_dma_40026000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026000, compatible, 0)
#define DT_N_S_soc_S_dma_40026000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40026000, compatible, 0)
#define DT_N_S_soc_S_dma_40026000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40026000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026000_P_compatible_LEN 1
#define DT_N_S_soc_S_dma_40026000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_reg {1073897472 /* 0x40026000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_dma_40026000_P_reg_IDX_0 1073897472
#define DT_N_S_soc_S_dma_40026000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_dma_40026000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_reg_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts {11 /* 0xb */, 0 /* 0x0 */, 12 /* 0xc */, 0 /* 0x0 */, 13 /* 0xd */, 0 /* 0x0 */, 14 /* 0xe */, 0 /* 0x0 */, 15 /* 0xf */, 0 /* 0x0 */, 16 /* 0x10 */, 0 /* 0x0 */, 17 /* 0x11 */, 0 /* 0x0 */, 47 /* 0x2f */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_2 12
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_4 13
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_6 14
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_8 15
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_10 16
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_11 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_12 17
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_14 47
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_14_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_15 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_15_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_dma_40026000_P_clocks_IDX_0_VAL_bus 48
#define DT_N_S_soc_S_dma_40026000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_clocks_IDX_0_VAL_bits 2097152
#define DT_N_S_soc_S_dma_40026000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026000, clocks, 0)
#define DT_N_S_soc_S_dma_40026000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40026000, clocks, 0)
#define DT_N_S_soc_S_dma_40026000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40026000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026000_P_clocks_LEN 1
#define DT_N_S_soc_S_dma_40026000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_dma_40026000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_st_mem2mem 0
#define DT_N_S_soc_S_dma_40026000_P_st_mem2mem_EXISTS 1

/*
 * Devicetree node: /soc/i2s@40003800
 *
 * Node identifier: DT_N_S_soc_S_i2s_40003800
 *
 * Binding (compatible = st,stm32-i2s):
 *   $ZEPHYR_BASE/dts/bindings/i2s/st,stm32-i2s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2s_40003800_PATH "/soc/i2s@40003800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2s_40003800_FULL_NAME "i2s@40003800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2s_40003800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2s_40003800_CHILD_IDX 32

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2s_40003800_CHILD_NUM 0
#define DT_N_S_soc_S_i2s_40003800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2s_40003800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2s_40003800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2s_40003800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_40003800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2s_40003800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2s_40003800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2s_40003800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_40003800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2s_40003800_ORD 53
#define DT_N_S_soc_S_i2s_40003800_ORD_STR_SORTABLE 00053

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2s_40003800_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40023800 */ \
	52, /* /soc/dma@40026000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2s_40003800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2s_40003800_EXISTS 1
#define DT_N_INST_0_st_stm32_i2s DT_N_S_soc_S_i2s_40003800
#define DT_N_NODELABEL_i2s2      DT_N_S_soc_S_i2s_40003800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2s_40003800_REG_NUM 1
#define DT_N_S_soc_S_i2s_40003800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_REG_IDX_0_VAL_ADDRESS 1073756160 /* 0x40003800 */
#define DT_N_S_soc_S_i2s_40003800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2s_40003800_RANGES_NUM 0
#define DT_N_S_soc_S_i2s_40003800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2s_40003800_IRQ_NUM 1
#define DT_N_S_soc_S_i2s_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_IRQ_IDX_0_VAL_irq 36
#define DT_N_S_soc_S_i2s_40003800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_i2s_40003800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2s_40003800_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2s_40003800_COMPAT_MATCHES_st_stm32_i2s 1
#define DT_N_S_soc_S_i2s_40003800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2s_40003800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_COMPAT_MODEL_IDX_0 "stm32-i2s"
#define DT_N_S_soc_S_i2s_40003800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2s_40003800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2s_40003800_P_wakeup_source 0
#define DT_N_S_soc_S_i2s_40003800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2s_40003800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_status "disabled"
#define DT_N_S_soc_S_i2s_40003800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2s_40003800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2s_40003800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40003800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2s_40003800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2s_40003800_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2s_40003800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40003800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, status, 0)
#define DT_N_S_soc_S_i2s_40003800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40003800, status, 0)
#define DT_N_S_soc_S_i2s_40003800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40003800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_status_LEN 1
#define DT_N_S_soc_S_i2s_40003800_P_status_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_compatible {"st,stm32-i2s"}
#define DT_N_S_soc_S_i2s_40003800_P_compatible_IDX_0 "st,stm32-i2s"
#define DT_N_S_soc_S_i2s_40003800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-i2s
#define DT_N_S_soc_S_i2s_40003800_P_compatible_IDX_0_STRING_TOKEN st_stm32_i2s
#define DT_N_S_soc_S_i2s_40003800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_I2S
#define DT_N_S_soc_S_i2s_40003800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, compatible, 0)
#define DT_N_S_soc_S_i2s_40003800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40003800, compatible, 0)
#define DT_N_S_soc_S_i2s_40003800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40003800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_compatible_LEN 1
#define DT_N_S_soc_S_i2s_40003800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_reg {1073756160 /* 0x40003800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2s_40003800_P_reg_IDX_0 1073756160
#define DT_N_S_soc_S_i2s_40003800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2s_40003800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_interrupts {36 /* 0x24 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_i2s_40003800_P_interrupts_IDX_0 36
#define DT_N_S_soc_S_i2s_40003800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_i2s_40003800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_0_VAL_bits 16384
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, clocks, 0)
#define DT_N_S_soc_S_i2s_40003800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40003800, clocks, 0)
#define DT_N_S_soc_S_i2s_40003800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40003800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_clocks_LEN 1
#define DT_N_S_soc_S_i2s_40003800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_PH DT_N_S_soc_S_dma_40026000
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_channel 4
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_slot 0
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_channel_config 1024
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_features 3
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_NAME "tx"
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_PH DT_N_S_soc_S_dma_40026000
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_channel DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_channel
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_slot DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_slot
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_channel_config DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_channel_config
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_features DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_features
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_PH DT_N_S_soc_S_dma_40026000
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_channel 3
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_slot 0
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_channel_config 1024
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_features 3
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_NAME "rx"
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_PH DT_N_S_soc_S_dma_40026000
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_channel DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_channel
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_slot DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_slot
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_channel_config DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_channel_config
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_features DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_features
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, dmas, 0) \
	fn(DT_N_S_soc_S_i2s_40003800, dmas, 1)
#define DT_N_S_soc_S_i2s_40003800_P_dmas_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40003800, dmas, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40003800, dmas, 1)
#define DT_N_S_soc_S_i2s_40003800_P_dmas_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003800, dmas, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_dmas_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40003800, dmas, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40003800, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_dmas_LEN 2
#define DT_N_S_soc_S_i2s_40003800_P_dmas_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dma_names {"tx", "rx"}
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_IDX_0 "tx"
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_IDX_0_STRING_UNQUOTED tx
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_IDX_0_STRING_TOKEN tx
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_IDX_0_STRING_UPPER_TOKEN TX
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_IDX_1 "rx"
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_IDX_1_STRING_UNQUOTED rx
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_IDX_1_STRING_TOKEN rx
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_IDX_1_STRING_UPPER_TOKEN RX
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, dma_names, 0) \
	fn(DT_N_S_soc_S_i2s_40003800, dma_names, 1)
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40003800, dma_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40003800, dma_names, 1)
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003800, dma_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40003800, dma_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40003800, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_LEN 2
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2s_40003800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_mck_enabled 0
#define DT_N_S_soc_S_i2s_40003800_P_mck_enabled_EXISTS 1

/*
 * Devicetree node: /soc/i2s@40003c00
 *
 * Node identifier: DT_N_S_soc_S_i2s_40003c00
 *
 * Binding (compatible = st,stm32-i2s):
 *   $ZEPHYR_BASE/dts/bindings/i2s/st,stm32-i2s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2s_40003c00_PATH "/soc/i2s@40003c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2s_40003c00_FULL_NAME "i2s@40003c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2s_40003c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2s_40003c00_CHILD_IDX 33

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2s_40003c00_CHILD_NUM 0
#define DT_N_S_soc_S_i2s_40003c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2s_40003c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2s_40003c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2s_40003c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_40003c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2s_40003c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2s_40003c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2s_40003c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_40003c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2s_40003c00_ORD 54
#define DT_N_S_soc_S_i2s_40003c00_ORD_STR_SORTABLE 00054

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2s_40003c00_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40023800 */ \
	52, /* /soc/dma@40026000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2s_40003c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2s_40003c00_EXISTS 1
#define DT_N_INST_1_st_stm32_i2s DT_N_S_soc_S_i2s_40003c00
#define DT_N_NODELABEL_i2s3      DT_N_S_soc_S_i2s_40003c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2s_40003c00_REG_NUM 1
#define DT_N_S_soc_S_i2s_40003c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_REG_IDX_0_VAL_ADDRESS 1073757184 /* 0x40003c00 */
#define DT_N_S_soc_S_i2s_40003c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2s_40003c00_RANGES_NUM 0
#define DT_N_S_soc_S_i2s_40003c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2s_40003c00_IRQ_NUM 1
#define DT_N_S_soc_S_i2s_40003c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_IRQ_IDX_0_VAL_irq 51
#define DT_N_S_soc_S_i2s_40003c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_i2s_40003c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2s_40003c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2s_40003c00_COMPAT_MATCHES_st_stm32_i2s 1
#define DT_N_S_soc_S_i2s_40003c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2s_40003c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_COMPAT_MODEL_IDX_0 "stm32-i2s"
#define DT_N_S_soc_S_i2s_40003c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2s_40003c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2s_40003c00_P_wakeup_source 0
#define DT_N_S_soc_S_i2s_40003c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2s_40003c00_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_status "disabled"
#define DT_N_S_soc_S_i2s_40003c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2s_40003c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2s_40003c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40003c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2s_40003c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2s_40003c00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2s_40003c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40003c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, status, 0)
#define DT_N_S_soc_S_i2s_40003c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40003c00, status, 0)
#define DT_N_S_soc_S_i2s_40003c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40003c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_status_LEN 1
#define DT_N_S_soc_S_i2s_40003c00_P_status_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_compatible {"st,stm32-i2s"}
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_IDX_0 "st,stm32-i2s"
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-i2s
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_i2s
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_I2S
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, compatible, 0)
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40003c00, compatible, 0)
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40003c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_LEN 1
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_reg {1073757184 /* 0x40003c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2s_40003c00_P_reg_IDX_0 1073757184
#define DT_N_S_soc_S_i2s_40003c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2s_40003c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts {51 /* 0x33 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts_IDX_0 51
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_0_VAL_bits 32768
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, clocks, 0)
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40003c00, clocks, 0)
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40003c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_LEN 1
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_PH DT_N_S_soc_S_dma_40026000
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_channel 5
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_slot 0
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_channel_config 1024
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_features 3
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_NAME "tx"
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_PH DT_N_S_soc_S_dma_40026000
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_channel DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_channel
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_slot DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_slot
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_channel_config DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_channel_config
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_features DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_features
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_PH DT_N_S_soc_S_dma_40026000
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_channel 0
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_slot 0
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_channel_config 1024
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_features 3
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_NAME "rx"
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_PH DT_N_S_soc_S_dma_40026000
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_channel DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_channel
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_slot DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_slot
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_channel_config DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_channel_config
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_features DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_features
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, dmas, 0) \
	fn(DT_N_S_soc_S_i2s_40003c00, dmas, 1)
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40003c00, dmas, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40003c00, dmas, 1)
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003c00, dmas, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40003c00, dmas, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40003c00, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_LEN 2
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names {"tx", "rx"}
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_IDX_0 "tx"
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_IDX_0_STRING_UNQUOTED tx
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_IDX_0_STRING_TOKEN tx
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_IDX_0_STRING_UPPER_TOKEN TX
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_IDX_1 "rx"
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_IDX_1_STRING_UNQUOTED rx
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_IDX_1_STRING_TOKEN rx
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_IDX_1_STRING_UPPER_TOKEN RX
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, dma_names, 0) \
	fn(DT_N_S_soc_S_i2s_40003c00, dma_names, 1)
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40003c00, dma_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40003c00, dma_names, 1)
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003c00, dma_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40003c00, dma_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40003c00, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_LEN 2
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2s_40003c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_mck_enabled 0
#define DT_N_S_soc_S_i2s_40003c00_P_mck_enabled_EXISTS 1

/*
 * Devicetree node: /soc/dma@40026400
 *
 * Node identifier: DT_N_S_soc_S_dma_40026400
 *
 * Binding (compatible = st,stm32-dma-v1):
 *   $ZEPHYR_BASE/dts/bindings/dma/st,stm32-dma-v1.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dma_40026400_PATH "/soc/dma@40026400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dma_40026400_FULL_NAME "dma@40026400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dma_40026400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dma_40026400_CHILD_IDX 27

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dma_40026400_CHILD_NUM 0
#define DT_N_S_soc_S_dma_40026400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_dma_40026400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dma_40026400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_40026400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40026400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dma_40026400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dma_40026400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_40026400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40026400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dma_40026400_ORD 55
#define DT_N_S_soc_S_dma_40026400_ORD_STR_SORTABLE 00055

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dma_40026400_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dma_40026400_SUPPORTS_ORDS \
	56, /* /soc/i2s@40013000 */ \
	57, /* /soc/i2s@40013400 */ \
	58, /* /soc/i2s@40015000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dma_40026400_EXISTS 1
#define DT_N_INST_1_st_stm32_dma_v1 DT_N_S_soc_S_dma_40026400
#define DT_N_NODELABEL_dma2         DT_N_S_soc_S_dma_40026400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dma_40026400_REG_NUM 1
#define DT_N_S_soc_S_dma_40026400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_REG_IDX_0_VAL_ADDRESS 1073898496 /* 0x40026400 */
#define DT_N_S_soc_S_dma_40026400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_dma_40026400_RANGES_NUM 0
#define DT_N_S_soc_S_dma_40026400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dma_40026400_IRQ_NUM 8
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_0_VAL_irq 56
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_1_VAL_irq 57
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_2_VAL_irq 58
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_3_VAL_irq 59
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_4_VAL_irq 60
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_4_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_5_VAL_irq 68
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_5_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_6_VAL_irq 69
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_6_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_7_VAL_irq 70
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_7_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_7_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_7_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_7_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40026400_IRQ_LEVEL 1
#define DT_N_S_soc_S_dma_40026400_COMPAT_MATCHES_st_stm32_dma_v1 1
#define DT_N_S_soc_S_dma_40026400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_dma_40026400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_COMPAT_MODEL_IDX_0 "stm32-dma-v1"
#define DT_N_S_soc_S_dma_40026400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dma_40026400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dma_40026400_P_wakeup_source 0
#define DT_N_S_soc_S_dma_40026400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dma_40026400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_status "disabled"
#define DT_N_S_soc_S_dma_40026400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_dma_40026400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_dma_40026400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_40026400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_dma_40026400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_dma_40026400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_dma_40026400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_40026400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026400, status, 0)
#define DT_N_S_soc_S_dma_40026400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40026400, status, 0)
#define DT_N_S_soc_S_dma_40026400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40026400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026400_P_status_LEN 1
#define DT_N_S_soc_S_dma_40026400_P_status_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_compatible {"st,stm32-dma-v1"}
#define DT_N_S_soc_S_dma_40026400_P_compatible_IDX_0 "st,stm32-dma-v1"
#define DT_N_S_soc_S_dma_40026400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-dma-v1
#define DT_N_S_soc_S_dma_40026400_P_compatible_IDX_0_STRING_TOKEN st_stm32_dma_v1
#define DT_N_S_soc_S_dma_40026400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_DMA_V1
#define DT_N_S_soc_S_dma_40026400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026400, compatible, 0)
#define DT_N_S_soc_S_dma_40026400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40026400, compatible, 0)
#define DT_N_S_soc_S_dma_40026400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40026400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026400_P_compatible_LEN 1
#define DT_N_S_soc_S_dma_40026400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_reg {1073898496 /* 0x40026400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_dma_40026400_P_reg_IDX_0 1073898496
#define DT_N_S_soc_S_dma_40026400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_dma_40026400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_reg_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts {56 /* 0x38 */, 0 /* 0x0 */, 57 /* 0x39 */, 0 /* 0x0 */, 58 /* 0x3a */, 0 /* 0x0 */, 59 /* 0x3b */, 0 /* 0x0 */, 60 /* 0x3c */, 0 /* 0x0 */, 68 /* 0x44 */, 0 /* 0x0 */, 69 /* 0x45 */, 0 /* 0x0 */, 70 /* 0x46 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_0 56
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_2 57
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_4 58
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_6 59
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_8 60
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_10 68
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_11 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_12 69
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_14 70
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_14_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_15 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_15_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_dma_40026400_P_clocks_IDX_0_VAL_bus 48
#define DT_N_S_soc_S_dma_40026400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_clocks_IDX_0_VAL_bits 4194304
#define DT_N_S_soc_S_dma_40026400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026400, clocks, 0)
#define DT_N_S_soc_S_dma_40026400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40026400, clocks, 0)
#define DT_N_S_soc_S_dma_40026400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40026400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026400_P_clocks_LEN 1
#define DT_N_S_soc_S_dma_40026400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_dma_40026400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_st_mem2mem 1
#define DT_N_S_soc_S_dma_40026400_P_st_mem2mem_EXISTS 1

/*
 * Devicetree node: /soc/i2s@40013000
 *
 * Node identifier: DT_N_S_soc_S_i2s_40013000
 *
 * Binding (compatible = st,stm32-i2s):
 *   $ZEPHYR_BASE/dts/bindings/i2s/st,stm32-i2s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2s_40013000_PATH "/soc/i2s@40013000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2s_40013000_FULL_NAME "i2s@40013000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2s_40013000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2s_40013000_CHILD_IDX 35

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2s_40013000_CHILD_NUM 0
#define DT_N_S_soc_S_i2s_40013000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2s_40013000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2s_40013000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2s_40013000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_40013000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2s_40013000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2s_40013000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2s_40013000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_40013000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2s_40013000_ORD 56
#define DT_N_S_soc_S_i2s_40013000_ORD_STR_SORTABLE 00056

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2s_40013000_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40023800 */ \
	55, /* /soc/dma@40026400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2s_40013000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2s_40013000_EXISTS 1
#define DT_N_INST_2_st_stm32_i2s DT_N_S_soc_S_i2s_40013000
#define DT_N_NODELABEL_i2s1      DT_N_S_soc_S_i2s_40013000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2s_40013000_REG_NUM 1
#define DT_N_S_soc_S_i2s_40013000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_REG_IDX_0_VAL_ADDRESS 1073819648 /* 0x40013000 */
#define DT_N_S_soc_S_i2s_40013000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2s_40013000_RANGES_NUM 0
#define DT_N_S_soc_S_i2s_40013000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2s_40013000_IRQ_NUM 1
#define DT_N_S_soc_S_i2s_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_IRQ_IDX_0_VAL_irq 35
#define DT_N_S_soc_S_i2s_40013000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_i2s_40013000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2s_40013000_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2s_40013000_COMPAT_MATCHES_st_stm32_i2s 1
#define DT_N_S_soc_S_i2s_40013000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2s_40013000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_COMPAT_MODEL_IDX_0 "stm32-i2s"
#define DT_N_S_soc_S_i2s_40013000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2s_40013000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2s_40013000_P_wakeup_source 0
#define DT_N_S_soc_S_i2s_40013000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2s_40013000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_status "disabled"
#define DT_N_S_soc_S_i2s_40013000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2s_40013000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2s_40013000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40013000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2s_40013000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2s_40013000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2s_40013000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40013000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40013000, status, 0)
#define DT_N_S_soc_S_i2s_40013000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40013000, status, 0)
#define DT_N_S_soc_S_i2s_40013000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40013000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40013000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013000_P_status_LEN 1
#define DT_N_S_soc_S_i2s_40013000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_compatible {"st,stm32-i2s"}
#define DT_N_S_soc_S_i2s_40013000_P_compatible_IDX_0 "st,stm32-i2s"
#define DT_N_S_soc_S_i2s_40013000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-i2s
#define DT_N_S_soc_S_i2s_40013000_P_compatible_IDX_0_STRING_TOKEN st_stm32_i2s
#define DT_N_S_soc_S_i2s_40013000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_I2S
#define DT_N_S_soc_S_i2s_40013000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40013000, compatible, 0)
#define DT_N_S_soc_S_i2s_40013000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40013000, compatible, 0)
#define DT_N_S_soc_S_i2s_40013000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40013000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40013000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2s_40013000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_reg {1073819648 /* 0x40013000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2s_40013000_P_reg_IDX_0 1073819648
#define DT_N_S_soc_S_i2s_40013000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2s_40013000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_interrupts {35 /* 0x23 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_i2s_40013000_P_interrupts_IDX_0 35
#define DT_N_S_soc_S_i2s_40013000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_i2s_40013000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_i2s_40013000_P_clocks_IDX_0_VAL_bus 68
#define DT_N_S_soc_S_i2s_40013000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_clocks_IDX_0_VAL_bits 4096
#define DT_N_S_soc_S_i2s_40013000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40013000, clocks, 0)
#define DT_N_S_soc_S_i2s_40013000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40013000, clocks, 0)
#define DT_N_S_soc_S_i2s_40013000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40013000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40013000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013000_P_clocks_LEN 1
#define DT_N_S_soc_S_i2s_40013000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_PH DT_N_S_soc_S_dma_40026400
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_channel 3
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_slot 3
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_channel_config 1024
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_features 3
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_NAME "tx"
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_tx_PH DT_N_S_soc_S_dma_40026400
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_tx_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_tx_VAL_channel DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_channel
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_tx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_tx_VAL_slot DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_slot
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_tx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_tx_VAL_channel_config DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_channel_config
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_tx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_tx_VAL_features DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_0_VAL_features
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_tx_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_PH DT_N_S_soc_S_dma_40026400
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_channel 2
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_slot 3
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_channel_config 1024
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_features 3
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_NAME "rx"
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_rx_PH DT_N_S_soc_S_dma_40026400
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_rx_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_rx_VAL_channel DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_channel
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_rx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_rx_VAL_slot DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_slot
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_rx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_rx_VAL_channel_config DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_channel_config
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_rx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_rx_VAL_features DT_N_S_soc_S_i2s_40013000_P_dmas_IDX_1_VAL_features
#define DT_N_S_soc_S_i2s_40013000_P_dmas_NAME_rx_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40013000, dmas, 0) \
	fn(DT_N_S_soc_S_i2s_40013000, dmas, 1)
#define DT_N_S_soc_S_i2s_40013000_P_dmas_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40013000, dmas, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40013000, dmas, 1)
#define DT_N_S_soc_S_i2s_40013000_P_dmas_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40013000, dmas, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013000_P_dmas_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40013000, dmas, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40013000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013000_P_dmas_LEN 2
#define DT_N_S_soc_S_i2s_40013000_P_dmas_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dma_names {"tx", "rx"}
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_IDX_0 "tx"
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_IDX_0_STRING_UNQUOTED tx
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_IDX_0_STRING_TOKEN tx
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_IDX_0_STRING_UPPER_TOKEN TX
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_IDX_1 "rx"
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_IDX_1_STRING_UNQUOTED rx
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_IDX_1_STRING_TOKEN rx
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_IDX_1_STRING_UPPER_TOKEN RX
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40013000, dma_names, 0) \
	fn(DT_N_S_soc_S_i2s_40013000, dma_names, 1)
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40013000, dma_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40013000, dma_names, 1)
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40013000, dma_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40013000, dma_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40013000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_LEN 2
#define DT_N_S_soc_S_i2s_40013000_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2s_40013000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2s_40013000_P_mck_enabled 0
#define DT_N_S_soc_S_i2s_40013000_P_mck_enabled_EXISTS 1

/*
 * Devicetree node: /soc/i2s@40013400
 *
 * Node identifier: DT_N_S_soc_S_i2s_40013400
 *
 * Binding (compatible = st,stm32-i2s):
 *   $ZEPHYR_BASE/dts/bindings/i2s/st,stm32-i2s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2s_40013400_PATH "/soc/i2s@40013400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2s_40013400_FULL_NAME "i2s@40013400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2s_40013400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2s_40013400_CHILD_IDX 36

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2s_40013400_CHILD_NUM 0
#define DT_N_S_soc_S_i2s_40013400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2s_40013400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2s_40013400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2s_40013400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_40013400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2s_40013400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2s_40013400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2s_40013400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_40013400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2s_40013400_ORD 57
#define DT_N_S_soc_S_i2s_40013400_ORD_STR_SORTABLE 00057

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2s_40013400_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40023800 */ \
	55, /* /soc/dma@40026400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2s_40013400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2s_40013400_EXISTS 1
#define DT_N_INST_3_st_stm32_i2s DT_N_S_soc_S_i2s_40013400
#define DT_N_NODELABEL_i2s4      DT_N_S_soc_S_i2s_40013400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2s_40013400_REG_NUM 1
#define DT_N_S_soc_S_i2s_40013400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_REG_IDX_0_VAL_ADDRESS 1073820672 /* 0x40013400 */
#define DT_N_S_soc_S_i2s_40013400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2s_40013400_RANGES_NUM 0
#define DT_N_S_soc_S_i2s_40013400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2s_40013400_IRQ_NUM 1
#define DT_N_S_soc_S_i2s_40013400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_IRQ_IDX_0_VAL_irq 84
#define DT_N_S_soc_S_i2s_40013400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_i2s_40013400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2s_40013400_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2s_40013400_COMPAT_MATCHES_st_stm32_i2s 1
#define DT_N_S_soc_S_i2s_40013400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2s_40013400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_COMPAT_MODEL_IDX_0 "stm32-i2s"
#define DT_N_S_soc_S_i2s_40013400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2s_40013400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2s_40013400_P_wakeup_source 0
#define DT_N_S_soc_S_i2s_40013400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2s_40013400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_status "disabled"
#define DT_N_S_soc_S_i2s_40013400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2s_40013400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2s_40013400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40013400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2s_40013400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2s_40013400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2s_40013400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40013400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40013400, status, 0)
#define DT_N_S_soc_S_i2s_40013400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40013400, status, 0)
#define DT_N_S_soc_S_i2s_40013400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40013400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40013400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013400_P_status_LEN 1
#define DT_N_S_soc_S_i2s_40013400_P_status_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_compatible {"st,stm32-i2s"}
#define DT_N_S_soc_S_i2s_40013400_P_compatible_IDX_0 "st,stm32-i2s"
#define DT_N_S_soc_S_i2s_40013400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-i2s
#define DT_N_S_soc_S_i2s_40013400_P_compatible_IDX_0_STRING_TOKEN st_stm32_i2s
#define DT_N_S_soc_S_i2s_40013400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_I2S
#define DT_N_S_soc_S_i2s_40013400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40013400, compatible, 0)
#define DT_N_S_soc_S_i2s_40013400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40013400, compatible, 0)
#define DT_N_S_soc_S_i2s_40013400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40013400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40013400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013400_P_compatible_LEN 1
#define DT_N_S_soc_S_i2s_40013400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_reg {1073820672 /* 0x40013400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2s_40013400_P_reg_IDX_0 1073820672
#define DT_N_S_soc_S_i2s_40013400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2s_40013400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_interrupts {84 /* 0x54 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_i2s_40013400_P_interrupts_IDX_0 84
#define DT_N_S_soc_S_i2s_40013400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_i2s_40013400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_i2s_40013400_P_clocks_IDX_0_VAL_bus 68
#define DT_N_S_soc_S_i2s_40013400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_clocks_IDX_0_VAL_bits 8192
#define DT_N_S_soc_S_i2s_40013400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40013400, clocks, 0)
#define DT_N_S_soc_S_i2s_40013400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40013400, clocks, 0)
#define DT_N_S_soc_S_i2s_40013400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40013400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40013400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013400_P_clocks_LEN 1
#define DT_N_S_soc_S_i2s_40013400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_0_PH DT_N_S_soc_S_dma_40026400
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_0_VAL_channel 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_0_VAL_slot 4
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_0_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_0_VAL_channel_config 1024
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_0_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_0_VAL_features 3
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_0_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_0_NAME "tx"
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_tx_PH DT_N_S_soc_S_dma_40026400
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_tx_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_tx_VAL_channel DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_0_VAL_channel
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_tx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_tx_VAL_slot DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_0_VAL_slot
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_tx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_tx_VAL_channel_config DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_0_VAL_channel_config
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_tx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_tx_VAL_features DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_0_VAL_features
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_tx_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_1_PH DT_N_S_soc_S_dma_40026400
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_1_VAL_channel 0
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_1_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_1_VAL_slot 4
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_1_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_1_VAL_channel_config 1024
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_1_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_1_VAL_features 3
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_1_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_1_NAME "rx"
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_rx_PH DT_N_S_soc_S_dma_40026400
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_rx_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_rx_VAL_channel DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_1_VAL_channel
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_rx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_rx_VAL_slot DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_1_VAL_slot
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_rx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_rx_VAL_channel_config DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_1_VAL_channel_config
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_rx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_rx_VAL_features DT_N_S_soc_S_i2s_40013400_P_dmas_IDX_1_VAL_features
#define DT_N_S_soc_S_i2s_40013400_P_dmas_NAME_rx_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40013400, dmas, 0) \
	fn(DT_N_S_soc_S_i2s_40013400, dmas, 1)
#define DT_N_S_soc_S_i2s_40013400_P_dmas_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40013400, dmas, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40013400, dmas, 1)
#define DT_N_S_soc_S_i2s_40013400_P_dmas_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40013400, dmas, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013400, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013400_P_dmas_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40013400, dmas, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40013400, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013400_P_dmas_LEN 2
#define DT_N_S_soc_S_i2s_40013400_P_dmas_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dma_names {"tx", "rx"}
#define DT_N_S_soc_S_i2s_40013400_P_dma_names_IDX_0 "tx"
#define DT_N_S_soc_S_i2s_40013400_P_dma_names_IDX_0_STRING_UNQUOTED tx
#define DT_N_S_soc_S_i2s_40013400_P_dma_names_IDX_0_STRING_TOKEN tx
#define DT_N_S_soc_S_i2s_40013400_P_dma_names_IDX_0_STRING_UPPER_TOKEN TX
#define DT_N_S_soc_S_i2s_40013400_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dma_names_IDX_1 "rx"
#define DT_N_S_soc_S_i2s_40013400_P_dma_names_IDX_1_STRING_UNQUOTED rx
#define DT_N_S_soc_S_i2s_40013400_P_dma_names_IDX_1_STRING_TOKEN rx
#define DT_N_S_soc_S_i2s_40013400_P_dma_names_IDX_1_STRING_UPPER_TOKEN RX
#define DT_N_S_soc_S_i2s_40013400_P_dma_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40013400, dma_names, 0) \
	fn(DT_N_S_soc_S_i2s_40013400, dma_names, 1)
#define DT_N_S_soc_S_i2s_40013400_P_dma_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40013400, dma_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40013400, dma_names, 1)
#define DT_N_S_soc_S_i2s_40013400_P_dma_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40013400, dma_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40013400, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013400_P_dma_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40013400, dma_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40013400, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40013400_P_dma_names_LEN 2
#define DT_N_S_soc_S_i2s_40013400_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2s_40013400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2s_40013400_P_mck_enabled 0
#define DT_N_S_soc_S_i2s_40013400_P_mck_enabled_EXISTS 1

/*
 * Devicetree node: /soc/i2s@40015000
 *
 * Node identifier: DT_N_S_soc_S_i2s_40015000
 *
 * Binding (compatible = st,stm32-i2s):
 *   $ZEPHYR_BASE/dts/bindings/i2s/st,stm32-i2s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2s_40015000_PATH "/soc/i2s@40015000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2s_40015000_FULL_NAME "i2s@40015000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2s_40015000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2s_40015000_CHILD_IDX 37

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2s_40015000_CHILD_NUM 0
#define DT_N_S_soc_S_i2s_40015000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2s_40015000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2s_40015000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2s_40015000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_40015000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2s_40015000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2s_40015000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2s_40015000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_40015000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2s_40015000_ORD 58
#define DT_N_S_soc_S_i2s_40015000_ORD_STR_SORTABLE 00058

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2s_40015000_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40023800 */ \
	55, /* /soc/dma@40026400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2s_40015000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2s_40015000_EXISTS 1
#define DT_N_INST_4_st_stm32_i2s DT_N_S_soc_S_i2s_40015000
#define DT_N_NODELABEL_i2s5      DT_N_S_soc_S_i2s_40015000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2s_40015000_REG_NUM 1
#define DT_N_S_soc_S_i2s_40015000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_REG_IDX_0_VAL_ADDRESS 1073827840 /* 0x40015000 */
#define DT_N_S_soc_S_i2s_40015000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2s_40015000_RANGES_NUM 0
#define DT_N_S_soc_S_i2s_40015000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2s_40015000_IRQ_NUM 1
#define DT_N_S_soc_S_i2s_40015000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_IRQ_IDX_0_VAL_irq 85
#define DT_N_S_soc_S_i2s_40015000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_i2s_40015000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2s_40015000_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2s_40015000_COMPAT_MATCHES_st_stm32_i2s 1
#define DT_N_S_soc_S_i2s_40015000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2s_40015000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_COMPAT_MODEL_IDX_0 "stm32-i2s"
#define DT_N_S_soc_S_i2s_40015000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2s_40015000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2s_40015000_P_wakeup_source 0
#define DT_N_S_soc_S_i2s_40015000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2s_40015000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_status "disabled"
#define DT_N_S_soc_S_i2s_40015000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2s_40015000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2s_40015000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40015000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2s_40015000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2s_40015000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2s_40015000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40015000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40015000, status, 0)
#define DT_N_S_soc_S_i2s_40015000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40015000, status, 0)
#define DT_N_S_soc_S_i2s_40015000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40015000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40015000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40015000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40015000_P_status_LEN 1
#define DT_N_S_soc_S_i2s_40015000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_compatible {"st,stm32-i2s"}
#define DT_N_S_soc_S_i2s_40015000_P_compatible_IDX_0 "st,stm32-i2s"
#define DT_N_S_soc_S_i2s_40015000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-i2s
#define DT_N_S_soc_S_i2s_40015000_P_compatible_IDX_0_STRING_TOKEN st_stm32_i2s
#define DT_N_S_soc_S_i2s_40015000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_I2S
#define DT_N_S_soc_S_i2s_40015000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40015000, compatible, 0)
#define DT_N_S_soc_S_i2s_40015000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40015000, compatible, 0)
#define DT_N_S_soc_S_i2s_40015000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40015000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40015000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40015000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40015000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2s_40015000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_reg {1073827840 /* 0x40015000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2s_40015000_P_reg_IDX_0 1073827840
#define DT_N_S_soc_S_i2s_40015000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2s_40015000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_interrupts {85 /* 0x55 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_i2s_40015000_P_interrupts_IDX_0 85
#define DT_N_S_soc_S_i2s_40015000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_i2s_40015000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_i2s_40015000_P_clocks_IDX_0_VAL_bus 68
#define DT_N_S_soc_S_i2s_40015000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_clocks_IDX_0_VAL_bits 1048576
#define DT_N_S_soc_S_i2s_40015000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40015000, clocks, 0)
#define DT_N_S_soc_S_i2s_40015000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40015000, clocks, 0)
#define DT_N_S_soc_S_i2s_40015000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40015000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40015000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40015000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40015000_P_clocks_LEN 1
#define DT_N_S_soc_S_i2s_40015000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_0_PH DT_N_S_soc_S_dma_40026400
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_0_VAL_channel 6
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_0_VAL_slot 7
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_0_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_0_VAL_channel_config 1024
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_0_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_0_VAL_features 3
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_0_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_0_NAME "tx"
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_tx_PH DT_N_S_soc_S_dma_40026400
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_tx_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_tx_VAL_channel DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_0_VAL_channel
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_tx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_tx_VAL_slot DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_0_VAL_slot
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_tx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_tx_VAL_channel_config DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_0_VAL_channel_config
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_tx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_tx_VAL_features DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_0_VAL_features
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_tx_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_1_PH DT_N_S_soc_S_dma_40026400
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_1_VAL_channel 5
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_1_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_1_VAL_slot 7
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_1_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_1_VAL_channel_config 1024
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_1_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_1_VAL_features 3
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_1_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_1_NAME "rx"
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_rx_PH DT_N_S_soc_S_dma_40026400
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_rx_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_rx_VAL_channel DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_1_VAL_channel
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_rx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_rx_VAL_slot DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_1_VAL_slot
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_rx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_rx_VAL_channel_config DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_1_VAL_channel_config
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_rx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_rx_VAL_features DT_N_S_soc_S_i2s_40015000_P_dmas_IDX_1_VAL_features
#define DT_N_S_soc_S_i2s_40015000_P_dmas_NAME_rx_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40015000, dmas, 0) \
	fn(DT_N_S_soc_S_i2s_40015000, dmas, 1)
#define DT_N_S_soc_S_i2s_40015000_P_dmas_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40015000, dmas, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40015000, dmas, 1)
#define DT_N_S_soc_S_i2s_40015000_P_dmas_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40015000, dmas, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40015000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40015000_P_dmas_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40015000, dmas, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40015000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40015000_P_dmas_LEN 2
#define DT_N_S_soc_S_i2s_40015000_P_dmas_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dma_names {"tx", "rx"}
#define DT_N_S_soc_S_i2s_40015000_P_dma_names_IDX_0 "tx"
#define DT_N_S_soc_S_i2s_40015000_P_dma_names_IDX_0_STRING_UNQUOTED tx
#define DT_N_S_soc_S_i2s_40015000_P_dma_names_IDX_0_STRING_TOKEN tx
#define DT_N_S_soc_S_i2s_40015000_P_dma_names_IDX_0_STRING_UPPER_TOKEN TX
#define DT_N_S_soc_S_i2s_40015000_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dma_names_IDX_1 "rx"
#define DT_N_S_soc_S_i2s_40015000_P_dma_names_IDX_1_STRING_UNQUOTED rx
#define DT_N_S_soc_S_i2s_40015000_P_dma_names_IDX_1_STRING_TOKEN rx
#define DT_N_S_soc_S_i2s_40015000_P_dma_names_IDX_1_STRING_UPPER_TOKEN RX
#define DT_N_S_soc_S_i2s_40015000_P_dma_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40015000, dma_names, 0) \
	fn(DT_N_S_soc_S_i2s_40015000, dma_names, 1)
#define DT_N_S_soc_S_i2s_40015000_P_dma_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40015000, dma_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40015000, dma_names, 1)
#define DT_N_S_soc_S_i2s_40015000_P_dma_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40015000, dma_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40015000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40015000_P_dma_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40015000, dma_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_40015000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40015000_P_dma_names_LEN 2
#define DT_N_S_soc_S_i2s_40015000_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2s_40015000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2s_40015000_P_mck_enabled 0
#define DT_N_S_soc_S_i2s_40015000_P_mck_enabled_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@40013c00
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_40013c00
 *
 * Binding (compatible = st,stm32-exti):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/st,stm32-exti.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_PATH "/soc/interrupt-controller@40013c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_FULL_NAME "interrupt-controller@40013c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_40013c00_CHILD_NUM 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_40013c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_40013c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_40013c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_40013c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_40013c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_40013c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_40013c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_ORD 59
#define DT_N_S_soc_S_interrupt_controller_40013c00_ORD_STR_SORTABLE 00059

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_EXISTS 1
#define DT_N_INST_0_st_stm32_exti DT_N_S_soc_S_interrupt_controller_40013c00
#define DT_N_NODELABEL_exti       DT_N_S_soc_S_interrupt_controller_40013c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_REG_IDX_0_VAL_ADDRESS 1073822720 /* 0x40013c00 */
#define DT_N_S_soc_S_interrupt_controller_40013c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_interrupt_controller_40013c00_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NUM 7
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_0_VAL_irq 6
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_1_VAL_irq 7
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_2_VAL_irq 8
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_3_VAL_irq 9
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_4_VAL_irq 10
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_4_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_5_VAL_irq 23
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_5_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_6_VAL_irq 40
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_6_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line0_VAL_irq DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line0_VAL_priority DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line0_CONTROLLER DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line1_VAL_irq DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line1_VAL_priority DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line1_CONTROLLER DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line2_VAL_irq DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line2_VAL_priority DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line2_CONTROLLER DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_2_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line3_VAL_irq DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line3_VAL_priority DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line3_CONTROLLER DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_3_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line4_VAL_irq DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_4_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line4_VAL_priority DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_4_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line4_CONTROLLER DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_4_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line5_9_VAL_irq DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_5_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line5_9_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line5_9_VAL_priority DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_5_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line5_9_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line5_9_CONTROLLER DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_5_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line10_15_VAL_irq DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_6_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line10_15_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line10_15_VAL_priority DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_6_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line10_15_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line10_15_CONTROLLER DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_6_CONTROLLER
#define DT_N_S_soc_S_interrupt_controller_40013c00_COMPAT_MATCHES_st_stm32_exti 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_interrupt_controller_40013c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_COMPAT_MODEL_IDX_0 "stm32-exti"
#define DT_N_S_soc_S_interrupt_controller_40013c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible {"st,stm32-exti"}
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_IDX_0 "st,stm32-exti"
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-exti
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_exti
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_EXTI
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_40013c00, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_40013c00, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_40013c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_40013c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg {1073822720 /* 0x40013c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg_IDX_0 1073822720
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts {6 /* 0x6 */, 0 /* 0x0 */, 7 /* 0x7 */, 0 /* 0x0 */, 8 /* 0x8 */, 0 /* 0x0 */, 9 /* 0x9 */, 0 /* 0x0 */, 10 /* 0xa */, 0 /* 0x0 */, 23 /* 0x17 */, 0 /* 0x0 */, 40 /* 0x28 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_0 6
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_2 7
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_4 8
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_6 9
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_8 10
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_10 23
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_11 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_12 40
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names {"line0", "line1", "line2", "line3", "line4", "line5-9", "line10-15"}
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_0 "line0"
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_0_STRING_UNQUOTED line0
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_0_STRING_TOKEN line0
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN LINE0
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_1 "line1"
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_1_STRING_UNQUOTED line1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_1_STRING_TOKEN line1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN LINE1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_2 "line2"
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_2_STRING_UNQUOTED line2
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_2_STRING_TOKEN line2
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN LINE2
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_3 "line3"
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_3_STRING_UNQUOTED line3
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_3_STRING_TOKEN line3
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_3_STRING_UPPER_TOKEN LINE3
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_4 "line4"
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_4_STRING_UNQUOTED line4
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_4_STRING_TOKEN line4
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_4_STRING_UPPER_TOKEN LINE4
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_4_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_5 "line5-9"
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_5_STRING_UNQUOTED line5-9
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_5_STRING_TOKEN line5_9
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_5_STRING_UPPER_TOKEN LINE5_9
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_5_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_6 "line10-15"
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_6_STRING_UNQUOTED line10-15
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_6_STRING_TOKEN line10_15
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_6_STRING_UPPER_TOKEN LINE10_15
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_6_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 1) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 2) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 3) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 4) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 5) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 6)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 6)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 6, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 6, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_LEN 7
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_num_lines 16
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_num_lines_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges {0 /* 0x0 */, 1 /* 0x1 */, 1 /* 0x1 */, 1 /* 0x1 */, 2 /* 0x2 */, 1 /* 0x1 */, 3 /* 0x3 */, 1 /* 0x1 */, 4 /* 0x4 */, 1 /* 0x1 */, 5 /* 0x5 */, 5 /* 0x5 */, 10 /* 0xa */, 6 /* 0x6 */}
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_IDX_0 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_IDX_1 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_IDX_2 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_IDX_3 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_IDX_4 2
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_IDX_4_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_IDX_5 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_IDX_5_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_IDX_6 3
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_IDX_6_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_IDX_7 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_IDX_7_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_IDX_8 4
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_IDX_8_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_IDX_9 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_IDX_9_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_IDX_10 5
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_IDX_10_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_IDX_11 5
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_IDX_11_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_IDX_12 10
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_IDX_12_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_IDX_13 6
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_IDX_13_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 1) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 2) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 3) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 4) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 5) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 6) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 7) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 8) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 9) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 10) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 11) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 12) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 13)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 13)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 13, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, line_ranges, 13, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_LEN 14
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_line_ranges_EXISTS 1

/*
 * Devicetree node: /soc/sdmmc@40012c00
 *
 * Node identifier: DT_N_S_soc_S_sdmmc_40012c00
 *
 * Binding (compatible = st,stm32-sdmmc):
 *   $ZEPHYR_BASE/dts/bindings/mmc/st,stm32-sdmmc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sdmmc_40012c00_PATH "/soc/sdmmc@40012c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sdmmc_40012c00_FULL_NAME "sdmmc@40012c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sdmmc_40012c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sdmmc_40012c00_CHILD_IDX 28

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sdmmc_40012c00_CHILD_NUM 0
#define DT_N_S_soc_S_sdmmc_40012c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_sdmmc_40012c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sdmmc_40012c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sdmmc_40012c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sdmmc_40012c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sdmmc_40012c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sdmmc_40012c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sdmmc_40012c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sdmmc_40012c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sdmmc_40012c00_ORD 60
#define DT_N_S_soc_S_sdmmc_40012c00_ORD_STR_SORTABLE 00060

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sdmmc_40012c00_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40023800 */ \
	40, /* /soc/rcc@40023800/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sdmmc_40012c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sdmmc_40012c00_EXISTS 1
#define DT_N_INST_0_st_stm32_sdmmc DT_N_S_soc_S_sdmmc_40012c00
#define DT_N_NODELABEL_sdmmc1      DT_N_S_soc_S_sdmmc_40012c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sdmmc_40012c00_REG_NUM 1
#define DT_N_S_soc_S_sdmmc_40012c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_REG_IDX_0_VAL_ADDRESS 1073818624 /* 0x40012c00 */
#define DT_N_S_soc_S_sdmmc_40012c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_sdmmc_40012c00_RANGES_NUM 0
#define DT_N_S_soc_S_sdmmc_40012c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sdmmc_40012c00_IRQ_NUM 1
#define DT_N_S_soc_S_sdmmc_40012c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_IRQ_IDX_0_VAL_irq 49
#define DT_N_S_soc_S_sdmmc_40012c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_sdmmc_40012c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sdmmc_40012c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_sdmmc_40012c00_COMPAT_MATCHES_st_stm32_sdmmc 1
#define DT_N_S_soc_S_sdmmc_40012c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_sdmmc_40012c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_COMPAT_MODEL_IDX_0 "stm32-sdmmc"
#define DT_N_S_soc_S_sdmmc_40012c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sdmmc_40012c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sdmmc_40012c00_P_wakeup_source 0
#define DT_N_S_soc_S_sdmmc_40012c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sdmmc_40012c00_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_status "disabled"
#define DT_N_S_soc_S_sdmmc_40012c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_sdmmc_40012c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_sdmmc_40012c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sdmmc_40012c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_sdmmc_40012c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_sdmmc_40012c00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_sdmmc_40012c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sdmmc_40012c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdmmc_40012c00, status, 0)
#define DT_N_S_soc_S_sdmmc_40012c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdmmc_40012c00, status, 0)
#define DT_N_S_soc_S_sdmmc_40012c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdmmc_40012c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_40012c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdmmc_40012c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_40012c00_P_status_LEN 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_status_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_compatible {"st,stm32-sdmmc"}
#define DT_N_S_soc_S_sdmmc_40012c00_P_compatible_IDX_0 "st,stm32-sdmmc"
#define DT_N_S_soc_S_sdmmc_40012c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-sdmmc
#define DT_N_S_soc_S_sdmmc_40012c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_sdmmc
#define DT_N_S_soc_S_sdmmc_40012c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_SDMMC
#define DT_N_S_soc_S_sdmmc_40012c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdmmc_40012c00, compatible, 0)
#define DT_N_S_soc_S_sdmmc_40012c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdmmc_40012c00, compatible, 0)
#define DT_N_S_soc_S_sdmmc_40012c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdmmc_40012c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_40012c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdmmc_40012c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_40012c00_P_compatible_LEN 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_reg {1073818624 /* 0x40012c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_sdmmc_40012c00_P_reg_IDX_0 1073818624
#define DT_N_S_soc_S_sdmmc_40012c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_sdmmc_40012c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_interrupts {49 /* 0x31 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_sdmmc_40012c00_P_interrupts_IDX_0 49
#define DT_N_S_soc_S_sdmmc_40012c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_sdmmc_40012c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_sdmmc_40012c00_P_clocks_IDX_0_VAL_bus 68
#define DT_N_S_soc_S_sdmmc_40012c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_clocks_IDX_0_VAL_bits 2048
#define DT_N_S_soc_S_sdmmc_40012c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_clocks_IDX_1_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_sdmmc_40012c00_P_clocks_IDX_1_VAL_bus 5
#define DT_N_S_soc_S_sdmmc_40012c00_P_clocks_IDX_1_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_clocks_IDX_1_VAL_bits 255
#define DT_N_S_soc_S_sdmmc_40012c00_P_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdmmc_40012c00, clocks, 0) \
	fn(DT_N_S_soc_S_sdmmc_40012c00, clocks, 1)
#define DT_N_S_soc_S_sdmmc_40012c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdmmc_40012c00, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sdmmc_40012c00, clocks, 1)
#define DT_N_S_soc_S_sdmmc_40012c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdmmc_40012c00, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sdmmc_40012c00, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_40012c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdmmc_40012c00, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sdmmc_40012c00, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_40012c00_P_clocks_LEN 2
#define DT_N_S_soc_S_sdmmc_40012c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_sdmmc_40012c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40023800_S_reset_controller
#define DT_N_S_soc_S_sdmmc_40012c00_P_resets_IDX_0_VAL_id 1163
#define DT_N_S_soc_S_sdmmc_40012c00_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdmmc_40012c00, resets, 0)
#define DT_N_S_soc_S_sdmmc_40012c00_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdmmc_40012c00, resets, 0)
#define DT_N_S_soc_S_sdmmc_40012c00_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdmmc_40012c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_40012c00_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdmmc_40012c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_40012c00_P_resets_LEN 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_resets_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_bus_width 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_bus_width_ENUM_IDX 0
#define DT_N_S_soc_S_sdmmc_40012c00_P_bus_width_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_bus_width_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_clk_div 0
#define DT_N_S_soc_S_sdmmc_40012c00_P_clk_div_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_idma 0
#define DT_N_S_soc_S_sdmmc_40012c00_P_idma_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart2_rx_pa3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_PATH "/soc/pin-controller@40020000/usart2_rx_pa3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_FULL_NAME "usart2_rx_pa3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_CHILD_IDX 14

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_ORD 61
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_ORD_STR_SORTABLE 00061

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_SUPPORTS_ORDS \
	63, /* /soc/serial@40004400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_EXISTS 1
#define DT_N_NODELABEL_usart2_rx_pa3 DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_pinmux 103
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_slew_rate_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart2_tx_pa2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_PATH "/soc/pin-controller@40020000/usart2_tx_pa2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_FULL_NAME "usart2_tx_pa2"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_CHILD_IDX 15

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_ORD 62
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_ORD_STR_SORTABLE 00062

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_SUPPORTS_ORDS \
	63, /* /soc/serial@40004400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_EXISTS 1
#define DT_N_NODELABEL_usart2_tx_pa2 DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_pinmux 71
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_slew_rate_EXISTS 1

/*
 * Devicetree node: /soc/serial@40004400
 *
 * Node identifier: DT_N_S_soc_S_serial_40004400
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40004400_PATH "/soc/serial@40004400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40004400_FULL_NAME "serial@40004400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40004400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40004400_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40004400_CHILD_NUM 0
#define DT_N_S_soc_S_serial_40004400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40004400_ORD 63
#define DT_N_S_soc_S_serial_40004400_ORD_STR_SORTABLE 00063

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40004400_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40023800 */ \
	40, /* /soc/rcc@40023800/reset-controller */ \
	61, /* /soc/pin-controller@40020000/usart2_rx_pa3 */ \
	62, /* /soc/pin-controller@40020000/usart2_tx_pa2 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40004400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40004400_EXISTS 1
#define DT_N_INST_0_st_stm32_usart DT_N_S_soc_S_serial_40004400
#define DT_N_INST_0_st_stm32_uart  DT_N_S_soc_S_serial_40004400
#define DT_N_NODELABEL_usart2      DT_N_S_soc_S_serial_40004400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40004400_REG_NUM 1
#define DT_N_S_soc_S_serial_40004400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_REG_IDX_0_VAL_ADDRESS 1073759232 /* 0x40004400 */
#define DT_N_S_soc_S_serial_40004400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40004400_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40004400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40004400_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_irq 38
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_40004400_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40004400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_MODEL_IDX_0 "stm32-usart"
#define DT_N_S_soc_S_serial_40004400_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40004400_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_MODEL_IDX_1 "stm32-uart"
#define DT_N_S_soc_S_serial_40004400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40004400_PINCTRL_NUM 1
#define DT_N_S_soc_S_serial_40004400_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_serial_40004400_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_40004400_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_serial_40004400_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2
#define DT_N_S_soc_S_serial_40004400_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40004400_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40004400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40004400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_status "okay"
#define DT_N_S_soc_S_serial_40004400_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_serial_40004400_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_serial_40004400_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_40004400_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_serial_40004400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_serial_40004400_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_serial_40004400_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_40004400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, status, 0)
#define DT_N_S_soc_S_serial_40004400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, status, 0)
#define DT_N_S_soc_S_serial_40004400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_status_LEN 1
#define DT_N_S_soc_S_serial_40004400_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-usart
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0_STRING_TOKEN st_stm32_usart
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_USART
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40004400, compatible, 1)
#define DT_N_S_soc_S_serial_40004400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, compatible, 1)
#define DT_N_S_soc_S_serial_40004400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40004400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_reg {1073759232 /* 0x40004400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_0 1073759232
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_interrupts {38 /* 0x26 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_0 38
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bits 131072
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, clocks, 0)
#define DT_N_S_soc_S_serial_40004400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, clocks, 0)
#define DT_N_S_soc_S_serial_40004400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_40004400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_current_speed 115200
#define DT_N_S_soc_S_serial_40004400_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40004400_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_serial_40004400, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40004400, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_serial_40004400_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40023800_S_reset_controller
#define DT_N_S_soc_S_serial_40004400_P_resets_IDX_0_VAL_id 1041
#define DT_N_S_soc_S_serial_40004400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, resets, 0)
#define DT_N_S_soc_S_serial_40004400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40004400, resets, 0)
#define DT_N_S_soc_S_serial_40004400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40004400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_resets_LEN 1
#define DT_N_S_soc_S_serial_40004400_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_single_wire 0
#define DT_N_S_soc_S_serial_40004400_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40004400_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_tx_invert 0
#define DT_N_S_soc_S_serial_40004400_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_rx_invert 0
#define DT_N_S_soc_S_serial_40004400_P_rx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_de_enable 0
#define DT_N_S_soc_S_serial_40004400_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_de_assert_time 0
#define DT_N_S_soc_S_serial_40004400_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_40004400_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_de_invert 0
#define DT_N_S_soc_S_serial_40004400_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_fifo_enable 0
#define DT_N_S_soc_S_serial_40004400_P_fifo_enable_EXISTS 1

/*
 * Devicetree node: /soc/serial@40011000
 *
 * Node identifier: DT_N_S_soc_S_serial_40011000
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40011000_PATH "/soc/serial@40011000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40011000_FULL_NAME "serial@40011000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40011000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40011000_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40011000_CHILD_NUM 0
#define DT_N_S_soc_S_serial_40011000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_40011000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40011000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40011000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40011000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40011000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40011000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40011000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40011000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40011000_ORD 64
#define DT_N_S_soc_S_serial_40011000_ORD_STR_SORTABLE 00064

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40011000_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40023800 */ \
	40, /* /soc/rcc@40023800/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40011000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40011000_EXISTS 1
#define DT_N_INST_1_st_stm32_usart DT_N_S_soc_S_serial_40011000
#define DT_N_INST_1_st_stm32_uart  DT_N_S_soc_S_serial_40011000
#define DT_N_NODELABEL_usart1      DT_N_S_soc_S_serial_40011000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40011000_REG_NUM 1
#define DT_N_S_soc_S_serial_40011000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_REG_IDX_0_VAL_ADDRESS 1073811456 /* 0x40011000 */
#define DT_N_S_soc_S_serial_40011000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40011000_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40011000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40011000_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40011000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_IRQ_IDX_0_VAL_irq 37
#define DT_N_S_soc_S_serial_40011000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40011000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_40011000_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_40011000_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40011000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40011000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_COMPAT_MODEL_IDX_0 "stm32-usart"
#define DT_N_S_soc_S_serial_40011000_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40011000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40011000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_COMPAT_MODEL_IDX_1 "stm32-uart"
#define DT_N_S_soc_S_serial_40011000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40011000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40011000_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40011000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40011000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_status "disabled"
#define DT_N_S_soc_S_serial_40011000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_serial_40011000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40011000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40011000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_serial_40011000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40011000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_serial_40011000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40011000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011000, status, 0)
#define DT_N_S_soc_S_serial_40011000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40011000, status, 0)
#define DT_N_S_soc_S_serial_40011000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40011000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_status_LEN 1
#define DT_N_S_soc_S_serial_40011000_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40011000_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40011000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-usart
#define DT_N_S_soc_S_serial_40011000_P_compatible_IDX_0_STRING_TOKEN st_stm32_usart
#define DT_N_S_soc_S_serial_40011000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_USART
#define DT_N_S_soc_S_serial_40011000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40011000_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_40011000_P_compatible_IDX_1_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40011000_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40011000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011000, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40011000, compatible, 1)
#define DT_N_S_soc_S_serial_40011000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40011000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40011000, compatible, 1)
#define DT_N_S_soc_S_serial_40011000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40011000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40011000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40011000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_reg {1073811456 /* 0x40011000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40011000_P_reg_IDX_0 1073811456
#define DT_N_S_soc_S_serial_40011000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40011000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_interrupts {37 /* 0x25 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40011000_P_interrupts_IDX_0 37
#define DT_N_S_soc_S_serial_40011000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40011000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_serial_40011000_P_clocks_IDX_0_VAL_bus 68
#define DT_N_S_soc_S_serial_40011000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_clocks_IDX_0_VAL_bits 16
#define DT_N_S_soc_S_serial_40011000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011000, clocks, 0)
#define DT_N_S_soc_S_serial_40011000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40011000, clocks, 0)
#define DT_N_S_soc_S_serial_40011000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40011000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40011000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_40011000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40011000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40023800_S_reset_controller
#define DT_N_S_soc_S_serial_40011000_P_resets_IDX_0_VAL_id 1156
#define DT_N_S_soc_S_serial_40011000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011000, resets, 0)
#define DT_N_S_soc_S_serial_40011000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40011000, resets, 0)
#define DT_N_S_soc_S_serial_40011000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40011000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_resets_LEN 1
#define DT_N_S_soc_S_serial_40011000_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_single_wire 0
#define DT_N_S_soc_S_serial_40011000_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40011000_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_tx_invert 0
#define DT_N_S_soc_S_serial_40011000_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_rx_invert 0
#define DT_N_S_soc_S_serial_40011000_P_rx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_de_enable 0
#define DT_N_S_soc_S_serial_40011000_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_de_assert_time 0
#define DT_N_S_soc_S_serial_40011000_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_40011000_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_de_invert 0
#define DT_N_S_soc_S_serial_40011000_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_fifo_enable 0
#define DT_N_S_soc_S_serial_40011000_P_fifo_enable_EXISTS 1

/*
 * Devicetree node: /soc/serial@40011400
 *
 * Node identifier: DT_N_S_soc_S_serial_40011400
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40011400_PATH "/soc/serial@40011400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40011400_FULL_NAME "serial@40011400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40011400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40011400_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40011400_CHILD_NUM 0
#define DT_N_S_soc_S_serial_40011400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_40011400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40011400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40011400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40011400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40011400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40011400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40011400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40011400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40011400_ORD 65
#define DT_N_S_soc_S_serial_40011400_ORD_STR_SORTABLE 00065

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40011400_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40023800 */ \
	40, /* /soc/rcc@40023800/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40011400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40011400_EXISTS 1
#define DT_N_INST_2_st_stm32_usart DT_N_S_soc_S_serial_40011400
#define DT_N_INST_2_st_stm32_uart  DT_N_S_soc_S_serial_40011400
#define DT_N_NODELABEL_usart6      DT_N_S_soc_S_serial_40011400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40011400_REG_NUM 1
#define DT_N_S_soc_S_serial_40011400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_REG_IDX_0_VAL_ADDRESS 1073812480 /* 0x40011400 */
#define DT_N_S_soc_S_serial_40011400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40011400_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40011400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40011400_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40011400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_IRQ_IDX_0_VAL_irq 71
#define DT_N_S_soc_S_serial_40011400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40011400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_40011400_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_40011400_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40011400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40011400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_COMPAT_MODEL_IDX_0 "stm32-usart"
#define DT_N_S_soc_S_serial_40011400_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40011400_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_serial_40011400_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_COMPAT_MODEL_IDX_1 "stm32-uart"
#define DT_N_S_soc_S_serial_40011400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40011400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40011400_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40011400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40011400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_status "disabled"
#define DT_N_S_soc_S_serial_40011400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_serial_40011400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40011400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40011400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_serial_40011400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40011400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_serial_40011400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40011400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011400, status, 0)
#define DT_N_S_soc_S_serial_40011400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40011400, status, 0)
#define DT_N_S_soc_S_serial_40011400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40011400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011400_P_status_LEN 1
#define DT_N_S_soc_S_serial_40011400_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40011400_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40011400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-usart
#define DT_N_S_soc_S_serial_40011400_P_compatible_IDX_0_STRING_TOKEN st_stm32_usart
#define DT_N_S_soc_S_serial_40011400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_USART
#define DT_N_S_soc_S_serial_40011400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40011400_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-uart
#define DT_N_S_soc_S_serial_40011400_P_compatible_IDX_1_STRING_TOKEN st_stm32_uart
#define DT_N_S_soc_S_serial_40011400_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_UART
#define DT_N_S_soc_S_serial_40011400_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011400, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40011400, compatible, 1)
#define DT_N_S_soc_S_serial_40011400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40011400, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40011400, compatible, 1)
#define DT_N_S_soc_S_serial_40011400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011400, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011400, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40011400, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40011400, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011400_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40011400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_reg {1073812480 /* 0x40011400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40011400_P_reg_IDX_0 1073812480
#define DT_N_S_soc_S_serial_40011400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40011400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_interrupts {71 /* 0x47 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40011400_P_interrupts_IDX_0 71
#define DT_N_S_soc_S_serial_40011400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40011400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_serial_40011400_P_clocks_IDX_0_VAL_bus 68
#define DT_N_S_soc_S_serial_40011400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_clocks_IDX_0_VAL_bits 32
#define DT_N_S_soc_S_serial_40011400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011400, clocks, 0)
#define DT_N_S_soc_S_serial_40011400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40011400, clocks, 0)
#define DT_N_S_soc_S_serial_40011400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40011400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011400_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40011400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_40011400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40011400_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40023800_S_reset_controller
#define DT_N_S_soc_S_serial_40011400_P_resets_IDX_0_VAL_id 1157
#define DT_N_S_soc_S_serial_40011400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011400, resets, 0)
#define DT_N_S_soc_S_serial_40011400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40011400, resets, 0)
#define DT_N_S_soc_S_serial_40011400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40011400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011400_P_resets_LEN 1
#define DT_N_S_soc_S_serial_40011400_P_resets_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_single_wire 0
#define DT_N_S_soc_S_serial_40011400_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40011400_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_tx_invert 0
#define DT_N_S_soc_S_serial_40011400_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_rx_invert 0
#define DT_N_S_soc_S_serial_40011400_P_rx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_de_enable 0
#define DT_N_S_soc_S_serial_40011400_P_de_enable_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_de_assert_time 0
#define DT_N_S_soc_S_serial_40011400_P_de_assert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_de_deassert_time 0
#define DT_N_S_soc_S_serial_40011400_P_de_deassert_time_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_de_invert 0
#define DT_N_S_soc_S_serial_40011400_P_de_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_fifo_enable 0
#define DT_N_S_soc_S_serial_40011400_P_fifo_enable_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003800
 *
 * Node identifier: DT_N_S_soc_S_spi_40003800
 *
 * Binding (compatible = st,stm32-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003800_PATH "/soc/spi@40003800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003800_FULL_NAME "spi@40003800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40003800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40003800_CHILD_IDX 29

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40003800_CHILD_NUM 0
#define DT_N_S_soc_S_spi_40003800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003800_ORD 66
#define DT_N_S_soc_S_spi_40003800_ORD_STR_SORTABLE 00066

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003800_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003800_EXISTS 1
#define DT_N_INST_1_st_stm32_spi DT_N_S_soc_S_spi_40003800
#define DT_N_NODELABEL_spi2      DT_N_S_soc_S_spi_40003800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003800_REG_NUM 1
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_VAL_ADDRESS 1073756160 /* 0x40003800 */
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40003800_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003800_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_irq 36
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_spi_40003800_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40003800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_MODEL_IDX_0 "stm32-spi"
#define DT_N_S_soc_S_spi_40003800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003800_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40003800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_status "disabled"
#define DT_N_S_soc_S_spi_40003800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_40003800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40003800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_40003800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, status, 0)
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800, status, 0)
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_status_LEN 1
#define DT_N_S_soc_S_spi_40003800_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible {"st,stm32-spi"}
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-spi
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0_STRING_TOKEN st_stm32_spi
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_SPI
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, compatible, 0)
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800, compatible, 0)
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40003800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_reg {1073756160 /* 0x40003800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_0 1073756160
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts {36 /* 0x24 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_0 36
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bits 16384
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, clocks, 0)
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800, clocks, 0)
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_40003800_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003c00
 *
 * Node identifier: DT_N_S_soc_S_spi_40003c00
 *
 * Binding (compatible = st,stm32-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003c00_PATH "/soc/spi@40003c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003c00_FULL_NAME "spi@40003c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40003c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40003c00_CHILD_IDX 30

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40003c00_CHILD_NUM 0
#define DT_N_S_soc_S_spi_40003c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003c00_ORD 67
#define DT_N_S_soc_S_spi_40003c00_ORD_STR_SORTABLE 00067

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003c00_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003c00_EXISTS 1
#define DT_N_INST_2_st_stm32_spi DT_N_S_soc_S_spi_40003c00
#define DT_N_NODELABEL_spi3      DT_N_S_soc_S_spi_40003c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003c00_REG_NUM 1
#define DT_N_S_soc_S_spi_40003c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_REG_IDX_0_VAL_ADDRESS 1073757184 /* 0x40003c00 */
#define DT_N_S_soc_S_spi_40003c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40003c00_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003c00_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_VAL_irq 51
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_spi_40003c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40003c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_MODEL_IDX_0 "stm32-spi"
#define DT_N_S_soc_S_spi_40003c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003c00_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40003c00_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_status "disabled"
#define DT_N_S_soc_S_spi_40003c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_40003c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40003c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_40003c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40003c00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40003c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, status, 0)
#define DT_N_S_soc_S_spi_40003c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00, status, 0)
#define DT_N_S_soc_S_spi_40003c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_status_LEN 1
#define DT_N_S_soc_S_spi_40003c00_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_compatible {"st,stm32-spi"}
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_0 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-spi
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_spi
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_SPI
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, compatible, 0)
#define DT_N_S_soc_S_spi_40003c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00, compatible, 0)
#define DT_N_S_soc_S_spi_40003c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40003c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_reg {1073757184 /* 0x40003c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40003c00_P_reg_IDX_0 1073757184
#define DT_N_S_soc_S_spi_40003c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40003c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_interrupts {51 /* 0x33 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_IDX_0 51
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_VAL_bits 32768
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, clocks, 0)
#define DT_N_S_soc_S_spi_40003c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00, clocks, 0)
#define DT_N_S_soc_S_spi_40003c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_40003c00_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/spi@40013000
 *
 * Node identifier: DT_N_S_soc_S_spi_40013000
 *
 * Binding (compatible = st,stm32-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40013000_PATH "/soc/spi@40013000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40013000_FULL_NAME "spi@40013000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40013000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40013000_CHILD_IDX 14

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40013000_CHILD_NUM 0
#define DT_N_S_soc_S_spi_40013000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40013000_ORD 68
#define DT_N_S_soc_S_spi_40013000_ORD_STR_SORTABLE 00068

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40013000_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40013000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40013000_EXISTS 1
#define DT_N_INST_0_st_stm32_spi DT_N_S_soc_S_spi_40013000
#define DT_N_NODELABEL_spi1      DT_N_S_soc_S_spi_40013000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40013000_REG_NUM 1
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_VAL_ADDRESS 1073819648 /* 0x40013000 */
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40013000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40013000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40013000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_irq 35
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_spi_40013000_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40013000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_MODEL_IDX_0 "stm32-spi"
#define DT_N_S_soc_S_spi_40013000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40013000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40013000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40013000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_status "disabled"
#define DT_N_S_soc_S_spi_40013000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_40013000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40013000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40013000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_40013000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, status, 0)
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, status, 0)
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_status_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible {"st,stm32-spi"}
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-spi
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0_STRING_TOKEN st_stm32_spi
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_SPI
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, compatible, 0)
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, compatible, 0)
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_reg {1073819648 /* 0x40013000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_0 1073819648
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts {35 /* 0x23 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_0 35
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bus 68
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bits 4096
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, clocks, 0)
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, clocks, 0)
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_40013000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/spi@40013400
 *
 * Node identifier: DT_N_S_soc_S_spi_40013400
 *
 * Binding (compatible = st,stm32-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40013400_PATH "/soc/spi@40013400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40013400_FULL_NAME "spi@40013400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40013400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40013400_CHILD_IDX 31

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40013400_CHILD_NUM 0
#define DT_N_S_soc_S_spi_40013400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_40013400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40013400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40013400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40013400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40013400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40013400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40013400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40013400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40013400_ORD 69
#define DT_N_S_soc_S_spi_40013400_ORD_STR_SORTABLE 00069

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40013400_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40013400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40013400_EXISTS 1
#define DT_N_INST_3_st_stm32_spi DT_N_S_soc_S_spi_40013400
#define DT_N_NODELABEL_spi4      DT_N_S_soc_S_spi_40013400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40013400_REG_NUM 1
#define DT_N_S_soc_S_spi_40013400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_REG_IDX_0_VAL_ADDRESS 1073820672 /* 0x40013400 */
#define DT_N_S_soc_S_spi_40013400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40013400_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40013400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40013400_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40013400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_IRQ_IDX_0_VAL_irq 84
#define DT_N_S_soc_S_spi_40013400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40013400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_spi_40013400_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_40013400_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40013400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40013400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_COMPAT_MODEL_IDX_0 "stm32-spi"
#define DT_N_S_soc_S_spi_40013400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40013400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40013400_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40013400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40013400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_status "disabled"
#define DT_N_S_soc_S_spi_40013400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_40013400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40013400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40013400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_40013400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40013400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40013400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40013400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013400, status, 0)
#define DT_N_S_soc_S_spi_40013400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013400, status, 0)
#define DT_N_S_soc_S_spi_40013400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013400_P_status_LEN 1
#define DT_N_S_soc_S_spi_40013400_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_compatible {"st,stm32-spi"}
#define DT_N_S_soc_S_spi_40013400_P_compatible_IDX_0 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40013400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-spi
#define DT_N_S_soc_S_spi_40013400_P_compatible_IDX_0_STRING_TOKEN st_stm32_spi
#define DT_N_S_soc_S_spi_40013400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_SPI
#define DT_N_S_soc_S_spi_40013400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013400, compatible, 0)
#define DT_N_S_soc_S_spi_40013400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013400, compatible, 0)
#define DT_N_S_soc_S_spi_40013400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013400_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40013400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_reg {1073820672 /* 0x40013400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40013400_P_reg_IDX_0 1073820672
#define DT_N_S_soc_S_spi_40013400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40013400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_interrupts {84 /* 0x54 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40013400_P_interrupts_IDX_0 84
#define DT_N_S_soc_S_spi_40013400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40013400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_spi_40013400_P_clocks_IDX_0_VAL_bus 68
#define DT_N_S_soc_S_spi_40013400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_clocks_IDX_0_VAL_bits 8192
#define DT_N_S_soc_S_spi_40013400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013400, clocks, 0)
#define DT_N_S_soc_S_spi_40013400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013400, clocks, 0)
#define DT_N_S_soc_S_spi_40013400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013400_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40013400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_40013400_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/spi@40015000
 *
 * Node identifier: DT_N_S_soc_S_spi_40015000
 *
 * Binding (compatible = st,stm32-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40015000_PATH "/soc/spi@40015000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40015000_FULL_NAME "spi@40015000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40015000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40015000_CHILD_IDX 34

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40015000_CHILD_NUM 0
#define DT_N_S_soc_S_spi_40015000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_40015000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40015000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40015000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40015000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40015000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40015000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40015000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40015000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40015000_ORD 70
#define DT_N_S_soc_S_spi_40015000_ORD_STR_SORTABLE 00070

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40015000_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40015000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40015000_EXISTS 1
#define DT_N_INST_4_st_stm32_spi DT_N_S_soc_S_spi_40015000
#define DT_N_NODELABEL_spi5      DT_N_S_soc_S_spi_40015000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40015000_REG_NUM 1
#define DT_N_S_soc_S_spi_40015000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_REG_IDX_0_VAL_ADDRESS 1073827840 /* 0x40015000 */
#define DT_N_S_soc_S_spi_40015000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40015000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40015000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40015000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40015000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_IRQ_IDX_0_VAL_irq 85
#define DT_N_S_soc_S_spi_40015000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40015000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_spi_40015000_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_40015000_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40015000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_spi_40015000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_COMPAT_MODEL_IDX_0 "stm32-spi"
#define DT_N_S_soc_S_spi_40015000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40015000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40015000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40015000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40015000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_status "disabled"
#define DT_N_S_soc_S_spi_40015000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_40015000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40015000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40015000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_40015000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40015000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40015000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40015000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000, status, 0)
#define DT_N_S_soc_S_spi_40015000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40015000, status, 0)
#define DT_N_S_soc_S_spi_40015000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40015000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_P_status_LEN 1
#define DT_N_S_soc_S_spi_40015000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_compatible {"st,stm32-spi"}
#define DT_N_S_soc_S_spi_40015000_P_compatible_IDX_0 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40015000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-spi
#define DT_N_S_soc_S_spi_40015000_P_compatible_IDX_0_STRING_TOKEN st_stm32_spi
#define DT_N_S_soc_S_spi_40015000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_SPI
#define DT_N_S_soc_S_spi_40015000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000, compatible, 0)
#define DT_N_S_soc_S_spi_40015000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40015000, compatible, 0)
#define DT_N_S_soc_S_spi_40015000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40015000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40015000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_reg {1073827840 /* 0x40015000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40015000_P_reg_IDX_0 1073827840
#define DT_N_S_soc_S_spi_40015000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40015000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_interrupts {85 /* 0x55 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40015000_P_interrupts_IDX_0 85
#define DT_N_S_soc_S_spi_40015000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40015000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_spi_40015000_P_clocks_IDX_0_VAL_bus 68
#define DT_N_S_soc_S_spi_40015000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_clocks_IDX_0_VAL_bits 1048576
#define DT_N_S_soc_S_spi_40015000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000, clocks, 0)
#define DT_N_S_soc_S_spi_40015000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40015000, clocks, 0)
#define DT_N_S_soc_S_spi_40015000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40015000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40015000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_40015000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 *
 * Binding (compatible = arm,armv7m-systick):
 *   $ZEPHYR_BASE/dts/bindings/timer/arm,armv7m-systick.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_e000e010_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_e000e010_CHILD_NUM 0
#define DT_N_S_soc_S_timer_e000e010_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 71
#define DT_N_S_soc_S_timer_e000e010_ORD_STR_SORTABLE 00071

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv7m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_RANGES_NUM 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_IRQ_LEVEL 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv7m_systick 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0 "armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_e000e010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source 0
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv7m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UNQUOTED arm,armv7m-systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_TOKEN arm_armv7m_systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV7M_SYSTICK
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /otgfs_phy
 *
 * Node identifier: DT_N_S_otgfs_phy
 *
 * Binding (compatible = usb-nop-xceiv):
 *   $ZEPHYR_BASE/dts/bindings/phy/usb-nop-xceiv.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_otgfs_phy_PATH "/otgfs_phy"

/* Node's name with unit-address: */
#define DT_N_S_otgfs_phy_FULL_NAME "otgfs_phy"

/* Node parent (/) identifier: */
#define DT_N_S_otgfs_phy_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_otgfs_phy_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_otgfs_phy_CHILD_NUM 0
#define DT_N_S_otgfs_phy_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_otgfs_phy_FOREACH_CHILD(fn) 
#define DT_N_S_otgfs_phy_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_otgfs_phy_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_otgfs_phy_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_otgfs_phy_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_otgfs_phy_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_otgfs_phy_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_otgfs_phy_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_otgfs_phy_ORD 72
#define DT_N_S_otgfs_phy_ORD_STR_SORTABLE 00072

/* Ordinals for what this node depends on directly: */
#define DT_N_S_otgfs_phy_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_otgfs_phy_SUPPORTS_ORDS \
	75, /* /soc/usb@50000000 */

/* Existence and alternate IDs: */
#define DT_N_S_otgfs_phy_EXISTS 1
#define DT_N_INST_0_usb_nop_xceiv DT_N_S_otgfs_phy
#define DT_N_NODELABEL_otgfs_phy  DT_N_S_otgfs_phy

/* Macros for properties that are special in the specification: */
#define DT_N_S_otgfs_phy_REG_NUM 0
#define DT_N_S_otgfs_phy_RANGES_NUM 0
#define DT_N_S_otgfs_phy_FOREACH_RANGE(fn) 
#define DT_N_S_otgfs_phy_IRQ_NUM 0
#define DT_N_S_otgfs_phy_IRQ_LEVEL 0
#define DT_N_S_otgfs_phy_COMPAT_MATCHES_usb_nop_xceiv 1
#define DT_N_S_otgfs_phy_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_otgfs_phy_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_otgfs_phy_P_wakeup_source 0
#define DT_N_S_otgfs_phy_P_wakeup_source_EXISTS 1
#define DT_N_S_otgfs_phy_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_otgfs_phy_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_otgfs_phy_P_compatible {"usb-nop-xceiv"}
#define DT_N_S_otgfs_phy_P_compatible_IDX_0 "usb-nop-xceiv"
#define DT_N_S_otgfs_phy_P_compatible_IDX_0_STRING_UNQUOTED usb-nop-xceiv
#define DT_N_S_otgfs_phy_P_compatible_IDX_0_STRING_TOKEN usb_nop_xceiv
#define DT_N_S_otgfs_phy_P_compatible_IDX_0_STRING_UPPER_TOKEN USB_NOP_XCEIV
#define DT_N_S_otgfs_phy_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_otgfs_phy_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_otgfs_phy, compatible, 0)
#define DT_N_S_otgfs_phy_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_otgfs_phy, compatible, 0)
#define DT_N_S_otgfs_phy_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_otgfs_phy, compatible, 0, __VA_ARGS__)
#define DT_N_S_otgfs_phy_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_otgfs_phy, compatible, 0, __VA_ARGS__)
#define DT_N_S_otgfs_phy_P_compatible_LEN 1
#define DT_N_S_otgfs_phy_P_compatible_EXISTS 1
#define DT_N_S_otgfs_phy_P_zephyr_deferred_init 0
#define DT_N_S_otgfs_phy_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usb_otg_fs_dm_pa11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_PATH "/soc/pin-controller@40020000/usb_otg_fs_dm_pa11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_FULL_NAME "usb_otg_fs_dm_pa11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_CHILD_IDX 16

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_ORD 73
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_ORD_STR_SORTABLE 00073

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_SUPPORTS_ORDS \
	75, /* /soc/usb@50000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_EXISTS 1
#define DT_N_NODELABEL_usb_otg_fs_dm_pa11 DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_pinmux 362
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_slew_rate_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usb_otg_fs_dp_pa12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_PATH "/soc/pin-controller@40020000/usb_otg_fs_dp_pa12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_FULL_NAME "usb_otg_fs_dp_pa12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_CHILD_IDX 17

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_ORD 74
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_ORD_STR_SORTABLE 00074

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_REQUIRES_ORDS \
	12, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_SUPPORTS_ORDS \
	75, /* /soc/usb@50000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_EXISTS 1
#define DT_N_NODELABEL_usb_otg_fs_dp_pa12 DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_pinmux 394
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_slew_rate_STRING_UNQUOTED low-speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_slew_rate_IDX_0 "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_slew_rate_ENUM_VAL_low_speed_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_slew_rate_EXISTS 1

/*
 * Devicetree node: /soc/usb@50000000
 *
 * Node identifier: DT_N_S_soc_S_usb_50000000
 *
 * Binding (compatible = st,stm32-otgfs):
 *   $ZEPHYR_BASE/dts/bindings/usb/st,stm32-otgfs.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usb_50000000_PATH "/soc/usb@50000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usb_50000000_FULL_NAME "usb@50000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usb_50000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_usb_50000000_CHILD_IDX 15

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_usb_50000000_CHILD_NUM 0
#define DT_N_S_soc_S_usb_50000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_usb_50000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_usb_50000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_usb_50000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_usb_50000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_usb_50000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_usb_50000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_usb_50000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_usb_50000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usb_50000000_ORD 75
#define DT_N_S_soc_S_usb_50000000_ORD_STR_SORTABLE 00075

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usb_50000000_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40023800 */ \
	72, /* /otgfs_phy */ \
	73, /* /soc/pin-controller@40020000/usb_otg_fs_dm_pa11 */ \
	74, /* /soc/pin-controller@40020000/usb_otg_fs_dp_pa12 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usb_50000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usb_50000000_EXISTS 1
#define DT_N_INST_0_st_stm32_otgfs DT_N_S_soc_S_usb_50000000
#define DT_N_NODELABEL_usbotg_fs   DT_N_S_soc_S_usb_50000000
#define DT_N_NODELABEL_zephyr_udc0 DT_N_S_soc_S_usb_50000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usb_50000000_REG_NUM 1
#define DT_N_S_soc_S_usb_50000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_REG_IDX_0_VAL_ADDRESS 1342177280 /* 0x50000000 */
#define DT_N_S_soc_S_usb_50000000_REG_IDX_0_VAL_SIZE 262144 /* 0x40000 */
#define DT_N_S_soc_S_usb_50000000_RANGES_NUM 0
#define DT_N_S_soc_S_usb_50000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usb_50000000_IRQ_NUM 1
#define DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_VAL_irq 67
#define DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_usb_50000000_IRQ_LEVEL 1
#define DT_N_S_soc_S_usb_50000000_IRQ_NAME_otgfs_VAL_irq DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_usb_50000000_IRQ_NAME_otgfs_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_IRQ_NAME_otgfs_VAL_priority DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_usb_50000000_IRQ_NAME_otgfs_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_IRQ_NAME_otgfs_CONTROLLER DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_usb_50000000_COMPAT_MATCHES_st_stm32_otgfs 1
#define DT_N_S_soc_S_usb_50000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_usb_50000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_COMPAT_MODEL_IDX_0 "stm32-otgfs"
#define DT_N_S_soc_S_usb_50000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usb_50000000_PINCTRL_NUM 1
#define DT_N_S_soc_S_usb_50000000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_usb_50000000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_usb_50000000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_usb_50000000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11
#define DT_N_S_soc_S_usb_50000000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12

/* Generic property macros: */
#define DT_N_S_soc_S_usb_50000000_P_wakeup_source 0
#define DT_N_S_soc_S_usb_50000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_usb_50000000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_status "okay"
#define DT_N_S_soc_S_usb_50000000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_usb_50000000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_usb_50000000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usb_50000000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_usb_50000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_usb_50000000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_usb_50000000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usb_50000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, status, 0)
#define DT_N_S_soc_S_usb_50000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usb_50000000, status, 0)
#define DT_N_S_soc_S_usb_50000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_50000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usb_50000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_status_LEN 1
#define DT_N_S_soc_S_usb_50000000_P_status_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_compatible {"st,stm32-otgfs"}
#define DT_N_S_soc_S_usb_50000000_P_compatible_IDX_0 "st,stm32-otgfs"
#define DT_N_S_soc_S_usb_50000000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-otgfs
#define DT_N_S_soc_S_usb_50000000_P_compatible_IDX_0_STRING_TOKEN st_stm32_otgfs
#define DT_N_S_soc_S_usb_50000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_OTGFS
#define DT_N_S_soc_S_usb_50000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, compatible, 0)
#define DT_N_S_soc_S_usb_50000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usb_50000000, compatible, 0)
#define DT_N_S_soc_S_usb_50000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_50000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usb_50000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_compatible_LEN 1
#define DT_N_S_soc_S_usb_50000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_reg {1342177280 /* 0x50000000 */, 262144 /* 0x40000 */}
#define DT_N_S_soc_S_usb_50000000_P_reg_IDX_0 1342177280
#define DT_N_S_soc_S_usb_50000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_reg_IDX_1 262144
#define DT_N_S_soc_S_usb_50000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_interrupts {67 /* 0x43 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_usb_50000000_P_interrupts_IDX_0 67
#define DT_N_S_soc_S_usb_50000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_usb_50000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_interrupt_names {"otgfs"}
#define DT_N_S_soc_S_usb_50000000_P_interrupt_names_IDX_0 "otgfs"
#define DT_N_S_soc_S_usb_50000000_P_interrupt_names_IDX_0_STRING_UNQUOTED otgfs
#define DT_N_S_soc_S_usb_50000000_P_interrupt_names_IDX_0_STRING_TOKEN otgfs
#define DT_N_S_soc_S_usb_50000000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN OTGFS
#define DT_N_S_soc_S_usb_50000000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, interrupt_names, 0)
#define DT_N_S_soc_S_usb_50000000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usb_50000000, interrupt_names, 0)
#define DT_N_S_soc_S_usb_50000000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_50000000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usb_50000000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_usb_50000000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_usb_50000000_P_clocks_IDX_0_VAL_bus 52
#define DT_N_S_soc_S_usb_50000000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_clocks_IDX_0_VAL_bits 128
#define DT_N_S_soc_S_usb_50000000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_clocks_IDX_1_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_usb_50000000_P_clocks_IDX_1_VAL_bus 5
#define DT_N_S_soc_S_usb_50000000_P_clocks_IDX_1_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_clocks_IDX_1_VAL_bits 255
#define DT_N_S_soc_S_usb_50000000_P_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, clocks, 0) \
	fn(DT_N_S_soc_S_usb_50000000, clocks, 1)
#define DT_N_S_soc_S_usb_50000000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usb_50000000, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usb_50000000, clocks, 1)
#define DT_N_S_soc_S_usb_50000000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_50000000, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usb_50000000, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usb_50000000, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_clocks_LEN 2
#define DT_N_S_soc_S_usb_50000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_usb_50000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed "full-speed"
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_STRING_UNQUOTED full-speed
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_STRING_TOKEN full_speed
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_STRING_UPPER_TOKEN FULL_SPEED
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_IDX_0 "full-speed"
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_ENUM_IDX 1
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_ENUM_VAL_full_speed_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_ENUM_TOKEN full_speed
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_ENUM_UPPER_TOKEN FULL_SPEED
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 0)
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 0)
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_LEN 1
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_num_bidir_endpoints 4
#define DT_N_S_soc_S_usb_50000000_P_num_bidir_endpoints_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_usb_50000000, pinctrl_0, 1)
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usb_50000000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usb_50000000, pinctrl_0, 1)
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_50000000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usb_50000000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usb_50000000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, pinctrl_names, 0)
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usb_50000000, pinctrl_names, 0)
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_50000000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usb_50000000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_ram_size 1280
#define DT_N_S_soc_S_usb_50000000_P_ram_size_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_phys DT_N_S_otgfs_phy
#define DT_N_S_soc_S_usb_50000000_P_phys_IDX_0 DT_N_S_otgfs_phy
#define DT_N_S_soc_S_usb_50000000_P_phys_IDX_0_PH DT_N_S_otgfs_phy
#define DT_N_S_soc_S_usb_50000000_P_phys_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_phys_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, phys, 0)
#define DT_N_S_soc_S_usb_50000000_P_phys_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usb_50000000, phys, 0)
#define DT_N_S_soc_S_usb_50000000_P_phys_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_50000000, phys, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_phys_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usb_50000000, phys, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_phys_LEN 1
#define DT_N_S_soc_S_usb_50000000_P_phys_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40002c00
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40002c00
 *
 * Binding (compatible = st,stm32-window-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/st,stm32-window-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40002c00_PATH "/soc/watchdog@40002c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40002c00_FULL_NAME "watchdog@40002c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40002c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_40002c00_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_40002c00_CHILD_NUM 0
#define DT_N_S_soc_S_watchdog_40002c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40002c00_ORD 76
#define DT_N_S_soc_S_watchdog_40002c00_ORD_STR_SORTABLE 00076

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40002c00_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40002c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40002c00_EXISTS 1
#define DT_N_INST_0_st_stm32_window_watchdog DT_N_S_soc_S_watchdog_40002c00
#define DT_N_NODELABEL_wwdg                  DT_N_S_soc_S_watchdog_40002c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_40002c00_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_VAL_ADDRESS 1073753088 /* 0x40002c00 */
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_watchdog_40002c00_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_NUM 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_irq 0
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_priority 7
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_MATCHES_st_stm32_window_watchdog 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_MODEL_IDX_0 "stm32-window-watchdog"
#define DT_N_S_soc_S_watchdog_40002c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_40002c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40002c00_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_40002c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_watchdog_40002c00_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_status "disabled"
#define DT_N_S_soc_S_watchdog_40002c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_watchdog_40002c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40002c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40002c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_watchdog_40002c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_watchdog_40002c00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40002c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_LEN 1
#define DT_N_S_soc_S_watchdog_40002c00_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible {"st,stm32-window-watchdog"}
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0 "st,stm32-window-watchdog"
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-window-watchdog
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_window_watchdog
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_WINDOW_WATCHDOG
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_reg {1073753088 /* 0x40002c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_0 1073753088
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts {0 /* 0x0 */, 7 /* 0x7 */}
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_1 7
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bits 2048
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_LEN 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_watchdog_40002c00_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40003000
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40003000
 *
 * Binding (compatible = st,stm32-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/st,stm32-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40003000_PATH "/soc/watchdog@40003000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40003000_FULL_NAME "watchdog@40003000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40003000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_40003000_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_40003000_CHILD_NUM 0
#define DT_N_S_soc_S_watchdog_40003000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40003000_ORD 77
#define DT_N_S_soc_S_watchdog_40003000_ORD_STR_SORTABLE 00077

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40003000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40003000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40003000_EXISTS 1
#define DT_N_INST_0_st_stm32_watchdog DT_N_S_soc_S_watchdog_40003000
#define DT_N_NODELABEL_iwdg           DT_N_S_soc_S_watchdog_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_40003000_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_VAL_ADDRESS 1073754112 /* 0x40003000 */
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_watchdog_40003000_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_40003000_IRQ_NUM 0
#define DT_N_S_soc_S_watchdog_40003000_IRQ_LEVEL 0
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_MATCHES_st_stm32_watchdog 1
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_MODEL_IDX_0 "stm32-watchdog"
#define DT_N_S_soc_S_watchdog_40003000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_40003000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40003000_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_40003000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_watchdog_40003000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_status "disabled"
#define DT_N_S_soc_S_watchdog_40003000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_watchdog_40003000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40003000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40003000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_watchdog_40003000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, status, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40003000, status, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_status_LEN 1
#define DT_N_S_soc_S_watchdog_40003000_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible {"st,stm32-watchdog"}
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0 "st,stm32-watchdog"
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-watchdog
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_STRING_TOKEN st_stm32_watchdog
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_WATCHDOG
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_reg {1073754112 /* 0x40003000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_0 1073754112
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_watchdog_40003000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40023c00
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40023c00
 *
 * Binding (compatible = st,stm32-flash-controller):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/st,stm32-flash-controller.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40023c00_PATH "/soc/flash-controller@40023c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40023c00_FULL_NAME "flash-controller@40023c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flash_controller_40023c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40023c00_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40023c00_CHILD_NUM 1
#define DT_N_S_soc_S_flash_controller_40023c00_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_flash_controller_40023c00_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_40023c00_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_40023c00_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_40023c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_40023c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40023c00_ORD 78
#define DT_N_S_soc_S_flash_controller_40023c00_ORD_STR_SORTABLE 00078

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40023c00_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40023c00_SUPPORTS_ORDS \
	79, /* /soc/flash-controller@40023c00/flash@8000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40023c00_EXISTS 1
#define DT_N_INST_0_st_stm32_flash_controller   DT_N_S_soc_S_flash_controller_40023c00
#define DT_N_INST_0_st_stm32f4_flash_controller DT_N_S_soc_S_flash_controller_40023c00
#define DT_N_NODELABEL_flash                    DT_N_S_soc_S_flash_controller_40023c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40023c00_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40023c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_REG_IDX_0_VAL_ADDRESS 1073888256 /* 0x40023c00 */
#define DT_N_S_soc_S_flash_controller_40023c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_flash_controller_40023c00_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40023c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40023c00_IRQ_NUM 1
#define DT_N_S_soc_S_flash_controller_40023c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_IRQ_IDX_0_VAL_irq 4
#define DT_N_S_soc_S_flash_controller_40023c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flash_controller_40023c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_flash_controller_40023c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_flash_controller_40023c00_COMPAT_MATCHES_st_stm32_flash_controller 1
#define DT_N_S_soc_S_flash_controller_40023c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_flash_controller_40023c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_COMPAT_MODEL_IDX_0 "stm32-flash-controller"
#define DT_N_S_soc_S_flash_controller_40023c00_COMPAT_MATCHES_st_stm32f4_flash_controller 1
#define DT_N_S_soc_S_flash_controller_40023c00_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_flash_controller_40023c00_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_COMPAT_MODEL_IDX_1 "stm32f4-flash-controller"
#define DT_N_S_soc_S_flash_controller_40023c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40023c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40023c00_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_40023c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_40023c00_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible {"st,stm32-flash-controller", "st,stm32f4-flash-controller"}
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_IDX_0 "st,stm32-flash-controller"
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-flash-controller
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_flash_controller
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_FLASH_CONTROLLER
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_IDX_1 "st,stm32f4-flash-controller"
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_IDX_1_STRING_UNQUOTED st,stm32f4-flash-controller
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_IDX_1_STRING_TOKEN st_stm32f4_flash_controller
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32F4_FLASH_CONTROLLER
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40023c00, compatible, 0) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, compatible, 1)
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40023c00, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40023c00, compatible, 1)
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40023c00, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40023c00, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_LEN 2
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg {1073888256 /* 0x40023c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg_IDX_0 1073888256
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_interrupts {4 /* 0x4 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flash_controller_40023c00_P_interrupts_IDX_0 4
#define DT_N_S_soc_S_flash_controller_40023c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flash_controller_40023c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_flash_controller_40023c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_st_rdp1_enable_byte 85
#define DT_N_S_soc_S_flash_controller_40023c00_P_st_rdp1_enable_byte_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40023c00/flash@8000000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000
 *
 * Binding (compatible = st,stm32f4-nv-flash):
 *   $ZEPHYR_BASE/dts/bindings/mtd/st,stm32f4-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_PATH "/soc/flash-controller@40023c00/flash@8000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FULL_NAME "flash@8000000"

/* Node parent (/soc/flash-controller@40023c00) identifier: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_PARENT DT_N_S_soc_S_flash_controller_40023c00

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_CHILD_NUM 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_ORD 79
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_ORD_STR_SORTABLE 00079

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_REQUIRES_ORDS \
	78, /* /soc/flash-controller@40023c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_SUPPORTS_ORDS \
	80, /* /soc/flash-controller@40023c00/flash@8000000/partitions */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_EXISTS 1
#define DT_N_INST_0_st_stm32f4_nv_flash DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000
#define DT_N_INST_0_st_stm32_nv_flash   DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000
#define DT_N_INST_0_soc_nv_flash        DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000
#define DT_N_NODELABEL_flash0           DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_REG_IDX_0_VAL_ADDRESS 134217728 /* 0x8000000 */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_REG_IDX_0_VAL_SIZE 524288 /* 0x80000 */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_COMPAT_MATCHES_st_stm32f4_nv_flash 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_COMPAT_MODEL_IDX_0 "stm32f4-nv-flash"
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_COMPAT_MATCHES_st_stm32_nv_flash 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_COMPAT_MODEL_IDX_1 "stm32-nv-flash"
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible {"st,stm32f4-nv-flash", "st,stm32-nv-flash", "soc-nv-flash"}
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_0 "st,stm32f4-nv-flash"
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32f4-nv-flash
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_0_STRING_TOKEN st_stm32f4_nv_flash
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32F4_NV_FLASH
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_1 "st,stm32-nv-flash"
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_1_STRING_UNQUOTED st,stm32-nv-flash
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_1_STRING_TOKEN st_stm32_nv_flash
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_STM32_NV_FLASH
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_2 "soc-nv-flash"
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_2_STRING_UNQUOTED soc-nv-flash
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_2_STRING_TOKEN soc_nv_flash
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_2_STRING_UPPER_TOKEN SOC_NV_FLASH
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_2_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, compatible, 0) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, compatible, 1) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, compatible, 2)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, compatible, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, compatible, 2)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, compatible, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, compatible, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, compatible, 2, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_LEN 3
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg {134217728 /* 0x8000000 */, 524288 /* 0x80000 */}
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg_IDX_0 134217728
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg_IDX_1 524288
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_write_block_size 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_write_block_size_ENUM_IDX 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_write_block_size_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_write_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_max_erase_time 4000
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_max_erase_time_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40023c00/flash@8000000/partitions
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE/dts/bindings/mtd/fixed-partitions.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_PATH "/soc/flash-controller@40023c00/flash@8000000/partitions"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_FULL_NAME "partitions"

/* Node parent (/soc/flash-controller@40023c00/flash@8000000) identifier: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_PARENT DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_CHILD_NUM 4
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_CHILD_NUM_STATUS_OKAY 4
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_ORD 80
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_ORD_STR_SORTABLE 00080

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_REQUIRES_ORDS \
	79, /* /soc/flash-controller@40023c00/flash@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_SUPPORTS_ORDS \
	81, /* /soc/flash-controller@40023c00/flash@8000000/partitions/partition@0 */ \
	82, /* /soc/flash-controller@40023c00/flash@8000000/partitions/partition@20000 */ \
	83, /* /soc/flash-controller@40023c00/flash@8000000/partitions/partition@40000 */ \
	84, /* /soc/flash-controller@40023c00/flash@8000000/partitions/partition@60000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_EXISTS 1
#define DT_N_INST_0_fixed_partitions DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_REG_NUM 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/flash-controller@40023c00/flash@8000000/partitions/partition@0
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_PATH "/soc/flash-controller@40023c00/flash@8000000/partitions/partition@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_FULL_NAME "partition@0"

/* Node parent (/soc/flash-controller@40023c00/flash@8000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_PARENT DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_ORD 81
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_ORD_STR_SORTABLE 00081

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_REQUIRES_ORDS \
	80, /* /soc/flash-controller@40023c00/flash@8000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_EXISTS 1
#define DT_N_NODELABEL_boot_partition DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_PARTITION_ID 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_P_label "mcuboot"
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_P_label_STRING_UNQUOTED mcuboot
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_P_label_STRING_TOKEN mcuboot
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_P_label_STRING_UPPER_TOKEN MCUBOOT
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_P_label_IDX_0 "mcuboot"
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0, label, 0)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0, label, 0)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_P_read_only 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_P_reg {0 /* 0x0 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_P_reg_IDX_1 65536
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40023c00/flash@8000000/partitions/partition@20000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_PATH "/soc/flash-controller@40023c00/flash@8000000/partitions/partition@20000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_FULL_NAME "partition@20000"

/* Node parent (/soc/flash-controller@40023c00/flash@8000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_PARENT DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_ORD 82
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_ORD_STR_SORTABLE 00082

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_REQUIRES_ORDS \
	80, /* /soc/flash-controller@40023c00/flash@8000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_EXISTS 1
#define DT_N_NODELABEL_slot0_partition DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_REG_IDX_0_VAL_ADDRESS 131072 /* 0x20000 */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_REG_IDX_0_VAL_SIZE 131072 /* 0x20000 */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_PARTITION_ID 1

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_P_label "image-0"
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_P_label_STRING_UNQUOTED image-0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_P_label_STRING_TOKEN image_0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_P_label_STRING_UPPER_TOKEN IMAGE_0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_P_label_IDX_0 "image-0"
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000, label, 0)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000, label, 0)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_P_reg {131072 /* 0x20000 */, 131072 /* 0x20000 */}
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_P_reg_IDX_0 131072
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_P_reg_IDX_1 131072
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40023c00/flash@8000000/partitions/partition@40000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_PATH "/soc/flash-controller@40023c00/flash@8000000/partitions/partition@40000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_FULL_NAME "partition@40000"

/* Node parent (/soc/flash-controller@40023c00/flash@8000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_PARENT DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_ORD 83
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_ORD_STR_SORTABLE 00083

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_REQUIRES_ORDS \
	80, /* /soc/flash-controller@40023c00/flash@8000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_EXISTS 1
#define DT_N_NODELABEL_slot1_partition DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_REG_IDX_0_VAL_ADDRESS 262144 /* 0x40000 */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_REG_IDX_0_VAL_SIZE 131072 /* 0x20000 */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_PARTITION_ID 2

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_P_label "image-1"
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_P_label_STRING_UNQUOTED image-1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_P_label_STRING_TOKEN image_1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_P_label_STRING_UPPER_TOKEN IMAGE_1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_P_label_IDX_0 "image-1"
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000, label, 0)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000, label, 0)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_P_reg {262144 /* 0x40000 */, 131072 /* 0x20000 */}
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_P_reg_IDX_0 262144
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_P_reg_IDX_1 131072
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40023c00/flash@8000000/partitions/partition@60000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_PATH "/soc/flash-controller@40023c00/flash@8000000/partitions/partition@60000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_FULL_NAME "partition@60000"

/* Node parent (/soc/flash-controller@40023c00/flash@8000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_PARENT DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_ORD 84
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_ORD_STR_SORTABLE 00084

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_REQUIRES_ORDS \
	80, /* /soc/flash-controller@40023c00/flash@8000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_EXISTS 1
#define DT_N_NODELABEL_scratch_partition DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_REG_IDX_0_VAL_ADDRESS 393216 /* 0x60000 */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_REG_IDX_0_VAL_SIZE 131072 /* 0x20000 */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_PARTITION_ID 3

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_P_label "image-scratch"
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_P_label_STRING_UNQUOTED image-scratch
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_P_label_STRING_TOKEN image_scratch
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_P_label_STRING_UPPER_TOKEN IMAGE_SCRATCH
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_P_label_IDX_0 "image-scratch"
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000, label, 0)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000, label, 0)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_P_reg {393216 /* 0x60000 */, 131072 /* 0x20000 */}
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_P_reg_IDX_0 393216
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_P_reg_IDX_1 131072
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40021000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_PATH "/soc/pin-controller@40020000/gpio@40021000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FULL_NAME "gpio@40021000"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_ORD 85
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_ORD_STR_SORTABLE 00085

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_REQUIRES_ORDS \
	8, /* /soc/rcc@40023800 */ \
	12, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_SUPPORTS_ORDS \
	86, /* /soc/i2c@40005400/lsm303agr-accel@19 */ \
	87, /* /soc/i2c@40005400/lsm303agr-magn@1e */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_EXISTS 1
#define DT_N_INST_4_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
#define DT_N_NODELABEL_gpioe      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_REG_IDX_0_VAL_ADDRESS 1073876992 /* 0x40021000 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg {1073876992 /* 0x40021000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg_IDX_0 1073876992
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_IDX_0_VAL_bus 48
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_IDX_0_VAL_bits 16
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005400/lsm303agr-accel@19
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19
 *
 * Binding (compatible = st,lis2dh):
 *   $ZEPHYR_BASE/dts/bindings/sensor/st,lis2dh-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_PATH "/soc/i2c@40005400/lsm303agr-accel@19"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_FULL_NAME "lsm303agr-accel@19"

/* Node parent (/soc/i2c@40005400) identifier: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_PARENT DT_N_S_soc_S_i2c_40005400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_ORD 86
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_ORD_STR_SORTABLE 00086

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_REQUIRES_ORDS \
	15, /* /soc/i2c@40005400 */ \
	85, /* /soc/pin-controller@40020000/gpio@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_EXISTS 1
#define DT_N_ALIAS_accel0              DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19
#define DT_N_INST_0_st_lis2dh          DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19
#define DT_N_INST_0_st_lsm303agr_accel DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19
#define DT_N_NODELABEL_lsm303agr_accel DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19

/* Bus info (controller: '/soc/i2c@40005400', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_BUS DT_N_S_soc_S_i2c_40005400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_REG_IDX_0_VAL_ADDRESS 25 /* 0x19 */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_IRQ_LEVEL 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_COMPAT_MATCHES_st_lis2dh 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_COMPAT_MODEL_IDX_0 "lis2dh"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_COMPAT_MATCHES_st_lsm303agr_accel 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_COMPAT_MODEL_IDX_1 "lsm303agr-accel"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_status "okay"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, status, 0)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, status, 0)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_compatible {"st,lis2dh", "st,lsm303agr-accel"}
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_compatible_IDX_0 "st,lis2dh"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_compatible_IDX_0_STRING_UNQUOTED st,lis2dh
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_compatible_IDX_0_STRING_TOKEN st_lis2dh
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_LIS2DH
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_compatible_IDX_1 "st,lsm303agr-accel"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_compatible_IDX_1_STRING_UNQUOTED st,lsm303agr-accel
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_compatible_IDX_1_STRING_TOKEN st_lsm303agr_accel
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_LSM303AGR_ACCEL
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, compatible, 0) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, compatible, 1)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, compatible, 1)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_compatible_LEN 2
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_reg {25 /* 0x19 */}
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_reg_IDX_0 25
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_IDX_0_VAL_pin 4
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_IDX_1_VAL_pin 5
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_IDX_1_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_IDX_1_VAL_flags 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, irq_gpios, 0) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, irq_gpios, 1)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, irq_gpios, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, irq_gpios, 1)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, irq_gpios, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, irq_gpios, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, irq_gpios, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, irq_gpios, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_LEN 2
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_irq_gpios_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_int1_gpio_config 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_int1_gpio_config_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_int1_gpio_config_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_int1_gpio_config_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_int2_gpio_config 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_int2_gpio_config_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_int2_gpio_config_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_int2_gpio_config_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_disconnect_sdo_sa0_pull_up 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_disconnect_sdo_sa0_pull_up_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_anym_on_int1 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_anym_on_int1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_anym_no_latch 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_anym_no_latch_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_anym_mode 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_anym_mode_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_anym_mode_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19_P_anym_mode_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005400/lsm303agr-magn@1e
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e
 *
 * Binding (compatible = st,lis2mdl):
 *   $ZEPHYR_BASE/dts/bindings/sensor/st,lis2mdl-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_PATH "/soc/i2c@40005400/lsm303agr-magn@1e"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_FULL_NAME "lsm303agr-magn@1e"

/* Node parent (/soc/i2c@40005400) identifier: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_PARENT DT_N_S_soc_S_i2c_40005400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_ORD 87
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_ORD_STR_SORTABLE 00087

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_REQUIRES_ORDS \
	15, /* /soc/i2c@40005400 */ \
	85, /* /soc/pin-controller@40020000/gpio@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_EXISTS 1
#define DT_N_ALIAS_magn0              DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e
#define DT_N_INST_0_st_lis2mdl        DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e
#define DT_N_INST_0_st_lsm303agr_magn DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e
#define DT_N_NODELABEL_lsm303agr_magn DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e

/* Bus info (controller: '/soc/i2c@40005400', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_BUS DT_N_S_soc_S_i2c_40005400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_REG_IDX_0_VAL_ADDRESS 30 /* 0x1e */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_IRQ_LEVEL 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_COMPAT_MATCHES_st_lis2mdl 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_COMPAT_MODEL_IDX_0 "lis2mdl"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_COMPAT_MATCHES_st_lsm303agr_magn 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_COMPAT_VENDOR_IDX_1 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_COMPAT_MODEL_IDX_1 "lsm303agr-magn"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_status "okay"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, status, 0)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, status, 0)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_compatible {"st,lis2mdl", "st,lsm303agr-magn"}
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_compatible_IDX_0 "st,lis2mdl"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_compatible_IDX_0_STRING_UNQUOTED st,lis2mdl
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_compatible_IDX_0_STRING_TOKEN st_lis2mdl
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_LIS2MDL
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_compatible_IDX_1 "st,lsm303agr-magn"
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_compatible_IDX_1_STRING_UNQUOTED st,lsm303agr-magn
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_compatible_IDX_1_STRING_TOKEN st_lsm303agr_magn
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_compatible_IDX_1_STRING_UPPER_TOKEN ST_LSM303AGR_MAGN
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, compatible, 0) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, compatible, 1)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, compatible, 1)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_compatible_LEN 2
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_reg {30 /* 0x1e */}
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_reg_IDX_0 30
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_irq_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_irq_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_irq_gpios_IDX_0_VAL_pin 2
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_irq_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_irq_gpios_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_irq_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_irq_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, irq_gpios, 0)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_irq_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, irq_gpios, 0)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_irq_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, irq_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_irq_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, irq_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_irq_gpios_LEN 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_irq_gpios_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_single_mode 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_single_mode_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_cancel_offset 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_cancel_offset_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_spi_full_duplex 0
#define DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e_P_spi_full_duplex_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40020400
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_PATH "/soc/pin-controller@40020000/gpio@40020400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FULL_NAME "gpio@40020400"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_ORD 88
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_ORD_STR_SORTABLE 00088

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_REQUIRES_ORDS \
	8, /* /soc/rcc@40023800 */ \
	12, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_EXISTS 1
#define DT_N_INST_1_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400
#define DT_N_NODELABEL_gpiob      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_REG_IDX_0_VAL_ADDRESS 1073873920 /* 0x40020400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg {1073873920 /* 0x40020400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg_IDX_0 1073873920
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_IDX_0_VAL_bus 48
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40020800
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_PATH "/soc/pin-controller@40020000/gpio@40020800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FULL_NAME "gpio@40020800"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_ORD 89
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_ORD_STR_SORTABLE 00089

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_REQUIRES_ORDS \
	8, /* /soc/rcc@40023800 */ \
	12, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_EXISTS 1
#define DT_N_INST_2_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800
#define DT_N_NODELABEL_gpioc      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_REG_IDX_0_VAL_ADDRESS 1073874944 /* 0x40020800 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg {1073874944 /* 0x40020800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg_IDX_0 1073874944
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_IDX_0_VAL_bus 48
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_IDX_0_VAL_bits 4
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40021400
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_PATH "/soc/pin-controller@40020000/gpio@40021400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FULL_NAME "gpio@40021400"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_ORD 90
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_ORD_STR_SORTABLE 00090

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_REQUIRES_ORDS \
	8, /* /soc/rcc@40023800 */ \
	12, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_EXISTS 1
#define DT_N_INST_5_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400
#define DT_N_NODELABEL_gpiof      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_REG_IDX_0_VAL_ADDRESS 1073878016 /* 0x40021400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg {1073878016 /* 0x40021400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg_IDX_0 1073878016
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_IDX_0_VAL_bus 48
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_IDX_0_VAL_bits 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40021800
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_PATH "/soc/pin-controller@40020000/gpio@40021800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FULL_NAME "gpio@40021800"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_ORD 91
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_ORD_STR_SORTABLE 00091

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_REQUIRES_ORDS \
	8, /* /soc/rcc@40023800 */ \
	12, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_EXISTS 1
#define DT_N_INST_6_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800
#define DT_N_NODELABEL_gpiog      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_REG_IDX_0_VAL_ADDRESS 1073879040 /* 0x40021800 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg {1073879040 /* 0x40021800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg_IDX_0 1073879040
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_IDX_0_VAL_bus 48
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_IDX_0_VAL_bits 64
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40021c00
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_PATH "/soc/pin-controller@40020000/gpio@40021c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FULL_NAME "gpio@40021c00"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_ORD 92
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_ORD_STR_SORTABLE 00092

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_REQUIRES_ORDS \
	8, /* /soc/rcc@40023800 */ \
	12, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_EXISTS 1
#define DT_N_INST_7_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00
#define DT_N_NODELABEL_gpioh      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_REG_IDX_0_VAL_ADDRESS 1073880064 /* 0x40021c00 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_COMPAT_MODEL_IDX_0 "stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_GPIO
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg {1073880064 /* 0x40021c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg_IDX_0 1073880064
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_IDX_0_VAL_bus 48
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_IDX_0_VAL_bits 128
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/rtc@40002800
 *
 * Node identifier: DT_N_S_soc_S_rtc_40002800
 *
 * Binding (compatible = st,stm32-rtc):
 *   $ZEPHYR_BASE/dts/bindings/rtc/st,stm32-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_40002800_PATH "/soc/rtc@40002800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_40002800_FULL_NAME "rtc@40002800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_40002800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rtc_40002800_CHILD_IDX 24

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rtc_40002800_CHILD_NUM 1
#define DT_N_S_soc_S_rtc_40002800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs)
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs)
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_40002800_ORD 93
#define DT_N_S_soc_S_rtc_40002800_ORD_STR_SORTABLE 00093

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_40002800_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_40002800_SUPPORTS_ORDS \
	94, /* /soc/rtc@40002800/backup_regs */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_40002800_EXISTS 1
#define DT_N_INST_0_st_stm32_rtc DT_N_S_soc_S_rtc_40002800
#define DT_N_NODELABEL_rtc       DT_N_S_soc_S_rtc_40002800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_40002800_REG_NUM 1
#define DT_N_S_soc_S_rtc_40002800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_REG_IDX_0_VAL_ADDRESS 1073752064 /* 0x40002800 */
#define DT_N_S_soc_S_rtc_40002800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_rtc_40002800_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_40002800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_40002800_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_irq 41
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_rtc_40002800_IRQ_LEVEL 1
#define DT_N_S_soc_S_rtc_40002800_COMPAT_MATCHES_st_stm32_rtc 1
#define DT_N_S_soc_S_rtc_40002800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_rtc_40002800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_COMPAT_MODEL_IDX_0 "stm32-rtc"
#define DT_N_S_soc_S_rtc_40002800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_40002800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_40002800_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_40002800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rtc_40002800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_status "okay"
#define DT_N_S_soc_S_rtc_40002800_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_rtc_40002800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_rtc_40002800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rtc_40002800_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_rtc_40002800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_rtc_40002800_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_rtc_40002800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rtc_40002800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, status, 0)
#define DT_N_S_soc_S_rtc_40002800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40002800, status, 0)
#define DT_N_S_soc_S_rtc_40002800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40002800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_status_LEN 1
#define DT_N_S_soc_S_rtc_40002800_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_compatible {"st,stm32-rtc"}
#define DT_N_S_soc_S_rtc_40002800_P_compatible_IDX_0 "st,stm32-rtc"
#define DT_N_S_soc_S_rtc_40002800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-rtc
#define DT_N_S_soc_S_rtc_40002800_P_compatible_IDX_0_STRING_TOKEN st_stm32_rtc
#define DT_N_S_soc_S_rtc_40002800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_RTC
#define DT_N_S_soc_S_rtc_40002800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, compatible, 0)
#define DT_N_S_soc_S_rtc_40002800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40002800, compatible, 0)
#define DT_N_S_soc_S_rtc_40002800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40002800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_40002800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_reg {1073752064 /* 0x40002800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_0 1073752064
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_interrupts {41 /* 0x29 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_0 41
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bits 268435456
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_1_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_1_VAL_bus 3
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_1_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_1_VAL_bits 157808
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, clocks, 0) \
	fn(DT_N_S_soc_S_rtc_40002800, clocks, 1)
#define DT_N_S_soc_S_rtc_40002800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40002800, clocks, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40002800, clocks, 1)
#define DT_N_S_soc_S_rtc_40002800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40002800, clocks, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_rtc_40002800, clocks, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_clocks_LEN 2
#define DT_N_S_soc_S_rtc_40002800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_rtc_40002800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_prescaler 32768
#define DT_N_S_soc_S_rtc_40002800_P_prescaler_EXISTS 1

/*
 * Devicetree node: /soc/rtc@40002800/backup_regs
 *
 * Node identifier: DT_N_S_soc_S_rtc_40002800_S_backup_regs
 *
 * Binding (compatible = st,stm32-bbram):
 *   $ZEPHYR_BASE/dts/bindings/memory-controllers/st,stm32-bbram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_PATH "/soc/rtc@40002800/backup_regs"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FULL_NAME "backup_regs"

/* Node parent (/soc/rtc@40002800) identifier: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_PARENT DT_N_S_soc_S_rtc_40002800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_CHILD_NUM 0
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_ORD 94
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_ORD_STR_SORTABLE 00094

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_REQUIRES_ORDS \
	93, /* /soc/rtc@40002800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_EXISTS 1
#define DT_N_INST_0_st_stm32_bbram DT_N_S_soc_S_rtc_40002800_S_backup_regs
#define DT_N_NODELABEL_bbram       DT_N_S_soc_S_rtc_40002800_S_backup_regs

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_REG_NUM 0
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_IRQ_NUM 0
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_IRQ_LEVEL 0
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_COMPAT_MATCHES_st_stm32_bbram 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_COMPAT_MODEL_IDX_0 "stm32-bbram"
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status "disabled"
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, status, 0)
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, status, 0)
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_LEN 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible {"st,stm32-bbram"}
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_IDX_0 "st,stm32-bbram"
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-bbram
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_IDX_0_STRING_TOKEN st_stm32_bbram
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_BBRAM
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, compatible, 0)
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, compatible, 0)
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_st_backup_regs 20
#define DT_N_S_soc_S_rtc_40002800_S_backup_regs_P_st_backup_regs_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000000
 *
 * Node identifier: DT_N_S_soc_S_timers_40000000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000000_PATH "/soc/timers@40000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000000_FULL_NAME "timers@40000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000000_CHILD_IDX 17

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000000_CHILD_NUM 3
#define DT_N_S_soc_S_timers_40000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm) fn(DT_N_S_soc_S_timers_40000000_S_counter) fn(DT_N_S_soc_S_timers_40000000_S_qdec)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000000_S_counter) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000000_S_qdec)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000_S_qdec, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000000_S_counter, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000000_S_qdec, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000000_ORD 95
#define DT_N_S_soc_S_timers_40000000_ORD_STR_SORTABLE 00095

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000000_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40023800 */ \
	40, /* /soc/rcc@40023800/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000000_SUPPORTS_ORDS \
	96, /* /soc/timers@40000000/counter */ \
	97, /* /soc/timers@40000000/pwm */ \
	98, /* /soc/timers@40000000/qdec */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000000_EXISTS 1
#define DT_N_INST_2_st_stm32_timers DT_N_S_soc_S_timers_40000000
#define DT_N_NODELABEL_timers2      DT_N_S_soc_S_timers_40000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000000_REG_NUM 1
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_VAL_ADDRESS 1073741824 /* 0x40000000 */
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000000_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq 28
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40000000_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40000000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40000000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000000_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_status "disabled"
#define DT_N_S_soc_S_timers_40000000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, status, 0)
#define DT_N_S_soc_S_timers_40000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000, status, 0)
#define DT_N_S_soc_S_timers_40000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_reg {1073741824 /* 0x40000000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_0 1073741824
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupts {28 /* 0x1c */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_0 28
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, clocks, 0)
#define DT_N_S_soc_S_timers_40000000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000, clocks, 0)
#define DT_N_S_soc_S_timers_40000000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40023800_S_reset_controller
#define DT_N_S_soc_S_timers_40000000_P_resets_IDX_0_VAL_id 1024
#define DT_N_S_soc_S_timers_40000000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, resets, 0)
#define DT_N_S_soc_S_timers_40000000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000, resets, 0)
#define DT_N_S_soc_S_timers_40000000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40000000_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_st_countermode 0
#define DT_N_S_soc_S_timers_40000000_P_st_countermode_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000000/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40000000_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000000_S_counter_PATH "/soc/timers@40000000/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000000_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40000000) identifier: */
#define DT_N_S_soc_S_timers_40000000_S_counter_PARENT DT_N_S_soc_S_timers_40000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000000_S_counter_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000000_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000000_S_counter_ORD 96
#define DT_N_S_soc_S_timers_40000000_S_counter_ORD_STR_SORTABLE 00096

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000000_S_counter_REQUIRES_ORDS \
	95, /* /soc/timers@40000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000000_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000000_S_counter_EXISTS 1
#define DT_N_INST_0_st_stm32_counter DT_N_S_soc_S_timers_40000000_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000000_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000000_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40000000_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40000000_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000000_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40000000_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000000_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000000_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000000_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000000_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000000_S_counter_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_PATH "/soc/timers@40000000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40000000) identifier: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_PARENT DT_N_S_soc_S_timers_40000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000000_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_ORD 97
#define DT_N_S_soc_S_timers_40000000_S_pwm_ORD_STR_SORTABLE 00097

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_REQUIRES_ORDS \
	95, /* /soc/timers@40000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_EXISTS 1
#define DT_N_INST_2_st_stm32_pwm DT_N_S_soc_S_timers_40000000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40000000_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_four_channel_capture_support_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000000/qdec
 *
 * Node identifier: DT_N_S_soc_S_timers_40000000_S_qdec
 *
 * Binding (compatible = st,stm32-qdec):
 *   $ZEPHYR_BASE/dts/bindings/sensor/st,stm32-qdec.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000000_S_qdec_PATH "/soc/timers@40000000/qdec"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000000_S_qdec_FULL_NAME "qdec"

/* Node parent (/soc/timers@40000000) identifier: */
#define DT_N_S_soc_S_timers_40000000_S_qdec_PARENT DT_N_S_soc_S_timers_40000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000000_S_qdec_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000000_S_qdec_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_qdec_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000000_S_qdec_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000000_S_qdec_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000000_S_qdec_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_S_qdec_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000000_S_qdec_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000000_S_qdec_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000000_S_qdec_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_S_qdec_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000000_S_qdec_ORD 98
#define DT_N_S_soc_S_timers_40000000_S_qdec_ORD_STR_SORTABLE 00098

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000000_S_qdec_REQUIRES_ORDS \
	95, /* /soc/timers@40000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000000_S_qdec_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000000_S_qdec_EXISTS 1
#define DT_N_INST_1_st_stm32_qdec DT_N_S_soc_S_timers_40000000_S_qdec

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000000_S_qdec_REG_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_qdec_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_qdec_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000000_S_qdec_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_qdec_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40000000_S_qdec_COMPAT_MATCHES_st_stm32_qdec 1
#define DT_N_S_soc_S_timers_40000000_S_qdec_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_qdec_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000000_S_qdec_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_qdec_COMPAT_MODEL_IDX_0 "stm32-qdec"
#define DT_N_S_soc_S_timers_40000000_S_qdec_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000000_S_qdec_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_status "disabled"
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_qdec, status, 0)
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000_S_qdec, status, 0)
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_qdec, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000_S_qdec, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_compatible {"st,stm32-qdec"}
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_compatible_IDX_0 "st,stm32-qdec"
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-qdec
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_compatible_IDX_0_STRING_TOKEN st_stm32_qdec
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_QDEC
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_qdec, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000000_S_qdec, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_qdec, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000000_S_qdec, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_st_encoder_mode 1
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_st_encoder_mode_ENUM_IDX 0
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_st_encoder_mode_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_st_encoder_mode_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_st_input_polarity_inverted 0
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_st_input_polarity_inverted_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_st_input_filter_level 0
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_st_input_filter_level_ENUM_IDX 0
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_st_input_filter_level_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_qdec_P_st_input_filter_level_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000400
 *
 * Node identifier: DT_N_S_soc_S_timers_40000400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000400_PATH "/soc/timers@40000400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000400_FULL_NAME "timers@40000400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000400_CHILD_IDX 18

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000400_CHILD_NUM 3
#define DT_N_S_soc_S_timers_40000400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm) fn(DT_N_S_soc_S_timers_40000400_S_counter) fn(DT_N_S_soc_S_timers_40000400_S_qdec)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000400_S_counter) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000400_S_qdec)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400_S_qdec, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000400_S_counter, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000400_S_qdec, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000400_ORD 99
#define DT_N_S_soc_S_timers_40000400_ORD_STR_SORTABLE 00099

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000400_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40023800 */ \
	40, /* /soc/rcc@40023800/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000400_SUPPORTS_ORDS \
	100, /* /soc/timers@40000400/counter */ \
	101, /* /soc/timers@40000400/pwm */ \
	102, /* /soc/timers@40000400/qdec */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000400_EXISTS 1
#define DT_N_INST_3_st_stm32_timers DT_N_S_soc_S_timers_40000400
#define DT_N_NODELABEL_timers3      DT_N_S_soc_S_timers_40000400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000400_REG_NUM 1
#define DT_N_S_soc_S_timers_40000400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_REG_IDX_0_VAL_ADDRESS 1073742848 /* 0x40000400 */
#define DT_N_S_soc_S_timers_40000400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000400_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_irq 29
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40000400_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40000400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40000400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000400_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_status "disabled"
#define DT_N_S_soc_S_timers_40000400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, status, 0)
#define DT_N_S_soc_S_timers_40000400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400, status, 0)
#define DT_N_S_soc_S_timers_40000400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_reg {1073742848 /* 0x40000400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_0 1073742848
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupts {29 /* 0x1d */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_0 29
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, clocks, 0)
#define DT_N_S_soc_S_timers_40000400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400, clocks, 0)
#define DT_N_S_soc_S_timers_40000400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40023800_S_reset_controller
#define DT_N_S_soc_S_timers_40000400_P_resets_IDX_0_VAL_id 1025
#define DT_N_S_soc_S_timers_40000400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, resets, 0)
#define DT_N_S_soc_S_timers_40000400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400, resets, 0)
#define DT_N_S_soc_S_timers_40000400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40000400_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_st_countermode 0
#define DT_N_S_soc_S_timers_40000400_P_st_countermode_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000400/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40000400_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000400_S_counter_PATH "/soc/timers@40000400/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000400_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40000400) identifier: */
#define DT_N_S_soc_S_timers_40000400_S_counter_PARENT DT_N_S_soc_S_timers_40000400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000400_S_counter_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000400_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000400_S_counter_ORD 100
#define DT_N_S_soc_S_timers_40000400_S_counter_ORD_STR_SORTABLE 00100

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000400_S_counter_REQUIRES_ORDS \
	99, /* /soc/timers@40000400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000400_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000400_S_counter_EXISTS 1
#define DT_N_INST_1_st_stm32_counter DT_N_S_soc_S_timers_40000400_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000400_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000400_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40000400_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40000400_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000400_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40000400_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000400_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000400_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000400_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000400_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000400_S_counter_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000400/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000400_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_PATH "/soc/timers@40000400/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40000400) identifier: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_PARENT DT_N_S_soc_S_timers_40000400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000400_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_ORD 101
#define DT_N_S_soc_S_timers_40000400_S_pwm_ORD_STR_SORTABLE 00101

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_REQUIRES_ORDS \
	99, /* /soc/timers@40000400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_EXISTS 1
#define DT_N_INST_3_st_stm32_pwm DT_N_S_soc_S_timers_40000400_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40000400_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_four_channel_capture_support_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000400/qdec
 *
 * Node identifier: DT_N_S_soc_S_timers_40000400_S_qdec
 *
 * Binding (compatible = st,stm32-qdec):
 *   $ZEPHYR_BASE/dts/bindings/sensor/st,stm32-qdec.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000400_S_qdec_PATH "/soc/timers@40000400/qdec"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000400_S_qdec_FULL_NAME "qdec"

/* Node parent (/soc/timers@40000400) identifier: */
#define DT_N_S_soc_S_timers_40000400_S_qdec_PARENT DT_N_S_soc_S_timers_40000400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000400_S_qdec_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000400_S_qdec_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_qdec_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000400_S_qdec_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000400_S_qdec_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000400_S_qdec_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_S_qdec_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000400_S_qdec_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000400_S_qdec_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000400_S_qdec_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_S_qdec_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000400_S_qdec_ORD 102
#define DT_N_S_soc_S_timers_40000400_S_qdec_ORD_STR_SORTABLE 00102

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000400_S_qdec_REQUIRES_ORDS \
	99, /* /soc/timers@40000400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000400_S_qdec_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000400_S_qdec_EXISTS 1
#define DT_N_INST_2_st_stm32_qdec DT_N_S_soc_S_timers_40000400_S_qdec

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000400_S_qdec_REG_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_qdec_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_qdec_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000400_S_qdec_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_qdec_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40000400_S_qdec_COMPAT_MATCHES_st_stm32_qdec 1
#define DT_N_S_soc_S_timers_40000400_S_qdec_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_qdec_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000400_S_qdec_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_qdec_COMPAT_MODEL_IDX_0 "stm32-qdec"
#define DT_N_S_soc_S_timers_40000400_S_qdec_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000400_S_qdec_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_status "disabled"
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_qdec, status, 0)
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_qdec, status, 0)
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_qdec, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_qdec, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_compatible {"st,stm32-qdec"}
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_compatible_IDX_0 "st,stm32-qdec"
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-qdec
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_compatible_IDX_0_STRING_TOKEN st_stm32_qdec
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_QDEC
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_qdec, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000400_S_qdec, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_qdec, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000400_S_qdec, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_st_encoder_mode 1
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_st_encoder_mode_ENUM_IDX 0
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_st_encoder_mode_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_st_encoder_mode_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_st_input_polarity_inverted 0
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_st_input_polarity_inverted_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_st_input_filter_level 0
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_st_input_filter_level_ENUM_IDX 0
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_st_input_filter_level_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_qdec_P_st_input_filter_level_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000800/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40000800_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000800_S_counter_PATH "/soc/timers@40000800/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000800_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40000800) identifier: */
#define DT_N_S_soc_S_timers_40000800_S_counter_PARENT DT_N_S_soc_S_timers_40000800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000800_S_counter_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000800_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000800_S_counter_ORD 103
#define DT_N_S_soc_S_timers_40000800_S_counter_ORD_STR_SORTABLE 00103

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000800_S_counter_REQUIRES_ORDS \
	41, /* /soc/timers@40000800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000800_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000800_S_counter_EXISTS 1
#define DT_N_INST_2_st_stm32_counter DT_N_S_soc_S_timers_40000800_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000800_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000800_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40000800_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40000800_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000800_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40000800_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000800_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000800_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000800_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000800_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000800_S_counter_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000800/qdec
 *
 * Node identifier: DT_N_S_soc_S_timers_40000800_S_qdec
 *
 * Binding (compatible = st,stm32-qdec):
 *   $ZEPHYR_BASE/dts/bindings/sensor/st,stm32-qdec.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000800_S_qdec_PATH "/soc/timers@40000800/qdec"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000800_S_qdec_FULL_NAME "qdec"

/* Node parent (/soc/timers@40000800) identifier: */
#define DT_N_S_soc_S_timers_40000800_S_qdec_PARENT DT_N_S_soc_S_timers_40000800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000800_S_qdec_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000800_S_qdec_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_qdec_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000800_S_qdec_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000800_S_qdec_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000800_S_qdec_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000800_S_qdec_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000800_S_qdec_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000800_S_qdec_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000800_S_qdec_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000800_S_qdec_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000800_S_qdec_ORD 104
#define DT_N_S_soc_S_timers_40000800_S_qdec_ORD_STR_SORTABLE 00104

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000800_S_qdec_REQUIRES_ORDS \
	41, /* /soc/timers@40000800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000800_S_qdec_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000800_S_qdec_EXISTS 1
#define DT_N_INST_3_st_stm32_qdec DT_N_S_soc_S_timers_40000800_S_qdec

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000800_S_qdec_REG_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_qdec_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_qdec_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000800_S_qdec_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_qdec_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40000800_S_qdec_COMPAT_MATCHES_st_stm32_qdec 1
#define DT_N_S_soc_S_timers_40000800_S_qdec_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_qdec_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000800_S_qdec_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_qdec_COMPAT_MODEL_IDX_0 "stm32-qdec"
#define DT_N_S_soc_S_timers_40000800_S_qdec_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000800_S_qdec_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_status "disabled"
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_qdec, status, 0)
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800_S_qdec, status, 0)
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_qdec, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800_S_qdec, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_compatible {"st,stm32-qdec"}
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_compatible_IDX_0 "st,stm32-qdec"
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-qdec
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_compatible_IDX_0_STRING_TOKEN st_stm32_qdec
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_QDEC
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_qdec, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000800_S_qdec, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_qdec, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000800_S_qdec, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_st_encoder_mode 1
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_st_encoder_mode_ENUM_IDX 0
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_st_encoder_mode_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_st_encoder_mode_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_st_input_polarity_inverted 0
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_st_input_polarity_inverted_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_st_input_filter_level 0
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_st_input_filter_level_ENUM_IDX 0
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_st_input_filter_level_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_qdec_P_st_input_filter_level_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000c00
 *
 * Node identifier: DT_N_S_soc_S_timers_40000c00
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000c00_PATH "/soc/timers@40000c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000c00_FULL_NAME "timers@40000c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000c00_CHILD_IDX 20

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000c00_CHILD_NUM 3
#define DT_N_S_soc_S_timers_40000c00_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000c00_S_pwm) fn(DT_N_S_soc_S_timers_40000c00_S_counter) fn(DT_N_S_soc_S_timers_40000c00_S_qdec)
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000c00_S_counter) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000c00_S_qdec)
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000c00_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000c00_S_qdec, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000c00_S_counter, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40000c00_S_qdec, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000c00_ORD 105
#define DT_N_S_soc_S_timers_40000c00_ORD_STR_SORTABLE 00105

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000c00_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40023800 */ \
	40, /* /soc/rcc@40023800/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000c00_SUPPORTS_ORDS \
	106, /* /soc/timers@40000c00/counter */ \
	107, /* /soc/timers@40000c00/pwm */ \
	108, /* /soc/timers@40000c00/qdec */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000c00_EXISTS 1
#define DT_N_INST_4_st_stm32_timers DT_N_S_soc_S_timers_40000c00
#define DT_N_NODELABEL_timers5      DT_N_S_soc_S_timers_40000c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000c00_REG_NUM 1
#define DT_N_S_soc_S_timers_40000c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_REG_IDX_0_VAL_ADDRESS 1073744896 /* 0x40000c00 */
#define DT_N_S_soc_S_timers_40000c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000c00_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000c00_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_irq 50
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40000c00_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000c00_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000c00_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40000c00_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40000c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000c00_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000c00_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_status "disabled"
#define DT_N_S_soc_S_timers_40000c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000c00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, status, 0)
#define DT_N_S_soc_S_timers_40000c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00, status, 0)
#define DT_N_S_soc_S_timers_40000c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000c00_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000c00_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000c00_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40000c00_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40000c00_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40000c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_reg {1073744896 /* 0x40000c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000c00_P_reg_IDX_0 1073744896
#define DT_N_S_soc_S_timers_40000c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupts {50 /* 0x32 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_IDX_0 50
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_VAL_bits 8
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, clocks, 0)
#define DT_N_S_soc_S_timers_40000c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00, clocks, 0)
#define DT_N_S_soc_S_timers_40000c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000c00_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40023800_S_reset_controller
#define DT_N_S_soc_S_timers_40000c00_P_resets_IDX_0_VAL_id 1027
#define DT_N_S_soc_S_timers_40000c00_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, resets, 0)
#define DT_N_S_soc_S_timers_40000c00_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00, resets, 0)
#define DT_N_S_soc_S_timers_40000c00_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40000c00_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40000c00_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_st_countermode 0
#define DT_N_S_soc_S_timers_40000c00_P_st_countermode_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000c00/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40000c00_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_PATH "/soc/timers@40000c00/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40000c00) identifier: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_PARENT DT_N_S_soc_S_timers_40000c00

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000c00_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_ORD 106
#define DT_N_S_soc_S_timers_40000c00_S_counter_ORD_STR_SORTABLE 00106

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_REQUIRES_ORDS \
	105, /* /soc/timers@40000c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_EXISTS 1
#define DT_N_INST_3_st_stm32_counter DT_N_S_soc_S_timers_40000c00_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40000c00_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000c00_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40000c00_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000c00/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000c00_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_PATH "/soc/timers@40000c00/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40000c00) identifier: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_PARENT DT_N_S_soc_S_timers_40000c00

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_ORD 107
#define DT_N_S_soc_S_timers_40000c00_S_pwm_ORD_STR_SORTABLE 00107

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_REQUIRES_ORDS \
	105, /* /soc/timers@40000c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_EXISTS 1
#define DT_N_INST_4_st_stm32_pwm DT_N_S_soc_S_timers_40000c00_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000c00_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40000c00_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_four_channel_capture_support_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000c00/qdec
 *
 * Node identifier: DT_N_S_soc_S_timers_40000c00_S_qdec
 *
 * Binding (compatible = st,stm32-qdec):
 *   $ZEPHYR_BASE/dts/bindings/sensor/st,stm32-qdec.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000c00_S_qdec_PATH "/soc/timers@40000c00/qdec"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000c00_S_qdec_FULL_NAME "qdec"

/* Node parent (/soc/timers@40000c00) identifier: */
#define DT_N_S_soc_S_timers_40000c00_S_qdec_PARENT DT_N_S_soc_S_timers_40000c00

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000c00_S_qdec_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40000c00_S_qdec_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_qdec_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40000c00_S_qdec_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_qdec_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000c00_S_qdec_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000c00_S_qdec_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40000c00_S_qdec_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_qdec_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40000c00_S_qdec_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000c00_S_qdec_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000c00_S_qdec_ORD 108
#define DT_N_S_soc_S_timers_40000c00_S_qdec_ORD_STR_SORTABLE 00108

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000c00_S_qdec_REQUIRES_ORDS \
	105, /* /soc/timers@40000c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000c00_S_qdec_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000c00_S_qdec_EXISTS 1
#define DT_N_INST_4_st_stm32_qdec DT_N_S_soc_S_timers_40000c00_S_qdec

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000c00_S_qdec_REG_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_qdec_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_qdec_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_qdec_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_qdec_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40000c00_S_qdec_COMPAT_MATCHES_st_stm32_qdec 1
#define DT_N_S_soc_S_timers_40000c00_S_qdec_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_qdec_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40000c00_S_qdec_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_qdec_COMPAT_MODEL_IDX_0 "stm32-qdec"
#define DT_N_S_soc_S_timers_40000c00_S_qdec_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000c00_S_qdec_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_status "disabled"
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00_S_qdec, status, 0)
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00_S_qdec, status, 0)
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_qdec, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00_S_qdec, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_status_LEN 1
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_compatible {"st,stm32-qdec"}
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_compatible_IDX_0 "st,stm32-qdec"
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-qdec
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_compatible_IDX_0_STRING_TOKEN st_stm32_qdec
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_QDEC
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00_S_qdec, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40000c00_S_qdec, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_qdec, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40000c00_S_qdec, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_st_encoder_mode 1
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_st_encoder_mode_ENUM_IDX 0
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_st_encoder_mode_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_st_encoder_mode_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_st_input_polarity_inverted 0
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_st_input_polarity_inverted_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_st_input_filter_level 0
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_st_input_filter_level_ENUM_IDX 0
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_st_input_filter_level_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_qdec_P_st_input_filter_level_EXISTS 1

/*
 * Devicetree node: /soc/timers@40010000
 *
 * Node identifier: DT_N_S_soc_S_timers_40010000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40010000_PATH "/soc/timers@40010000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40010000_FULL_NAME "timers@40010000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40010000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40010000_CHILD_IDX 16

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40010000_CHILD_NUM 2
#define DT_N_S_soc_S_timers_40010000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40010000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40010000_S_pwm) fn(DT_N_S_soc_S_timers_40010000_S_qdec)
#define DT_N_S_soc_S_timers_40010000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40010000_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40010000_S_qdec)
#define DT_N_S_soc_S_timers_40010000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40010000_S_qdec, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40010000_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40010000_S_qdec, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40010000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40010000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40010000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40010000_ORD 109
#define DT_N_S_soc_S_timers_40010000_ORD_STR_SORTABLE 00109

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40010000_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40023800 */ \
	40, /* /soc/rcc@40023800/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40010000_SUPPORTS_ORDS \
	110, /* /soc/timers@40010000/pwm */ \
	111, /* /soc/timers@40010000/qdec */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40010000_EXISTS 1
#define DT_N_INST_1_st_stm32_timers DT_N_S_soc_S_timers_40010000
#define DT_N_NODELABEL_timers1      DT_N_S_soc_S_timers_40010000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40010000_REG_NUM 1
#define DT_N_S_soc_S_timers_40010000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_REG_IDX_0_VAL_ADDRESS 1073807360 /* 0x40010000 */
#define DT_N_S_soc_S_timers_40010000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40010000_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40010000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40010000_IRQ_NUM 4
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_VAL_irq 25
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_VAL_irq 26
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_VAL_irq 27
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40010000_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_brk_VAL_irq DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_brk_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_brk_VAL_priority DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_brk_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_brk_CONTROLLER DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_up_VAL_irq DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_up_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_up_VAL_priority DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_up_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_up_CONTROLLER DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_trgcom_VAL_irq DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_trgcom_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_trgcom_VAL_priority DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_trgcom_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_trgcom_CONTROLLER DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_CONTROLLER
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_cc_VAL_irq DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_cc_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_cc_VAL_priority DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_cc_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_cc_CONTROLLER DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_CONTROLLER
#define DT_N_S_soc_S_timers_40010000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40010000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40010000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40010000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40010000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40010000_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40010000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40010000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_status "disabled"
#define DT_N_S_soc_S_timers_40010000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40010000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40010000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40010000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40010000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40010000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40010000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40010000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000, status, 0)
#define DT_N_S_soc_S_timers_40010000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40010000, status, 0)
#define DT_N_S_soc_S_timers_40010000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40010000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_P_status_LEN 1
#define DT_N_S_soc_S_timers_40010000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40010000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40010000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40010000_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40010000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40010000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000, compatible, 0)
#define DT_N_S_soc_S_timers_40010000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40010000, compatible, 0)
#define DT_N_S_soc_S_timers_40010000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40010000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40010000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_reg {1073807360 /* 0x40010000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40010000_P_reg_IDX_0 1073807360
#define DT_N_S_soc_S_timers_40010000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40010000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts {24 /* 0x18 */, 0 /* 0x0 */, 25 /* 0x19 */, 0 /* 0x0 */, 26 /* 0x1a */, 0 /* 0x0 */, 27 /* 0x1b */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_2 25
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_4 26
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_6 27
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names {"brk", "up", "trgcom", "cc"}
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_0 "brk"
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_0_STRING_UNQUOTED brk
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_0_STRING_TOKEN brk
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN BRK
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_1 "up"
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_1_STRING_UNQUOTED up
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_1_STRING_TOKEN up
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN UP
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_2 "trgcom"
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_2_STRING_UNQUOTED trgcom
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_2_STRING_TOKEN trgcom
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN TRGCOM
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_3 "cc"
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_3_STRING_UNQUOTED cc
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_3_STRING_TOKEN cc
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_3_STRING_UPPER_TOKEN CC
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 1) \
	fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 2) \
	fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 3)
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 3)
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_LEN 4
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40010000_P_clocks_IDX_0_VAL_bus 68
#define DT_N_S_soc_S_timers_40010000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_timers_40010000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000, clocks, 0)
#define DT_N_S_soc_S_timers_40010000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40010000, clocks, 0)
#define DT_N_S_soc_S_timers_40010000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40010000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40010000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40010000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40023800_S_reset_controller
#define DT_N_S_soc_S_timers_40010000_P_resets_IDX_0_VAL_id 1152
#define DT_N_S_soc_S_timers_40010000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000, resets, 0)
#define DT_N_S_soc_S_timers_40010000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40010000, resets, 0)
#define DT_N_S_soc_S_timers_40010000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40010000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40010000_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40010000_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_st_countermode 0
#define DT_N_S_soc_S_timers_40010000_P_st_countermode_EXISTS 1

/*
 * Devicetree node: /soc/timers@40010000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40010000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_PATH "/soc/timers@40010000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40010000) identifier: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_PARENT DT_N_S_soc_S_timers_40010000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40010000_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40010000_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40010000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40010000_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40010000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40010000_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40010000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40010000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40010000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40010000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_ORD 110
#define DT_N_S_soc_S_timers_40010000_S_pwm_ORD_STR_SORTABLE 00110

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_REQUIRES_ORDS \
	109, /* /soc/timers@40010000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_EXISTS 1
#define DT_N_INST_1_st_stm32_pwm DT_N_S_soc_S_timers_40010000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40010000_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40010000_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40010000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40010000_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40010000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40010000_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40010000_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40010000_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40010000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40010000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_four_channel_capture_support_EXISTS 1

/*
 * Devicetree node: /soc/timers@40010000/qdec
 *
 * Node identifier: DT_N_S_soc_S_timers_40010000_S_qdec
 *
 * Binding (compatible = st,stm32-qdec):
 *   $ZEPHYR_BASE/dts/bindings/sensor/st,stm32-qdec.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40010000_S_qdec_PATH "/soc/timers@40010000/qdec"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40010000_S_qdec_FULL_NAME "qdec"

/* Node parent (/soc/timers@40010000) identifier: */
#define DT_N_S_soc_S_timers_40010000_S_qdec_PARENT DT_N_S_soc_S_timers_40010000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40010000_S_qdec_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40010000_S_qdec_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40010000_S_qdec_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40010000_S_qdec_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40010000_S_qdec_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40010000_S_qdec_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40010000_S_qdec_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40010000_S_qdec_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40010000_S_qdec_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40010000_S_qdec_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40010000_S_qdec_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40010000_S_qdec_ORD 111
#define DT_N_S_soc_S_timers_40010000_S_qdec_ORD_STR_SORTABLE 00111

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40010000_S_qdec_REQUIRES_ORDS \
	109, /* /soc/timers@40010000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40010000_S_qdec_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40010000_S_qdec_EXISTS 1
#define DT_N_INST_0_st_stm32_qdec DT_N_S_soc_S_timers_40010000_S_qdec

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40010000_S_qdec_REG_NUM 0
#define DT_N_S_soc_S_timers_40010000_S_qdec_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40010000_S_qdec_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40010000_S_qdec_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40010000_S_qdec_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40010000_S_qdec_COMPAT_MATCHES_st_stm32_qdec 1
#define DT_N_S_soc_S_timers_40010000_S_qdec_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_qdec_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40010000_S_qdec_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_qdec_COMPAT_MODEL_IDX_0 "stm32-qdec"
#define DT_N_S_soc_S_timers_40010000_S_qdec_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40010000_S_qdec_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_status "disabled"
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000_S_qdec, status, 0)
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40010000_S_qdec, status, 0)
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010000_S_qdec, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40010000_S_qdec, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_status_LEN 1
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_compatible {"st,stm32-qdec"}
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_compatible_IDX_0 "st,stm32-qdec"
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-qdec
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_compatible_IDX_0_STRING_TOKEN st_stm32_qdec
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_QDEC
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000_S_qdec, compatible, 0)
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40010000_S_qdec, compatible, 0)
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010000_S_qdec, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40010000_S_qdec, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_st_encoder_mode 1
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_st_encoder_mode_ENUM_IDX 0
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_st_encoder_mode_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_st_encoder_mode_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_st_input_polarity_inverted 0
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_st_input_polarity_inverted_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_st_input_filter_level 0
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_st_input_filter_level_ENUM_IDX 0
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_st_input_filter_level_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_qdec_P_st_input_filter_level_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014000
 *
 * Node identifier: DT_N_S_soc_S_timers_40014000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014000_PATH "/soc/timers@40014000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014000_FULL_NAME "timers@40014000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40014000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014000_CHILD_IDX 21

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014000_CHILD_NUM 2
#define DT_N_S_soc_S_timers_40014000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40014000_S_pwm) fn(DT_N_S_soc_S_timers_40014000_S_counter)
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014000_S_counter)
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014000_ORD 112
#define DT_N_S_soc_S_timers_40014000_ORD_STR_SORTABLE 00112

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014000_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40023800 */ \
	40, /* /soc/rcc@40023800/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014000_SUPPORTS_ORDS \
	113, /* /soc/timers@40014000/counter */ \
	114, /* /soc/timers@40014000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014000_EXISTS 1
#define DT_N_INST_5_st_stm32_timers DT_N_S_soc_S_timers_40014000
#define DT_N_NODELABEL_timers9      DT_N_S_soc_S_timers_40014000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014000_REG_NUM 1
#define DT_N_S_soc_S_timers_40014000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_REG_IDX_0_VAL_ADDRESS 1073823744 /* 0x40014000 */
#define DT_N_S_soc_S_timers_40014000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40014000_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40014000_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40014000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40014000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40014000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014000_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_status "disabled"
#define DT_N_S_soc_S_timers_40014000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, status, 0)
#define DT_N_S_soc_S_timers_40014000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000, status, 0)
#define DT_N_S_soc_S_timers_40014000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40014000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40014000_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40014000_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40014000_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40014000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_reg {1073823744 /* 0x40014000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_0 1073823744
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupts {24 /* 0x18 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bus 68
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bits 65536
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, clocks, 0)
#define DT_N_S_soc_S_timers_40014000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000, clocks, 0)
#define DT_N_S_soc_S_timers_40014000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40023800_S_reset_controller
#define DT_N_S_soc_S_timers_40014000_P_resets_IDX_0_VAL_id 1168
#define DT_N_S_soc_S_timers_40014000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, resets, 0)
#define DT_N_S_soc_S_timers_40014000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000, resets, 0)
#define DT_N_S_soc_S_timers_40014000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40014000_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_st_countermode 0
#define DT_N_S_soc_S_timers_40014000_P_st_countermode_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014000/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40014000_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014000_S_counter_PATH "/soc/timers@40014000/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014000_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40014000) identifier: */
#define DT_N_S_soc_S_timers_40014000_S_counter_PARENT DT_N_S_soc_S_timers_40014000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014000_S_counter_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014000_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014000_S_counter_ORD 113
#define DT_N_S_soc_S_timers_40014000_S_counter_ORD_STR_SORTABLE 00113

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014000_S_counter_REQUIRES_ORDS \
	112, /* /soc/timers@40014000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014000_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014000_S_counter_EXISTS 1
#define DT_N_INST_4_st_stm32_counter DT_N_S_soc_S_timers_40014000_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014000_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014000_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40014000_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40014000_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014000_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40014000_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014000_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014000_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014000_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014000_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014000_S_counter_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40014000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_PATH "/soc/timers@40014000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40014000) identifier: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_PARENT DT_N_S_soc_S_timers_40014000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014000_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_ORD 114
#define DT_N_S_soc_S_timers_40014000_S_pwm_ORD_STR_SORTABLE 00114

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_REQUIRES_ORDS \
	112, /* /soc/timers@40014000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_EXISTS 1
#define DT_N_INST_5_st_stm32_pwm DT_N_S_soc_S_timers_40014000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014000_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40014000_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_four_channel_capture_support_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014400
 *
 * Node identifier: DT_N_S_soc_S_timers_40014400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014400_PATH "/soc/timers@40014400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014400_FULL_NAME "timers@40014400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40014400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014400_CHILD_IDX 22

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014400_CHILD_NUM 2
#define DT_N_S_soc_S_timers_40014400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm) fn(DT_N_S_soc_S_timers_40014400_S_counter)
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014400_S_counter)
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014400_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014400_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014400_ORD 115
#define DT_N_S_soc_S_timers_40014400_ORD_STR_SORTABLE 00115

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014400_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40023800 */ \
	40, /* /soc/rcc@40023800/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014400_SUPPORTS_ORDS \
	116, /* /soc/timers@40014400/counter */ \
	117, /* /soc/timers@40014400/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014400_EXISTS 1
#define DT_N_INST_6_st_stm32_timers DT_N_S_soc_S_timers_40014400
#define DT_N_NODELABEL_timers10     DT_N_S_soc_S_timers_40014400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014400_REG_NUM 1
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_VAL_ADDRESS 1073824768 /* 0x40014400 */
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40014400_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq 25
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40014400_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40014400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40014400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40014400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014400_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_status "disabled"
#define DT_N_S_soc_S_timers_40014400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, status, 0)
#define DT_N_S_soc_S_timers_40014400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400, status, 0)
#define DT_N_S_soc_S_timers_40014400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_reg {1073824768 /* 0x40014400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_0 1073824768
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupts {25 /* 0x19 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_0 25
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bus 68
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bits 131072
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, clocks, 0)
#define DT_N_S_soc_S_timers_40014400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400, clocks, 0)
#define DT_N_S_soc_S_timers_40014400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40023800_S_reset_controller
#define DT_N_S_soc_S_timers_40014400_P_resets_IDX_0_VAL_id 1169
#define DT_N_S_soc_S_timers_40014400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, resets, 0)
#define DT_N_S_soc_S_timers_40014400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400, resets, 0)
#define DT_N_S_soc_S_timers_40014400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40014400_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_st_countermode 0
#define DT_N_S_soc_S_timers_40014400_P_st_countermode_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014400/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40014400_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014400_S_counter_PATH "/soc/timers@40014400/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014400_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40014400) identifier: */
#define DT_N_S_soc_S_timers_40014400_S_counter_PARENT DT_N_S_soc_S_timers_40014400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014400_S_counter_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014400_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014400_S_counter_ORD 116
#define DT_N_S_soc_S_timers_40014400_S_counter_ORD_STR_SORTABLE 00116

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014400_S_counter_REQUIRES_ORDS \
	115, /* /soc/timers@40014400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014400_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014400_S_counter_EXISTS 1
#define DT_N_INST_5_st_stm32_counter DT_N_S_soc_S_timers_40014400_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014400_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014400_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40014400_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40014400_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014400_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40014400_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014400_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014400_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014400_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014400_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014400_S_counter_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014400/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40014400_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_PATH "/soc/timers@40014400/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40014400) identifier: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_PARENT DT_N_S_soc_S_timers_40014400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014400_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_ORD 117
#define DT_N_S_soc_S_timers_40014400_S_pwm_ORD_STR_SORTABLE 00117

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_REQUIRES_ORDS \
	115, /* /soc/timers@40014400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_EXISTS 1
#define DT_N_INST_6_st_stm32_pwm DT_N_S_soc_S_timers_40014400_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40014400_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_four_channel_capture_support_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014800
 *
 * Node identifier: DT_N_S_soc_S_timers_40014800
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014800_PATH "/soc/timers@40014800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014800_FULL_NAME "timers@40014800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40014800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014800_CHILD_IDX 23

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014800_CHILD_NUM 2
#define DT_N_S_soc_S_timers_40014800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm) fn(DT_N_S_soc_S_timers_40014800_S_counter)
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800_S_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014800_S_counter)
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014800_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timers_40014800_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014800_ORD 118
#define DT_N_S_soc_S_timers_40014800_ORD_STR_SORTABLE 00118

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014800_REQUIRES_ORDS \
	3, /* /soc */ \
	4, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/rcc@40023800 */ \
	40, /* /soc/rcc@40023800/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014800_SUPPORTS_ORDS \
	119, /* /soc/timers@40014800/counter */ \
	120, /* /soc/timers@40014800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014800_EXISTS 1
#define DT_N_INST_7_st_stm32_timers DT_N_S_soc_S_timers_40014800
#define DT_N_NODELABEL_timers11     DT_N_S_soc_S_timers_40014800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014800_REG_NUM 1
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_VAL_ADDRESS 1073825792 /* 0x40014800 */
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40014800_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014800_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq 26
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timers_40014800_IRQ_LEVEL 1
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_CONTROLLER DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_timers_40014800_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40014800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_COMPAT_MODEL_IDX_0 "stm32-timers"
#define DT_N_S_soc_S_timers_40014800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014800_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_status "disabled"
#define DT_N_S_soc_S_timers_40014800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014800_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, status, 0)
#define DT_N_S_soc_S_timers_40014800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800, status, 0)
#define DT_N_S_soc_S_timers_40014800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-timers
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0_STRING_TOKEN st_stm32_timers
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_TIMERS
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_reg {1073825792 /* 0x40014800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_0 1073825792
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupts {26 /* 0x1a */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_0 26
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bus 68
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bits 262144
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, clocks, 0)
#define DT_N_S_soc_S_timers_40014800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800, clocks, 0)
#define DT_N_S_soc_S_timers_40014800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_resets_IDX_0_PH DT_N_S_soc_S_rcc_40023800_S_reset_controller
#define DT_N_S_soc_S_timers_40014800_P_resets_IDX_0_VAL_id 1170
#define DT_N_S_soc_S_timers_40014800_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, resets, 0)
#define DT_N_S_soc_S_timers_40014800_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800, resets, 0)
#define DT_N_S_soc_S_timers_40014800_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_resets_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_resets_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40014800_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_st_countermode 0
#define DT_N_S_soc_S_timers_40014800_P_st_countermode_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014800/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40014800_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014800_S_counter_PATH "/soc/timers@40014800/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014800_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40014800) identifier: */
#define DT_N_S_soc_S_timers_40014800_S_counter_PARENT DT_N_S_soc_S_timers_40014800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014800_S_counter_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014800_S_counter_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_counter_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014800_S_counter_ORD 119
#define DT_N_S_soc_S_timers_40014800_S_counter_ORD_STR_SORTABLE 00119

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014800_S_counter_REQUIRES_ORDS \
	118, /* /soc/timers@40014800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014800_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014800_S_counter_EXISTS 1
#define DT_N_INST_6_st_stm32_counter DT_N_S_soc_S_timers_40014800_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014800_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014800_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_counter_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40014800_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40014800_S_counter_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014800_S_counter_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_COMPAT_MODEL_IDX_0 "stm32-counter"
#define DT_N_S_soc_S_timers_40014800_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014800_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014800_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014800_S_counter_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014800_S_counter_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 0)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-counter
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_IDX_0_STRING_TOKEN st_stm32_counter
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_COUNTER
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014800_S_counter_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014800/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40014800_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_PATH "/soc/timers@40014800/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40014800) identifier: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_PARENT DT_N_S_soc_S_timers_40014800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timers_40014800_S_pwm_CHILD_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_ORD 120
#define DT_N_S_soc_S_timers_40014800_S_pwm_ORD_STR_SORTABLE 00120

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_REQUIRES_ORDS \
	118, /* /soc/timers@40014800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_EXISTS 1
#define DT_N_INST_7_st_stm32_pwm DT_N_S_soc_S_timers_40014800_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_IRQ_LEVEL 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_MODEL_IDX_0 "stm32-pwm"
#define DT_N_S_soc_S_timers_40014800_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 0)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED st,stm32-pwm
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0_STRING_TOKEN st_stm32_pwm
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_STM32_PWM
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timers_40014800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_four_channel_capture_support 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_four_channel_capture_support_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_flash_controller           DT_N_S_soc_S_flash_controller_40023c00
#define DT_CHOSEN_zephyr_flash_controller_EXISTS    1
#define DT_CHOSEN_zephyr_cortex_m_idle_timer        DT_N_S_soc_S_rtc_40002800
#define DT_CHOSEN_zephyr_cortex_m_idle_timer_EXISTS 1
#define DT_CHOSEN_zephyr_console                    DT_N_S_soc_S_serial_40004400
#define DT_CHOSEN_zephyr_console_EXISTS             1
#define DT_CHOSEN_zephyr_shell_uart                 DT_N_S_soc_S_serial_40004400
#define DT_CHOSEN_zephyr_shell_uart_EXISTS          1
#define DT_CHOSEN_zephyr_uart_mcumgr                DT_N_S_soc_S_serial_40004400
#define DT_CHOSEN_zephyr_uart_mcumgr_EXISTS         1
#define DT_CHOSEN_zephyr_sram                       DT_N_S_memory_20000000
#define DT_CHOSEN_zephyr_sram_EXISTS                1
#define DT_CHOSEN_zephyr_flash                      DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000
#define DT_CHOSEN_zephyr_flash_EXISTS               1
#define DT_CHOSEN_zephyr_code_partition             DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000
#define DT_CHOSEN_zephyr_code_partition_EXISTS      1

/* Macros for iterating over all nodes and enabled nodes */
#define DT_FOREACH_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40023c00) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000) fn(DT_N_S_soc_S_rcc_40023800) fn(DT_N_S_soc_S_rcc_40023800_S_reset_controller) fn(DT_N_S_soc_S_interrupt_controller_40013c00) fn(DT_N_S_soc_S_pin_controller_40020000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12) fn(DT_N_S_soc_S_watchdog_40003000) fn(DT_N_S_soc_S_watchdog_40002c00) fn(DT_N_S_soc_S_serial_40011000) fn(DT_N_S_soc_S_serial_40004400) fn(DT_N_S_soc_S_serial_40011400) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19) fn(DT_N_S_soc_S_i2c_40005800) fn(DT_N_S_soc_S_i2c_40005c00) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_usb_50000000) fn(DT_N_S_soc_S_timers_40010000) fn(DT_N_S_soc_S_timers_40010000_S_pwm) fn(DT_N_S_soc_S_timers_40010000_S_qdec) fn(DT_N_S_soc_S_timers_40000000) fn(DT_N_S_soc_S_timers_40000000_S_pwm) fn(DT_N_S_soc_S_timers_40000000_S_counter) fn(DT_N_S_soc_S_timers_40000000_S_qdec) fn(DT_N_S_soc_S_timers_40000400) fn(DT_N_S_soc_S_timers_40000400_S_pwm) fn(DT_N_S_soc_S_timers_40000400_S_counter) fn(DT_N_S_soc_S_timers_40000400_S_qdec) fn(DT_N_S_soc_S_timers_40000800) fn(DT_N_S_soc_S_timers_40000800_S_pwm) fn(DT_N_S_soc_S_timers_40000800_S_counter) fn(DT_N_S_soc_S_timers_40000800_S_qdec) fn(DT_N_S_soc_S_timers_40000c00) fn(DT_N_S_soc_S_timers_40000c00_S_pwm) fn(DT_N_S_soc_S_timers_40000c00_S_counter) fn(DT_N_S_soc_S_timers_40000c00_S_qdec) fn(DT_N_S_soc_S_timers_40014000) fn(DT_N_S_soc_S_timers_40014000_S_pwm) fn(DT_N_S_soc_S_timers_40014000_S_counter) fn(DT_N_S_soc_S_timers_40014400) fn(DT_N_S_soc_S_timers_40014400_S_pwm) fn(DT_N_S_soc_S_timers_40014400_S_counter) fn(DT_N_S_soc_S_timers_40014800) fn(DT_N_S_soc_S_timers_40014800_S_pwm) fn(DT_N_S_soc_S_timers_40014800_S_counter) fn(DT_N_S_soc_S_rtc_40002800) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs) fn(DT_N_S_soc_S_adc_40012000) fn(DT_N_S_soc_S_dma_40026000) fn(DT_N_S_soc_S_dma_40026400) fn(DT_N_S_soc_S_sdmmc_40012c00) fn(DT_N_S_soc_S_spi_40003800) fn(DT_N_S_soc_S_spi_40003c00) fn(DT_N_S_soc_S_spi_40013400) fn(DT_N_S_soc_S_i2s_40003800) fn(DT_N_S_soc_S_i2s_40003c00) fn(DT_N_S_soc_S_spi_40015000) fn(DT_N_S_soc_S_i2s_40013000) fn(DT_N_S_soc_S_i2s_40013400) fn(DT_N_S_soc_S_i2s_40015000) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_power_states) fn(DT_N_S_cpus_S_power_states_S_stop) fn(DT_N_S_memory_20000000) fn(DT_N_S_clocks) fn(DT_N_S_clocks_S_clk_hse) fn(DT_N_S_clocks_S_clk_hsi) fn(DT_N_S_clocks_S_clk_lse) fn(DT_N_S_clocks_S_clk_lsi) fn(DT_N_S_clocks_S_pll) fn(DT_N_S_clocks_S_plli2s) fn(DT_N_S_dietemp) fn(DT_N_S_vref) fn(DT_N_S_vbat) fn(DT_N_S_otgfs_phy) fn(DT_N_S_smbus1) fn(DT_N_S_smbus2) fn(DT_N_S_smbus3) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_3) fn(DT_N_S_leds_S_led_4) fn(DT_N_S_leds_S_led_5) fn(DT_N_S_leds_S_led_6) fn(DT_N_S_pwmleds) fn(DT_N_S_pwmleds_S_green_pwm_led) fn(DT_N_S_pwmleds_S_orange_pwm_led) fn(DT_N_S_pwmleds_S_red_pwm_led) fn(DT_N_S_pwmleds_S_blue_pwm_led) fn(DT_N_S_gpio_keys) fn(DT_N_S_gpio_keys_S_button)
#define DT_FOREACH_OKAY_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40023c00) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000) fn(DT_N_S_soc_S_rcc_40023800) fn(DT_N_S_soc_S_rcc_40023800_S_reset_controller) fn(DT_N_S_soc_S_interrupt_controller_40013c00) fn(DT_N_S_soc_S_pin_controller_40020000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12) fn(DT_N_S_soc_S_serial_40004400) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19) fn(DT_N_S_soc_S_usb_50000000) fn(DT_N_S_soc_S_timers_40000800) fn(DT_N_S_soc_S_timers_40000800_S_pwm) fn(DT_N_S_soc_S_rtc_40002800) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_power_states) fn(DT_N_S_cpus_S_power_states_S_stop) fn(DT_N_S_memory_20000000) fn(DT_N_S_clocks) fn(DT_N_S_clocks_S_clk_hse) fn(DT_N_S_clocks_S_clk_lsi) fn(DT_N_S_clocks_S_pll) fn(DT_N_S_otgfs_phy) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_3) fn(DT_N_S_leds_S_led_4) fn(DT_N_S_leds_S_led_5) fn(DT_N_S_leds_S_led_6) fn(DT_N_S_pwmleds) fn(DT_N_S_pwmleds_S_green_pwm_led) fn(DT_N_S_pwmleds_S_orange_pwm_led) fn(DT_N_S_pwmleds_S_red_pwm_led) fn(DT_N_S_pwmleds_S_blue_pwm_led) fn(DT_N_S_gpio_keys) fn(DT_N_S_gpio_keys_S_button)
#define DT_FOREACH_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40023c00, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_40023800, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_40023800_S_reset_controller, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_40013c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40002c00, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40011000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40011400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005c00, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_usb_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40010000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40010000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40010000_S_qdec, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000_S_qdec, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400_S_qdec, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800_S_qdec, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000c00, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000c00_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000c00_S_qdec, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014000_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014400_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014800_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014800_S_counter, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40002800, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40002800_S_backup_regs, __VA_ARGS__) fn(DT_N_S_soc_S_adc_40012000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40026000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40026400, __VA_ARGS__) fn(DT_N_S_soc_S_sdmmc_40012c00, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003c00, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013400, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_40003800, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_40003c00, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_40013400, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_40015000, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_stop, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hsi, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lsi, __VA_ARGS__) fn(DT_N_S_clocks_S_pll, __VA_ARGS__) fn(DT_N_S_clocks_S_plli2s, __VA_ARGS__) fn(DT_N_S_dietemp, __VA_ARGS__) fn(DT_N_S_vref, __VA_ARGS__) fn(DT_N_S_vbat, __VA_ARGS__) fn(DT_N_S_otgfs_phy, __VA_ARGS__) fn(DT_N_S_smbus1, __VA_ARGS__) fn(DT_N_S_smbus2, __VA_ARGS__) fn(DT_N_S_smbus3, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_3, __VA_ARGS__) fn(DT_N_S_leds_S_led_4, __VA_ARGS__) fn(DT_N_S_leds_S_led_5, __VA_ARGS__) fn(DT_N_S_leds_S_led_6, __VA_ARGS__) fn(DT_N_S_pwmleds, __VA_ARGS__) fn(DT_N_S_pwmleds_S_green_pwm_led, __VA_ARGS__) fn(DT_N_S_pwmleds_S_orange_pwm_led, __VA_ARGS__) fn(DT_N_S_pwmleds_S_red_pwm_led, __VA_ARGS__) fn(DT_N_S_pwmleds_S_blue_pwm_led, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__)
#define DT_FOREACH_OKAY_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40023c00, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_40023800, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_40023800_S_reset_controller, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_40013c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, __VA_ARGS__) fn(DT_N_S_soc_S_usb_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40002800, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_stop, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lsi, __VA_ARGS__) fn(DT_N_S_clocks_S_pll, __VA_ARGS__) fn(DT_N_S_otgfs_phy, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_3, __VA_ARGS__) fn(DT_N_S_leds_S_led_4, __VA_ARGS__) fn(DT_N_S_leds_S_led_5, __VA_ARGS__) fn(DT_N_S_leds_S_led_6, __VA_ARGS__) fn(DT_N_S_pwmleds, __VA_ARGS__) fn(DT_N_S_pwmleds_S_green_pwm_led, __VA_ARGS__) fn(DT_N_S_pwmleds_S_orange_pwm_led, __VA_ARGS__) fn(DT_N_S_pwmleds_S_red_pwm_led, __VA_ARGS__) fn(DT_N_S_pwmleds_S_blue_pwm_led, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__)
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_0
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_0 DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_20000
#define DT_COMPAT_fixed_partitions_LABEL_image_0_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_1 DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_40000
#define DT_COMPAT_fixed_partitions_LABEL_image_1_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_scratch DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions_S_partition_60000
#define DT_COMPAT_fixed_partitions_LABEL_image_scratch_EXISTS 1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_st_stm32f411e_disco 1
#define DT_COMPAT_HAS_OKAY_st_stm32f411 1
#define DT_COMPAT_HAS_OKAY_st_stm32f4 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v7m_nvic 1
#define DT_COMPAT_HAS_OKAY_arm_armv7m_systick 1
#define DT_COMPAT_HAS_OKAY_st_stm32_flash_controller 1
#define DT_COMPAT_HAS_OKAY_st_stm32f4_flash_controller 1
#define DT_COMPAT_HAS_OKAY_st_stm32f4_nv_flash 1
#define DT_COMPAT_HAS_OKAY_st_stm32_nv_flash 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_fixed_partitions 1
#define DT_COMPAT_HAS_OKAY_st_stm32_rcc 1
#define DT_COMPAT_HAS_OKAY_st_stm32_rcc_rctl 1
#define DT_COMPAT_HAS_OKAY_st_stm32_exti 1
#define DT_COMPAT_HAS_OKAY_st_stm32_pinctrl 1
#define DT_COMPAT_HAS_OKAY_st_stm32_gpio 1
#define DT_COMPAT_HAS_OKAY_st_stm32_usart 1
#define DT_COMPAT_HAS_OKAY_st_stm32_uart 1
#define DT_COMPAT_HAS_OKAY_st_stm32_i2c_v1 1
#define DT_COMPAT_HAS_OKAY_st_lis2mdl 1
#define DT_COMPAT_HAS_OKAY_st_lsm303agr_magn 1
#define DT_COMPAT_HAS_OKAY_st_lis2dh 1
#define DT_COMPAT_HAS_OKAY_st_lsm303agr_accel 1
#define DT_COMPAT_HAS_OKAY_st_stm32_otgfs 1
#define DT_COMPAT_HAS_OKAY_st_stm32_timers 1
#define DT_COMPAT_HAS_OKAY_st_stm32_pwm 1
#define DT_COMPAT_HAS_OKAY_st_stm32_rtc 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m4f 1
#define DT_COMPAT_HAS_OKAY_zephyr_power_state 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_st_stm32_hse_clock 1
#define DT_COMPAT_HAS_OKAY_fixed_clock 1
#define DT_COMPAT_HAS_OKAY_st_stm32f4_pll_clock 1
#define DT_COMPAT_HAS_OKAY_usb_nop_xceiv 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1
#define DT_COMPAT_HAS_OKAY_pwm_leds 1
#define DT_COMPAT_HAS_OKAY_gpio_keys 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_st_stm32f411e_disco_NUM_OKAY 1
#define DT_N_INST_st_stm32f411_NUM_OKAY 1
#define DT_N_INST_st_stm32f4_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v7m_nvic_NUM_OKAY 1
#define DT_N_INST_arm_armv7m_systick_NUM_OKAY 1
#define DT_N_INST_st_stm32_flash_controller_NUM_OKAY 1
#define DT_N_INST_st_stm32f4_flash_controller_NUM_OKAY 1
#define DT_N_INST_st_stm32f4_nv_flash_NUM_OKAY 1
#define DT_N_INST_st_stm32_nv_flash_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_fixed_partitions_NUM_OKAY 1
#define DT_N_INST_st_stm32_rcc_NUM_OKAY 1
#define DT_N_INST_st_stm32_rcc_rctl_NUM_OKAY 1
#define DT_N_INST_st_stm32_exti_NUM_OKAY 1
#define DT_N_INST_st_stm32_pinctrl_NUM_OKAY 1
#define DT_N_INST_st_stm32_gpio_NUM_OKAY 8
#define DT_N_INST_st_stm32_usart_NUM_OKAY 1
#define DT_N_INST_st_stm32_uart_NUM_OKAY 1
#define DT_N_INST_st_stm32_i2c_v1_NUM_OKAY 1
#define DT_N_INST_st_lis2mdl_NUM_OKAY 1
#define DT_N_INST_st_lsm303agr_magn_NUM_OKAY 1
#define DT_N_INST_st_lis2dh_NUM_OKAY 1
#define DT_N_INST_st_lsm303agr_accel_NUM_OKAY 1
#define DT_N_INST_st_stm32_otgfs_NUM_OKAY 1
#define DT_N_INST_st_stm32_timers_NUM_OKAY 1
#define DT_N_INST_st_stm32_pwm_NUM_OKAY 1
#define DT_N_INST_st_stm32_rtc_NUM_OKAY 1
#define DT_N_INST_arm_cortex_m4f_NUM_OKAY 1
#define DT_N_INST_zephyr_power_state_NUM_OKAY 1
#define DT_N_INST_mmio_sram_NUM_OKAY 1
#define DT_N_INST_st_stm32_hse_clock_NUM_OKAY 1
#define DT_N_INST_fixed_clock_NUM_OKAY 1
#define DT_N_INST_st_stm32f4_pll_clock_NUM_OKAY 1
#define DT_N_INST_usb_nop_xceiv_NUM_OKAY 1
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_N_INST_pwm_leds_NUM_OKAY 1
#define DT_N_INST_gpio_keys_NUM_OKAY 1
#define DT_FOREACH_OKAY_st_stm32f411e_disco(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_st_stm32f411e_disco(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32f411e_disco(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32f411e_disco(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32f411(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_st_stm32f411(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32f411(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32f411(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32f4(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_st_stm32f4(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32f4(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32f4(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_v7m_nvic(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100)
#define DT_FOREACH_OKAY_VARGS_arm_v7m_nvic(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_v7m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_v7m_nvic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv7m_systick(fn) fn(DT_N_S_soc_S_timer_e000e010)
#define DT_FOREACH_OKAY_VARGS_arm_armv7m_systick(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv7m_systick(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv7m_systick(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_40023c00)
#define DT_FOREACH_OKAY_VARGS_st_stm32_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32f4_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_40023c00)
#define DT_FOREACH_OKAY_VARGS_st_stm32f4_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32f4_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32f4_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32f4_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000)
#define DT_FOREACH_OKAY_VARGS_st_stm32f4_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32f4_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32f4_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_soc_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000)
#define DT_FOREACH_OKAY_VARGS_soc_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_soc_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_partitions(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions)
#define DT_FOREACH_OKAY_VARGS_fixed_partitions(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_S_partitions, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_partitions(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_partitions(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_rcc(fn) fn(DT_N_S_soc_S_rcc_40023800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_rcc(fn, ...) fn(DT_N_S_soc_S_rcc_40023800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_rcc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_rcc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_rcc_rctl(fn) fn(DT_N_S_soc_S_rcc_40023800_S_reset_controller)
#define DT_FOREACH_OKAY_VARGS_st_stm32_rcc_rctl(fn, ...) fn(DT_N_S_soc_S_rcc_40023800_S_reset_controller, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_rcc_rctl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_rcc_rctl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_exti(fn) fn(DT_N_S_soc_S_interrupt_controller_40013c00)
#define DT_FOREACH_OKAY_VARGS_st_stm32_exti(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_40013c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_exti(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_exti(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_pinctrl(fn) fn(DT_N_S_soc_S_pin_controller_40020000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_pinctrl(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_gpio(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00)
#define DT_FOREACH_OKAY_VARGS_st_stm32_gpio(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_gpio(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5) fn(6) fn(7)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_gpio(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__) fn(6, __VA_ARGS__) fn(7, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_usart(fn) fn(DT_N_S_soc_S_serial_40004400)
#define DT_FOREACH_OKAY_VARGS_st_stm32_usart(fn, ...) fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_usart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_usart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_uart(fn) fn(DT_N_S_soc_S_serial_40004400)
#define DT_FOREACH_OKAY_VARGS_st_stm32_uart(fn, ...) fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_uart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_uart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_i2c_v1(fn) fn(DT_N_S_soc_S_i2c_40005400)
#define DT_FOREACH_OKAY_VARGS_st_stm32_i2c_v1(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_i2c_v1(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_i2c_v1(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_lis2mdl(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e)
#define DT_FOREACH_OKAY_VARGS_st_lis2mdl(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_lis2mdl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_lis2mdl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_lsm303agr_magn(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e)
#define DT_FOREACH_OKAY_VARGS_st_lsm303agr_magn(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_magn_1e, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_lsm303agr_magn(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_lsm303agr_magn(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_lis2dh(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19)
#define DT_FOREACH_OKAY_VARGS_st_lis2dh(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_lis2dh(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_lis2dh(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_lsm303agr_accel(fn) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19)
#define DT_FOREACH_OKAY_VARGS_st_lsm303agr_accel(fn, ...) fn(DT_N_S_soc_S_i2c_40005400_S_lsm303agr_accel_19, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_lsm303agr_accel(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_lsm303agr_accel(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_otgfs(fn) fn(DT_N_S_soc_S_usb_50000000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_otgfs(fn, ...) fn(DT_N_S_soc_S_usb_50000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_otgfs(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_otgfs(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_timers(fn) fn(DT_N_S_soc_S_timers_40000800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_timers(fn, ...) fn(DT_N_S_soc_S_timers_40000800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_timers(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_timers(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_pwm(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm)
#define DT_FOREACH_OKAY_VARGS_st_stm32_pwm(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_pwm(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_pwm(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_rtc(fn) fn(DT_N_S_soc_S_rtc_40002800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_rtc(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_rtc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_rtc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_m4f(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_m4f(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_m4f(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_m4f(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_power_state(fn) fn(DT_N_S_cpus_S_power_states_S_stop)
#define DT_FOREACH_OKAY_VARGS_zephyr_power_state(fn, ...) fn(DT_N_S_cpus_S_power_states_S_stop, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_power_state(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_power_state(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_memory_20000000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_memory_20000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_hse_clock(fn) fn(DT_N_S_clocks_S_clk_hse)
#define DT_FOREACH_OKAY_VARGS_st_stm32_hse_clock(fn, ...) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_hse_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_hse_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_clock(fn) fn(DT_N_S_clocks_S_clk_lsi)
#define DT_FOREACH_OKAY_VARGS_fixed_clock(fn, ...) fn(DT_N_S_clocks_S_clk_lsi, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32f4_pll_clock(fn) fn(DT_N_S_clocks_S_pll)
#define DT_FOREACH_OKAY_VARGS_st_stm32f4_pll_clock(fn, ...) fn(DT_N_S_clocks_S_pll, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32f4_pll_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32f4_pll_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_usb_nop_xceiv(fn) fn(DT_N_S_otgfs_phy)
#define DT_FOREACH_OKAY_VARGS_usb_nop_xceiv(fn, ...) fn(DT_N_S_otgfs_phy, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_usb_nop_xceiv(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_usb_nop_xceiv(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_leds(fn) fn(DT_N_S_leds)
#define DT_FOREACH_OKAY_VARGS_gpio_leds(fn, ...) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_pwm_leds(fn) fn(DT_N_S_pwmleds)
#define DT_FOREACH_OKAY_VARGS_pwm_leds(fn, ...) fn(DT_N_S_pwmleds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_pwm_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_pwm_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_keys(fn) fn(DT_N_S_gpio_keys)
#define DT_FOREACH_OKAY_VARGS_gpio_keys(fn, ...) fn(DT_N_S_gpio_keys, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_keys(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_keys(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
#define DT_COMPAT_st_lis2mdl_BUS_i2c 1
#define DT_COMPAT_st_lsm303agr_magn_BUS_i2c 1
#define DT_COMPAT_st_lis2dh_BUS_i2c 1
#define DT_COMPAT_st_lsm303agr_accel_BUS_i2c 1
